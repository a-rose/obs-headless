// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: studio.proto
#ifndef GRPC_studio_2eproto__INCLUDED
#define GRPC_studio_2eproto__INCLUDED

#include "studio.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace proto {

// ////////////
// SERVICES //
// ////////////
//
// Studio contains all the available studio procedures
class Studio final {
 public:
  static constexpr char const* service_full_name() {
    return "proto.Studio";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Studio
    virtual ::grpc::Status StudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::proto::StudioGetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StudioGetResponse>> AsyncStudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StudioGetResponse>>(AsyncStudioGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StudioGetResponse>> PrepareAsyncStudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StudioGetResponse>>(PrepareAsyncStudioGetRaw(context, request, cq));
    }
    virtual ::grpc::Status StudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStudioStartRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStudioStartRaw(context, request, cq));
    }
    virtual ::grpc::Status StudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStudioStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStudioStopRaw(context, request, cq));
    }
    // Show
    virtual ::grpc::Status ShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::proto::ShowGetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowGetResponse>> AsyncShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowGetResponse>>(AsyncShowGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowGetResponse>> PrepareAsyncShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowGetResponse>>(PrepareAsyncShowGetRaw(context, request, cq));
    }
    virtual ::grpc::Status ShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::proto::ShowCreateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowCreateResponse>> AsyncShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowCreateResponse>>(AsyncShowCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowCreateResponse>> PrepareAsyncShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowCreateResponse>>(PrepareAsyncShowCreateRaw(context, request, cq));
    }
    virtual ::grpc::Status ShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::proto::ShowDuplicateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowDuplicateResponse>> AsyncShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowDuplicateResponse>>(AsyncShowDuplicateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowDuplicateResponse>> PrepareAsyncShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowDuplicateResponse>>(PrepareAsyncShowDuplicateRaw(context, request, cq));
    }
    virtual ::grpc::Status ShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncShowRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncShowRemoveRaw(context, request, cq));
    }
    virtual ::grpc::Status ShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::proto::ShowLoadResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowLoadResponse>> AsyncShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowLoadResponse>>(AsyncShowLoadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowLoadResponse>> PrepareAsyncShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowLoadResponse>>(PrepareAsyncShowLoadRaw(context, request, cq));
    }
    // Scene
    virtual ::grpc::Status SceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::proto::SceneGetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetResponse>> AsyncSceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetResponse>>(AsyncSceneGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetResponse>> PrepareAsyncSceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetResponse>>(PrepareAsyncSceneGetRaw(context, request, cq));
    }
    virtual ::grpc::Status SceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::proto::SceneAddResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneAddResponse>> AsyncSceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneAddResponse>>(AsyncSceneAddRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneAddResponse>> PrepareAsyncSceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneAddResponse>>(PrepareAsyncSceneAddRaw(context, request, cq));
    }
    virtual ::grpc::Status SceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::proto::SceneDuplicateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneDuplicateResponse>> AsyncSceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneDuplicateResponse>>(AsyncSceneDuplicateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneDuplicateResponse>> PrepareAsyncSceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneDuplicateResponse>>(PrepareAsyncSceneDuplicateRaw(context, request, cq));
    }
    virtual ::grpc::Status SceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSceneRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSceneRemoveRaw(context, request, cq));
    }
    virtual ::grpc::Status SceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::proto::SceneSetAsCurrentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneSetAsCurrentResponse>> AsyncSceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneSetAsCurrentResponse>>(AsyncSceneSetAsCurrentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneSetAsCurrentResponse>> PrepareAsyncSceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneSetAsCurrentResponse>>(PrepareAsyncSceneSetAsCurrentRaw(context, request, cq));
    }
    virtual ::grpc::Status SceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::proto::SceneGetCurrentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetCurrentResponse>> AsyncSceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetCurrentResponse>>(AsyncSceneGetCurrentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetCurrentResponse>> PrepareAsyncSceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetCurrentResponse>>(PrepareAsyncSceneGetCurrentRaw(context, request, cq));
    }
    // Source
    virtual ::grpc::Status SourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::proto::SourceGetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceGetResponse>> AsyncSourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceGetResponse>>(AsyncSourceGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceGetResponse>> PrepareAsyncSourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceGetResponse>>(PrepareAsyncSourceGetRaw(context, request, cq));
    }
    virtual ::grpc::Status SourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::proto::SourceAddResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceAddResponse>> AsyncSourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceAddResponse>>(AsyncSourceAddRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceAddResponse>> PrepareAsyncSourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceAddResponse>>(PrepareAsyncSourceAddRaw(context, request, cq));
    }
    virtual ::grpc::Status SourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::proto::SourceDuplicateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceDuplicateResponse>> AsyncSourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceDuplicateResponse>>(AsyncSourceDuplicateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceDuplicateResponse>> PrepareAsyncSourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceDuplicateResponse>>(PrepareAsyncSourceDuplicateRaw(context, request, cq));
    }
    virtual ::grpc::Status SourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSourceRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSourceRemoveRaw(context, request, cq));
    }
    virtual ::grpc::Status SourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::proto::SourceSetPropertiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceSetPropertiesResponse>> AsyncSourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceSetPropertiesResponse>>(AsyncSourceSetPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceSetPropertiesResponse>> PrepareAsyncSourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceSetPropertiesResponse>>(PrepareAsyncSourceSetPropertiesRaw(context, request, cq));
    }
    virtual ::grpc::Status Health(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::proto::HealthResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::HealthResponse>> AsyncHealth(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::HealthResponse>>(AsyncHealthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::HealthResponse>> PrepareAsyncHealth(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::HealthResponse>>(PrepareAsyncHealthRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Studio
      virtual void StudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      // Show
      virtual void ShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Scene
      virtual void SceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Source
      virtual void SourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Health(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StudioGetResponse>* AsyncStudioGetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StudioGetResponse>* PrepareAsyncStudioGetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStudioStartRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStudioStartRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStudioStopRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStudioStopRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowGetResponse>* AsyncShowGetRaw(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowGetResponse>* PrepareAsyncShowGetRaw(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowCreateResponse>* AsyncShowCreateRaw(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowCreateResponse>* PrepareAsyncShowCreateRaw(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowDuplicateResponse>* AsyncShowDuplicateRaw(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowDuplicateResponse>* PrepareAsyncShowDuplicateRaw(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncShowRemoveRaw(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncShowRemoveRaw(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowLoadResponse>* AsyncShowLoadRaw(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ShowLoadResponse>* PrepareAsyncShowLoadRaw(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetResponse>* AsyncSceneGetRaw(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetResponse>* PrepareAsyncSceneGetRaw(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneAddResponse>* AsyncSceneAddRaw(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneAddResponse>* PrepareAsyncSceneAddRaw(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneDuplicateResponse>* AsyncSceneDuplicateRaw(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneDuplicateResponse>* PrepareAsyncSceneDuplicateRaw(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSceneRemoveRaw(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSceneRemoveRaw(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneSetAsCurrentResponse>* AsyncSceneSetAsCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneSetAsCurrentResponse>* PrepareAsyncSceneSetAsCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetCurrentResponse>* AsyncSceneGetCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SceneGetCurrentResponse>* PrepareAsyncSceneGetCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceGetResponse>* AsyncSourceGetRaw(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceGetResponse>* PrepareAsyncSourceGetRaw(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceAddResponse>* AsyncSourceAddRaw(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceAddResponse>* PrepareAsyncSourceAddRaw(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceDuplicateResponse>* AsyncSourceDuplicateRaw(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceDuplicateResponse>* PrepareAsyncSourceDuplicateRaw(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSourceRemoveRaw(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSourceRemoveRaw(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceSetPropertiesResponse>* AsyncSourceSetPropertiesRaw(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::SourceSetPropertiesResponse>* PrepareAsyncSourceSetPropertiesRaw(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::HealthResponse>* AsyncHealthRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::HealthResponse>* PrepareAsyncHealthRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status StudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::proto::StudioGetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StudioGetResponse>> AsyncStudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StudioGetResponse>>(AsyncStudioGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StudioGetResponse>> PrepareAsyncStudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StudioGetResponse>>(PrepareAsyncStudioGetRaw(context, request, cq));
    }
    ::grpc::Status StudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStudioStartRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStudioStartRaw(context, request, cq));
    }
    ::grpc::Status StudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStudioStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStudioStopRaw(context, request, cq));
    }
    ::grpc::Status ShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::proto::ShowGetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowGetResponse>> AsyncShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowGetResponse>>(AsyncShowGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowGetResponse>> PrepareAsyncShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowGetResponse>>(PrepareAsyncShowGetRaw(context, request, cq));
    }
    ::grpc::Status ShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::proto::ShowCreateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowCreateResponse>> AsyncShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowCreateResponse>>(AsyncShowCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowCreateResponse>> PrepareAsyncShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowCreateResponse>>(PrepareAsyncShowCreateRaw(context, request, cq));
    }
    ::grpc::Status ShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::proto::ShowDuplicateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowDuplicateResponse>> AsyncShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowDuplicateResponse>>(AsyncShowDuplicateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowDuplicateResponse>> PrepareAsyncShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowDuplicateResponse>>(PrepareAsyncShowDuplicateRaw(context, request, cq));
    }
    ::grpc::Status ShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncShowRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncShowRemoveRaw(context, request, cq));
    }
    ::grpc::Status ShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::proto::ShowLoadResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowLoadResponse>> AsyncShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowLoadResponse>>(AsyncShowLoadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowLoadResponse>> PrepareAsyncShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ShowLoadResponse>>(PrepareAsyncShowLoadRaw(context, request, cq));
    }
    ::grpc::Status SceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::proto::SceneGetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetResponse>> AsyncSceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetResponse>>(AsyncSceneGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetResponse>> PrepareAsyncSceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetResponse>>(PrepareAsyncSceneGetRaw(context, request, cq));
    }
    ::grpc::Status SceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::proto::SceneAddResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneAddResponse>> AsyncSceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneAddResponse>>(AsyncSceneAddRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneAddResponse>> PrepareAsyncSceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneAddResponse>>(PrepareAsyncSceneAddRaw(context, request, cq));
    }
    ::grpc::Status SceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::proto::SceneDuplicateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneDuplicateResponse>> AsyncSceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneDuplicateResponse>>(AsyncSceneDuplicateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneDuplicateResponse>> PrepareAsyncSceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneDuplicateResponse>>(PrepareAsyncSceneDuplicateRaw(context, request, cq));
    }
    ::grpc::Status SceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSceneRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSceneRemoveRaw(context, request, cq));
    }
    ::grpc::Status SceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::proto::SceneSetAsCurrentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneSetAsCurrentResponse>> AsyncSceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneSetAsCurrentResponse>>(AsyncSceneSetAsCurrentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneSetAsCurrentResponse>> PrepareAsyncSceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneSetAsCurrentResponse>>(PrepareAsyncSceneSetAsCurrentRaw(context, request, cq));
    }
    ::grpc::Status SceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::proto::SceneGetCurrentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetCurrentResponse>> AsyncSceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetCurrentResponse>>(AsyncSceneGetCurrentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetCurrentResponse>> PrepareAsyncSceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SceneGetCurrentResponse>>(PrepareAsyncSceneGetCurrentRaw(context, request, cq));
    }
    ::grpc::Status SourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::proto::SourceGetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceGetResponse>> AsyncSourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceGetResponse>>(AsyncSourceGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceGetResponse>> PrepareAsyncSourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceGetResponse>>(PrepareAsyncSourceGetRaw(context, request, cq));
    }
    ::grpc::Status SourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::proto::SourceAddResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceAddResponse>> AsyncSourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceAddResponse>>(AsyncSourceAddRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceAddResponse>> PrepareAsyncSourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceAddResponse>>(PrepareAsyncSourceAddRaw(context, request, cq));
    }
    ::grpc::Status SourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::proto::SourceDuplicateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceDuplicateResponse>> AsyncSourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceDuplicateResponse>>(AsyncSourceDuplicateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceDuplicateResponse>> PrepareAsyncSourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceDuplicateResponse>>(PrepareAsyncSourceDuplicateRaw(context, request, cq));
    }
    ::grpc::Status SourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSourceRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSourceRemoveRaw(context, request, cq));
    }
    ::grpc::Status SourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::proto::SourceSetPropertiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceSetPropertiesResponse>> AsyncSourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceSetPropertiesResponse>>(AsyncSourceSetPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceSetPropertiesResponse>> PrepareAsyncSourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::SourceSetPropertiesResponse>>(PrepareAsyncSourceSetPropertiesRaw(context, request, cq));
    }
    ::grpc::Status Health(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::proto::HealthResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::HealthResponse>> AsyncHealth(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::HealthResponse>>(AsyncHealthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::HealthResponse>> PrepareAsyncHealth(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::HealthResponse>>(PrepareAsyncHealthRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void StudioGet(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response, std::function<void(::grpc::Status)>) override;
      void StudioStart(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StudioStop(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ShowGet(::grpc::ClientContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response, std::function<void(::grpc::Status)>) override;
      void ShowCreate(::grpc::ClientContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response, std::function<void(::grpc::Status)>) override;
      void ShowDuplicate(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response, std::function<void(::grpc::Status)>) override;
      void ShowRemove(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ShowLoad(::grpc::ClientContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response, std::function<void(::grpc::Status)>) override;
      void SceneGet(::grpc::ClientContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response, std::function<void(::grpc::Status)>) override;
      void SceneAdd(::grpc::ClientContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response, std::function<void(::grpc::Status)>) override;
      void SceneDuplicate(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response, std::function<void(::grpc::Status)>) override;
      void SceneRemove(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SceneSetAsCurrent(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response, std::function<void(::grpc::Status)>) override;
      void SceneGetCurrent(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response, std::function<void(::grpc::Status)>) override;
      void SourceGet(::grpc::ClientContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response, std::function<void(::grpc::Status)>) override;
      void SourceAdd(::grpc::ClientContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response, std::function<void(::grpc::Status)>) override;
      void SourceDuplicate(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response, std::function<void(::grpc::Status)>) override;
      void SourceRemove(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SourceSetProperties(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response, std::function<void(::grpc::Status)>) override;
      void Health(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::proto::StudioGetResponse>* AsyncStudioGetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::StudioGetResponse>* PrepareAsyncStudioGetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStudioStartRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStudioStartRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStudioStopRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStudioStopRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowGetResponse>* AsyncShowGetRaw(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowGetResponse>* PrepareAsyncShowGetRaw(::grpc::ClientContext* context, const ::proto::ShowGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowCreateResponse>* AsyncShowCreateRaw(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowCreateResponse>* PrepareAsyncShowCreateRaw(::grpc::ClientContext* context, const ::proto::ShowCreateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowDuplicateResponse>* AsyncShowDuplicateRaw(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowDuplicateResponse>* PrepareAsyncShowDuplicateRaw(::grpc::ClientContext* context, const ::proto::ShowDuplicateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncShowRemoveRaw(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncShowRemoveRaw(::grpc::ClientContext* context, const ::proto::ShowRemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowLoadResponse>* AsyncShowLoadRaw(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ShowLoadResponse>* PrepareAsyncShowLoadRaw(::grpc::ClientContext* context, const ::proto::ShowLoadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneGetResponse>* AsyncSceneGetRaw(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneGetResponse>* PrepareAsyncSceneGetRaw(::grpc::ClientContext* context, const ::proto::SceneGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneAddResponse>* AsyncSceneAddRaw(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneAddResponse>* PrepareAsyncSceneAddRaw(::grpc::ClientContext* context, const ::proto::SceneAddRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneDuplicateResponse>* AsyncSceneDuplicateRaw(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneDuplicateResponse>* PrepareAsyncSceneDuplicateRaw(::grpc::ClientContext* context, const ::proto::SceneDuplicateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSceneRemoveRaw(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSceneRemoveRaw(::grpc::ClientContext* context, const ::proto::SceneRemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneSetAsCurrentResponse>* AsyncSceneSetAsCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneSetAsCurrentResponse>* PrepareAsyncSceneSetAsCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneSetAsCurrentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneGetCurrentResponse>* AsyncSceneGetCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SceneGetCurrentResponse>* PrepareAsyncSceneGetCurrentRaw(::grpc::ClientContext* context, const ::proto::SceneGetCurrentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceGetResponse>* AsyncSourceGetRaw(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceGetResponse>* PrepareAsyncSourceGetRaw(::grpc::ClientContext* context, const ::proto::SourceGetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceAddResponse>* AsyncSourceAddRaw(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceAddResponse>* PrepareAsyncSourceAddRaw(::grpc::ClientContext* context, const ::proto::SourceAddRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceDuplicateResponse>* AsyncSourceDuplicateRaw(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceDuplicateResponse>* PrepareAsyncSourceDuplicateRaw(::grpc::ClientContext* context, const ::proto::SourceDuplicateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSourceRemoveRaw(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSourceRemoveRaw(::grpc::ClientContext* context, const ::proto::SourceRemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceSetPropertiesResponse>* AsyncSourceSetPropertiesRaw(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::SourceSetPropertiesResponse>* PrepareAsyncSourceSetPropertiesRaw(::grpc::ClientContext* context, const ::proto::SourceSetPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::HealthResponse>* AsyncHealthRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::HealthResponse>* PrepareAsyncHealthRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_StudioGet_;
    const ::grpc::internal::RpcMethod rpcmethod_StudioStart_;
    const ::grpc::internal::RpcMethod rpcmethod_StudioStop_;
    const ::grpc::internal::RpcMethod rpcmethod_ShowGet_;
    const ::grpc::internal::RpcMethod rpcmethod_ShowCreate_;
    const ::grpc::internal::RpcMethod rpcmethod_ShowDuplicate_;
    const ::grpc::internal::RpcMethod rpcmethod_ShowRemove_;
    const ::grpc::internal::RpcMethod rpcmethod_ShowLoad_;
    const ::grpc::internal::RpcMethod rpcmethod_SceneGet_;
    const ::grpc::internal::RpcMethod rpcmethod_SceneAdd_;
    const ::grpc::internal::RpcMethod rpcmethod_SceneDuplicate_;
    const ::grpc::internal::RpcMethod rpcmethod_SceneRemove_;
    const ::grpc::internal::RpcMethod rpcmethod_SceneSetAsCurrent_;
    const ::grpc::internal::RpcMethod rpcmethod_SceneGetCurrent_;
    const ::grpc::internal::RpcMethod rpcmethod_SourceGet_;
    const ::grpc::internal::RpcMethod rpcmethod_SourceAdd_;
    const ::grpc::internal::RpcMethod rpcmethod_SourceDuplicate_;
    const ::grpc::internal::RpcMethod rpcmethod_SourceRemove_;
    const ::grpc::internal::RpcMethod rpcmethod_SourceSetProperties_;
    const ::grpc::internal::RpcMethod rpcmethod_Health_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Studio
    virtual ::grpc::Status StudioGet(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response);
    virtual ::grpc::Status StudioStart(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StudioStop(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // Show
    virtual ::grpc::Status ShowGet(::grpc::ServerContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response);
    virtual ::grpc::Status ShowCreate(::grpc::ServerContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response);
    virtual ::grpc::Status ShowDuplicate(::grpc::ServerContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response);
    virtual ::grpc::Status ShowRemove(::grpc::ServerContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ShowLoad(::grpc::ServerContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response);
    // Scene
    virtual ::grpc::Status SceneGet(::grpc::ServerContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response);
    virtual ::grpc::Status SceneAdd(::grpc::ServerContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response);
    virtual ::grpc::Status SceneDuplicate(::grpc::ServerContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response);
    virtual ::grpc::Status SceneRemove(::grpc::ServerContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SceneSetAsCurrent(::grpc::ServerContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response);
    virtual ::grpc::Status SceneGetCurrent(::grpc::ServerContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response);
    // Source
    virtual ::grpc::Status SourceGet(::grpc::ServerContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response);
    virtual ::grpc::Status SourceAdd(::grpc::ServerContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response);
    virtual ::grpc::Status SourceDuplicate(::grpc::ServerContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response);
    virtual ::grpc::Status SourceRemove(::grpc::ServerContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SourceSetProperties(::grpc::ServerContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response);
    virtual ::grpc::Status Health(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_StudioGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StudioGet() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StudioGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioGet(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStudioGet(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::proto::StudioGetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StudioStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StudioStart() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_StudioStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioStart(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStudioStart(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StudioStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StudioStop() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_StudioStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioStop(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStudioStop(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowGet() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ShowGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowGet(::grpc::ServerContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowGet(::grpc::ServerContext* context, ::proto::ShowGetRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::ShowGetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowCreate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowCreate() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ShowCreate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCreate(::grpc::ServerContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowCreate(::grpc::ServerContext* context, ::proto::ShowCreateRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::ShowCreateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowDuplicate() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ShowDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowDuplicate(::grpc::ServerContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowDuplicate(::grpc::ServerContext* context, ::proto::ShowDuplicateRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::ShowDuplicateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowRemove() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ShowRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowRemove(::grpc::ServerContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowRemove(::grpc::ServerContext* context, ::proto::ShowRemoveRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowLoad() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ShowLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowLoad(::grpc::ServerContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowLoad(::grpc::ServerContext* context, ::proto::ShowLoadRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::ShowLoadResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SceneGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SceneGet() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SceneGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneGet(::grpc::ServerContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneGet(::grpc::ServerContext* context, ::proto::SceneGetRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SceneGetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SceneAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SceneAdd() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SceneAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneAdd(::grpc::ServerContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneAdd(::grpc::ServerContext* context, ::proto::SceneAddRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SceneAddResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SceneDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SceneDuplicate() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SceneDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneDuplicate(::grpc::ServerContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneDuplicate(::grpc::ServerContext* context, ::proto::SceneDuplicateRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SceneDuplicateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SceneRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SceneRemove() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_SceneRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneRemove(::grpc::ServerContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneRemove(::grpc::ServerContext* context, ::proto::SceneRemoveRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SceneSetAsCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SceneSetAsCurrent() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_SceneSetAsCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneSetAsCurrent(::grpc::ServerContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneSetAsCurrent(::grpc::ServerContext* context, ::proto::SceneSetAsCurrentRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SceneSetAsCurrentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SceneGetCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SceneGetCurrent() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SceneGetCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneGetCurrent(::grpc::ServerContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneGetCurrent(::grpc::ServerContext* context, ::proto::SceneGetCurrentRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SceneGetCurrentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SourceGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SourceGet() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_SourceGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceGet(::grpc::ServerContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceGet(::grpc::ServerContext* context, ::proto::SourceGetRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SourceGetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SourceAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SourceAdd() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SourceAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceAdd(::grpc::ServerContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceAdd(::grpc::ServerContext* context, ::proto::SourceAddRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SourceAddResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SourceDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SourceDuplicate() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_SourceDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceDuplicate(::grpc::ServerContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceDuplicate(::grpc::ServerContext* context, ::proto::SourceDuplicateRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SourceDuplicateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SourceRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SourceRemove() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_SourceRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceRemove(::grpc::ServerContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceRemove(::grpc::ServerContext* context, ::proto::SourceRemoveRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SourceSetProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SourceSetProperties() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_SourceSetProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceSetProperties(::grpc::ServerContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceSetProperties(::grpc::ServerContext* context, ::proto::SourceSetPropertiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::SourceSetPropertiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Health() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealth(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::proto::HealthResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StudioGet<WithAsyncMethod_StudioStart<WithAsyncMethod_StudioStop<WithAsyncMethod_ShowGet<WithAsyncMethod_ShowCreate<WithAsyncMethod_ShowDuplicate<WithAsyncMethod_ShowRemove<WithAsyncMethod_ShowLoad<WithAsyncMethod_SceneGet<WithAsyncMethod_SceneAdd<WithAsyncMethod_SceneDuplicate<WithAsyncMethod_SceneRemove<WithAsyncMethod_SceneSetAsCurrent<WithAsyncMethod_SceneGetCurrent<WithAsyncMethod_SourceGet<WithAsyncMethod_SourceAdd<WithAsyncMethod_SourceDuplicate<WithAsyncMethod_SourceRemove<WithAsyncMethod_SourceSetProperties<WithAsyncMethod_Health<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_StudioGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StudioGet() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StudioGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioGet(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StudioStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StudioStart() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_StudioStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioStart(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StudioStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StudioStop() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_StudioStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioStop(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowGet() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ShowGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowGet(::grpc::ServerContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowCreate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowCreate() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ShowCreate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCreate(::grpc::ServerContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowDuplicate() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ShowDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowDuplicate(::grpc::ServerContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowRemove() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ShowRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowRemove(::grpc::ServerContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowLoad() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ShowLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowLoad(::grpc::ServerContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SceneGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SceneGet() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SceneGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneGet(::grpc::ServerContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SceneAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SceneAdd() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SceneAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneAdd(::grpc::ServerContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SceneDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SceneDuplicate() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SceneDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneDuplicate(::grpc::ServerContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SceneRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SceneRemove() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_SceneRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneRemove(::grpc::ServerContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SceneSetAsCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SceneSetAsCurrent() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_SceneSetAsCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneSetAsCurrent(::grpc::ServerContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SceneGetCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SceneGetCurrent() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SceneGetCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneGetCurrent(::grpc::ServerContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SourceGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SourceGet() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_SourceGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceGet(::grpc::ServerContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SourceAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SourceAdd() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SourceAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceAdd(::grpc::ServerContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SourceDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SourceDuplicate() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_SourceDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceDuplicate(::grpc::ServerContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SourceRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SourceRemove() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_SourceRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceRemove(::grpc::ServerContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SourceSetProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SourceSetProperties() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_SourceSetProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceSetProperties(::grpc::ServerContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Health() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_StudioGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_StudioGet() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_StudioGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioGet(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStudioGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StudioStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_StudioStart() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_StudioStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioStart(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStudioStart(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StudioStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_StudioStop() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_StudioStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StudioStop(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStudioStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShowGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ShowGet() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ShowGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowGet(::grpc::ServerContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShowCreate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ShowCreate() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ShowCreate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCreate(::grpc::ServerContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowCreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShowDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ShowDuplicate() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ShowDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowDuplicate(::grpc::ServerContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowDuplicate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShowRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ShowRemove() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ShowRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowRemove(::grpc::ServerContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowRemove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShowLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ShowLoad() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ShowLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowLoad(::grpc::ServerContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowLoad(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SceneGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SceneGet() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SceneGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneGet(::grpc::ServerContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SceneAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SceneAdd() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SceneAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneAdd(::grpc::ServerContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneAdd(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SceneDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SceneDuplicate() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SceneDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneDuplicate(::grpc::ServerContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneDuplicate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SceneRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SceneRemove() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_SceneRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneRemove(::grpc::ServerContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneRemove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SceneSetAsCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SceneSetAsCurrent() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_SceneSetAsCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneSetAsCurrent(::grpc::ServerContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneSetAsCurrent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SceneGetCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SceneGetCurrent() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SceneGetCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SceneGetCurrent(::grpc::ServerContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSceneGetCurrent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SourceGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SourceGet() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_SourceGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceGet(::grpc::ServerContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SourceAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SourceAdd() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SourceAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceAdd(::grpc::ServerContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceAdd(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SourceDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SourceDuplicate() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_SourceDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceDuplicate(::grpc::ServerContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceDuplicate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SourceRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SourceRemove() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_SourceRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceRemove(::grpc::ServerContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceRemove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SourceSetProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SourceSetProperties() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_SourceSetProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SourceSetProperties(::grpc::ServerContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSourceSetProperties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_Health() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealth(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StudioGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StudioGet() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::proto::StudioGetResponse>(std::bind(&WithStreamedUnaryMethod_StudioGet<BaseClass>::StreamedStudioGet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StudioGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StudioGet(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::StudioGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStudioGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::proto::StudioGetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StudioStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StudioStart() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_StudioStart<BaseClass>::StreamedStudioStart, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StudioStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StudioStart(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStudioStart(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StudioStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StudioStop() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_StudioStop<BaseClass>::StreamedStudioStop, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StudioStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StudioStop(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStudioStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowGet() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::ShowGetRequest, ::proto::ShowGetResponse>(std::bind(&WithStreamedUnaryMethod_ShowGet<BaseClass>::StreamedShowGet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowGet(::grpc::ServerContext* context, const ::proto::ShowGetRequest* request, ::proto::ShowGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ShowGetRequest,::proto::ShowGetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowCreate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowCreate() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::ShowCreateRequest, ::proto::ShowCreateResponse>(std::bind(&WithStreamedUnaryMethod_ShowCreate<BaseClass>::StreamedShowCreate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowCreate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowCreate(::grpc::ServerContext* context, const ::proto::ShowCreateRequest* request, ::proto::ShowCreateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowCreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ShowCreateRequest,::proto::ShowCreateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowDuplicate() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::ShowDuplicateRequest, ::proto::ShowDuplicateResponse>(std::bind(&WithStreamedUnaryMethod_ShowDuplicate<BaseClass>::StreamedShowDuplicate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowDuplicate(::grpc::ServerContext* context, const ::proto::ShowDuplicateRequest* request, ::proto::ShowDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowDuplicate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ShowDuplicateRequest,::proto::ShowDuplicateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowRemove() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::ShowRemoveRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_ShowRemove<BaseClass>::StreamedShowRemove, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowRemove(::grpc::ServerContext* context, const ::proto::ShowRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowRemove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ShowRemoveRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowLoad : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowLoad() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::ShowLoadRequest, ::proto::ShowLoadResponse>(std::bind(&WithStreamedUnaryMethod_ShowLoad<BaseClass>::StreamedShowLoad, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowLoad() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowLoad(::grpc::ServerContext* context, const ::proto::ShowLoadRequest* request, ::proto::ShowLoadResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowLoad(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ShowLoadRequest,::proto::ShowLoadResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SceneGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SceneGet() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SceneGetRequest, ::proto::SceneGetResponse>(std::bind(&WithStreamedUnaryMethod_SceneGet<BaseClass>::StreamedSceneGet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SceneGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SceneGet(::grpc::ServerContext* context, const ::proto::SceneGetRequest* request, ::proto::SceneGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSceneGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SceneGetRequest,::proto::SceneGetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SceneAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SceneAdd() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SceneAddRequest, ::proto::SceneAddResponse>(std::bind(&WithStreamedUnaryMethod_SceneAdd<BaseClass>::StreamedSceneAdd, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SceneAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SceneAdd(::grpc::ServerContext* context, const ::proto::SceneAddRequest* request, ::proto::SceneAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSceneAdd(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SceneAddRequest,::proto::SceneAddResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SceneDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SceneDuplicate() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SceneDuplicateRequest, ::proto::SceneDuplicateResponse>(std::bind(&WithStreamedUnaryMethod_SceneDuplicate<BaseClass>::StreamedSceneDuplicate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SceneDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SceneDuplicate(::grpc::ServerContext* context, const ::proto::SceneDuplicateRequest* request, ::proto::SceneDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSceneDuplicate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SceneDuplicateRequest,::proto::SceneDuplicateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SceneRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SceneRemove() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SceneRemoveRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_SceneRemove<BaseClass>::StreamedSceneRemove, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SceneRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SceneRemove(::grpc::ServerContext* context, const ::proto::SceneRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSceneRemove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SceneRemoveRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SceneSetAsCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SceneSetAsCurrent() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SceneSetAsCurrentRequest, ::proto::SceneSetAsCurrentResponse>(std::bind(&WithStreamedUnaryMethod_SceneSetAsCurrent<BaseClass>::StreamedSceneSetAsCurrent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SceneSetAsCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SceneSetAsCurrent(::grpc::ServerContext* context, const ::proto::SceneSetAsCurrentRequest* request, ::proto::SceneSetAsCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSceneSetAsCurrent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SceneSetAsCurrentRequest,::proto::SceneSetAsCurrentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SceneGetCurrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SceneGetCurrent() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SceneGetCurrentRequest, ::proto::SceneGetCurrentResponse>(std::bind(&WithStreamedUnaryMethod_SceneGetCurrent<BaseClass>::StreamedSceneGetCurrent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SceneGetCurrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SceneGetCurrent(::grpc::ServerContext* context, const ::proto::SceneGetCurrentRequest* request, ::proto::SceneGetCurrentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSceneGetCurrent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SceneGetCurrentRequest,::proto::SceneGetCurrentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SourceGet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SourceGet() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SourceGetRequest, ::proto::SourceGetResponse>(std::bind(&WithStreamedUnaryMethod_SourceGet<BaseClass>::StreamedSourceGet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SourceGet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SourceGet(::grpc::ServerContext* context, const ::proto::SourceGetRequest* request, ::proto::SourceGetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSourceGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SourceGetRequest,::proto::SourceGetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SourceAdd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SourceAdd() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SourceAddRequest, ::proto::SourceAddResponse>(std::bind(&WithStreamedUnaryMethod_SourceAdd<BaseClass>::StreamedSourceAdd, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SourceAdd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SourceAdd(::grpc::ServerContext* context, const ::proto::SourceAddRequest* request, ::proto::SourceAddResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSourceAdd(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SourceAddRequest,::proto::SourceAddResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SourceDuplicate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SourceDuplicate() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SourceDuplicateRequest, ::proto::SourceDuplicateResponse>(std::bind(&WithStreamedUnaryMethod_SourceDuplicate<BaseClass>::StreamedSourceDuplicate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SourceDuplicate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SourceDuplicate(::grpc::ServerContext* context, const ::proto::SourceDuplicateRequest* request, ::proto::SourceDuplicateResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSourceDuplicate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SourceDuplicateRequest,::proto::SourceDuplicateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SourceRemove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SourceRemove() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SourceRemoveRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_SourceRemove<BaseClass>::StreamedSourceRemove, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SourceRemove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SourceRemove(::grpc::ServerContext* context, const ::proto::SourceRemoveRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSourceRemove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SourceRemoveRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SourceSetProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SourceSetProperties() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::SourceSetPropertiesRequest, ::proto::SourceSetPropertiesResponse>(std::bind(&WithStreamedUnaryMethod_SourceSetProperties<BaseClass>::StreamedSourceSetProperties, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SourceSetProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SourceSetProperties(::grpc::ServerContext* context, const ::proto::SourceSetPropertiesRequest* request, ::proto::SourceSetPropertiesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSourceSetProperties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::SourceSetPropertiesRequest,::proto::SourceSetPropertiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Health() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::proto::HealthResponse>(std::bind(&WithStreamedUnaryMethod_Health<BaseClass>::StreamedHealth, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Health(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::proto::HealthResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHealth(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::proto::HealthResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_StudioGet<WithStreamedUnaryMethod_StudioStart<WithStreamedUnaryMethod_StudioStop<WithStreamedUnaryMethod_ShowGet<WithStreamedUnaryMethod_ShowCreate<WithStreamedUnaryMethod_ShowDuplicate<WithStreamedUnaryMethod_ShowRemove<WithStreamedUnaryMethod_ShowLoad<WithStreamedUnaryMethod_SceneGet<WithStreamedUnaryMethod_SceneAdd<WithStreamedUnaryMethod_SceneDuplicate<WithStreamedUnaryMethod_SceneRemove<WithStreamedUnaryMethod_SceneSetAsCurrent<WithStreamedUnaryMethod_SceneGetCurrent<WithStreamedUnaryMethod_SourceGet<WithStreamedUnaryMethod_SourceAdd<WithStreamedUnaryMethod_SourceDuplicate<WithStreamedUnaryMethod_SourceRemove<WithStreamedUnaryMethod_SourceSetProperties<WithStreamedUnaryMethod_Health<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_StudioGet<WithStreamedUnaryMethod_StudioStart<WithStreamedUnaryMethod_StudioStop<WithStreamedUnaryMethod_ShowGet<WithStreamedUnaryMethod_ShowCreate<WithStreamedUnaryMethod_ShowDuplicate<WithStreamedUnaryMethod_ShowRemove<WithStreamedUnaryMethod_ShowLoad<WithStreamedUnaryMethod_SceneGet<WithStreamedUnaryMethod_SceneAdd<WithStreamedUnaryMethod_SceneDuplicate<WithStreamedUnaryMethod_SceneRemove<WithStreamedUnaryMethod_SceneSetAsCurrent<WithStreamedUnaryMethod_SceneGetCurrent<WithStreamedUnaryMethod_SourceGet<WithStreamedUnaryMethod_SourceAdd<WithStreamedUnaryMethod_SourceDuplicate<WithStreamedUnaryMethod_SourceRemove<WithStreamedUnaryMethod_SourceSetProperties<WithStreamedUnaryMethod_Health<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace proto


#endif  // GRPC_studio_2eproto__INCLUDED
