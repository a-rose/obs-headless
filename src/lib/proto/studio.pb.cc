// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studio.proto

#include "studio.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_studio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Scene_studio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_studio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Show_studio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_studio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Source_studio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_studio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StudioState_studio_2eproto;
namespace proto {
class StudioStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StudioState> _instance;
} _StudioState_default_instance_;
class ShowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Show> _instance;
} _Show_default_instance_;
class SceneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scene> _instance;
} _Scene_default_instance_;
class SourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Source> _instance;
} _Source_default_instance_;
class ShowGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowGetRequest> _instance;
} _ShowGetRequest_default_instance_;
class ShowCreateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowCreateRequest> _instance;
} _ShowCreateRequest_default_instance_;
class ShowDuplicateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowDuplicateRequest> _instance;
} _ShowDuplicateRequest_default_instance_;
class ShowRemoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowRemoveRequest> _instance;
} _ShowRemoveRequest_default_instance_;
class ShowLoadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowLoadRequest> _instance;
} _ShowLoadRequest_default_instance_;
class SceneGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneGetRequest> _instance;
} _SceneGetRequest_default_instance_;
class SceneAddRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneAddRequest> _instance;
} _SceneAddRequest_default_instance_;
class SceneDuplicateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneDuplicateRequest> _instance;
} _SceneDuplicateRequest_default_instance_;
class SceneRemoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneRemoveRequest> _instance;
} _SceneRemoveRequest_default_instance_;
class SceneSetAsCurrentRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneSetAsCurrentRequest> _instance;
} _SceneSetAsCurrentRequest_default_instance_;
class SceneGetCurrentRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneGetCurrentRequest> _instance;
} _SceneGetCurrentRequest_default_instance_;
class SourceGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceGetRequest> _instance;
} _SourceGetRequest_default_instance_;
class SourceAddRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceAddRequest> _instance;
} _SourceAddRequest_default_instance_;
class SourceDuplicateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceDuplicateRequest> _instance;
} _SourceDuplicateRequest_default_instance_;
class SourceRemoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceRemoveRequest> _instance;
} _SourceRemoveRequest_default_instance_;
class SourceSetPropertiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceSetPropertiesRequest> _instance;
} _SourceSetPropertiesRequest_default_instance_;
class StudioGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StudioGetResponse> _instance;
} _StudioGetResponse_default_instance_;
class ShowGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowGetResponse> _instance;
} _ShowGetResponse_default_instance_;
class ShowCreateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowCreateResponse> _instance;
} _ShowCreateResponse_default_instance_;
class ShowDuplicateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowDuplicateResponse> _instance;
} _ShowDuplicateResponse_default_instance_;
class ShowLoadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowLoadResponse> _instance;
} _ShowLoadResponse_default_instance_;
class ShowSwitchSourceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowSwitchSourceResponse> _instance;
} _ShowSwitchSourceResponse_default_instance_;
class SceneGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneGetResponse> _instance;
} _SceneGetResponse_default_instance_;
class SceneAddResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneAddResponse> _instance;
} _SceneAddResponse_default_instance_;
class SceneDuplicateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneDuplicateResponse> _instance;
} _SceneDuplicateResponse_default_instance_;
class SceneSetAsCurrentResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneSetAsCurrentResponse> _instance;
} _SceneSetAsCurrentResponse_default_instance_;
class SceneGetCurrentResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneGetCurrentResponse> _instance;
} _SceneGetCurrentResponse_default_instance_;
class SourceGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceGetResponse> _instance;
} _SourceGetResponse_default_instance_;
class SourceAddResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceAddResponse> _instance;
} _SourceAddResponse_default_instance_;
class SourceDuplicateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceDuplicateResponse> _instance;
} _SourceDuplicateResponse_default_instance_;
class SourceSetPropertiesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceSetPropertiesResponse> _instance;
} _SourceSetPropertiesResponse_default_instance_;
class HealthResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthResponse> _instance;
} _HealthResponse_default_instance_;
}  // namespace proto
static void InitDefaultsscc_info_HealthResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_HealthResponse_default_instance_;
    new (ptr) ::proto::HealthResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::HealthResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthResponse_studio_2eproto}, {}};

static void InitDefaultsscc_info_Scene_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Scene_default_instance_;
    new (ptr) ::proto::Scene();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Scene::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Scene_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Scene_studio_2eproto}, {
      &scc_info_Source_studio_2eproto.base,}};

static void InitDefaultsscc_info_SceneAddRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneAddRequest_default_instance_;
    new (ptr) ::proto::SceneAddRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneAddRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneAddRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneAddRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneAddResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneAddResponse_default_instance_;
    new (ptr) ::proto::SceneAddResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneAddResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneAddResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneAddResponse_studio_2eproto}, {
      &scc_info_Scene_studio_2eproto.base,}};

static void InitDefaultsscc_info_SceneDuplicateRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneDuplicateRequest_default_instance_;
    new (ptr) ::proto::SceneDuplicateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneDuplicateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneDuplicateRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneDuplicateRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneDuplicateResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneDuplicateResponse_default_instance_;
    new (ptr) ::proto::SceneDuplicateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneDuplicateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneDuplicateResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneDuplicateResponse_studio_2eproto}, {
      &scc_info_Scene_studio_2eproto.base,}};

static void InitDefaultsscc_info_SceneGetCurrentRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneGetCurrentRequest_default_instance_;
    new (ptr) ::proto::SceneGetCurrentRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneGetCurrentRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneGetCurrentRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneGetCurrentRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneGetCurrentResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneGetCurrentResponse_default_instance_;
    new (ptr) ::proto::SceneGetCurrentResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneGetCurrentResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneGetCurrentResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneGetCurrentResponse_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneGetRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneGetRequest_default_instance_;
    new (ptr) ::proto::SceneGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneGetRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneGetRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneGetResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneGetResponse_default_instance_;
    new (ptr) ::proto::SceneGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneGetResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneGetResponse_studio_2eproto}, {
      &scc_info_Scene_studio_2eproto.base,}};

static void InitDefaultsscc_info_SceneRemoveRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneRemoveRequest_default_instance_;
    new (ptr) ::proto::SceneRemoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneRemoveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneRemoveRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneRemoveRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneSetAsCurrentRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneSetAsCurrentRequest_default_instance_;
    new (ptr) ::proto::SceneSetAsCurrentRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneSetAsCurrentRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SceneSetAsCurrentRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SceneSetAsCurrentRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SceneSetAsCurrentResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SceneSetAsCurrentResponse_default_instance_;
    new (ptr) ::proto::SceneSetAsCurrentResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SceneSetAsCurrentResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneSetAsCurrentResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneSetAsCurrentResponse_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static void InitDefaultsscc_info_Show_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Show_default_instance_;
    new (ptr) ::proto::Show();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Show::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Show_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Show_studio_2eproto}, {
      &scc_info_Scene_studio_2eproto.base,}};

static void InitDefaultsscc_info_ShowCreateRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowCreateRequest_default_instance_;
    new (ptr) ::proto::ShowCreateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowCreateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShowCreateRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShowCreateRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_ShowCreateResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowCreateResponse_default_instance_;
    new (ptr) ::proto::ShowCreateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowCreateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShowCreateResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShowCreateResponse_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static void InitDefaultsscc_info_ShowDuplicateRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowDuplicateRequest_default_instance_;
    new (ptr) ::proto::ShowDuplicateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowDuplicateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShowDuplicateRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShowDuplicateRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_ShowDuplicateResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowDuplicateResponse_default_instance_;
    new (ptr) ::proto::ShowDuplicateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowDuplicateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShowDuplicateResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShowDuplicateResponse_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static void InitDefaultsscc_info_ShowGetRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowGetRequest_default_instance_;
    new (ptr) ::proto::ShowGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShowGetRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShowGetRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_ShowGetResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowGetResponse_default_instance_;
    new (ptr) ::proto::ShowGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShowGetResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShowGetResponse_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static void InitDefaultsscc_info_ShowLoadRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowLoadRequest_default_instance_;
    new (ptr) ::proto::ShowLoadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowLoadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShowLoadRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShowLoadRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_ShowLoadResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowLoadResponse_default_instance_;
    new (ptr) ::proto::ShowLoadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowLoadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShowLoadResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShowLoadResponse_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static void InitDefaultsscc_info_ShowRemoveRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowRemoveRequest_default_instance_;
    new (ptr) ::proto::ShowRemoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowRemoveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShowRemoveRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShowRemoveRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_ShowSwitchSourceResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowSwitchSourceResponse_default_instance_;
    new (ptr) ::proto::ShowSwitchSourceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowSwitchSourceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShowSwitchSourceResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShowSwitchSourceResponse_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static void InitDefaultsscc_info_Source_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Source_default_instance_;
    new (ptr) ::proto::Source();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Source::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Source_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Source_studio_2eproto}, {}};

static void InitDefaultsscc_info_SourceAddRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceAddRequest_default_instance_;
    new (ptr) ::proto::SourceAddRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceAddRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceAddRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceAddRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SourceAddResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceAddResponse_default_instance_;
    new (ptr) ::proto::SourceAddResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceAddResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceAddResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SourceAddResponse_studio_2eproto}, {
      &scc_info_Source_studio_2eproto.base,}};

static void InitDefaultsscc_info_SourceDuplicateRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceDuplicateRequest_default_instance_;
    new (ptr) ::proto::SourceDuplicateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceDuplicateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceDuplicateRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceDuplicateRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SourceDuplicateResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceDuplicateResponse_default_instance_;
    new (ptr) ::proto::SourceDuplicateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceDuplicateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceDuplicateResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SourceDuplicateResponse_studio_2eproto}, {
      &scc_info_Source_studio_2eproto.base,}};

static void InitDefaultsscc_info_SourceGetRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceGetRequest_default_instance_;
    new (ptr) ::proto::SourceGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceGetRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceGetRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SourceGetResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceGetResponse_default_instance_;
    new (ptr) ::proto::SourceGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceGetResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SourceGetResponse_studio_2eproto}, {
      &scc_info_Source_studio_2eproto.base,}};

static void InitDefaultsscc_info_SourceRemoveRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceRemoveRequest_default_instance_;
    new (ptr) ::proto::SourceRemoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceRemoveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceRemoveRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceRemoveRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SourceSetPropertiesRequest_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceSetPropertiesRequest_default_instance_;
    new (ptr) ::proto::SourceSetPropertiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceSetPropertiesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceSetPropertiesRequest_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceSetPropertiesRequest_studio_2eproto}, {}};

static void InitDefaultsscc_info_SourceSetPropertiesResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceSetPropertiesResponse_default_instance_;
    new (ptr) ::proto::SourceSetPropertiesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceSetPropertiesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceSetPropertiesResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SourceSetPropertiesResponse_studio_2eproto}, {
      &scc_info_Source_studio_2eproto.base,}};

static void InitDefaultsscc_info_StudioGetResponse_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_StudioGetResponse_default_instance_;
    new (ptr) ::proto::StudioGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::StudioGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StudioGetResponse_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StudioGetResponse_studio_2eproto}, {
      &scc_info_StudioState_studio_2eproto.base,}};

static void InitDefaultsscc_info_StudioState_studio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_StudioState_default_instance_;
    new (ptr) ::proto::StudioState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::StudioState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StudioState_studio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StudioState_studio_2eproto}, {
      &scc_info_Show_studio_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_studio_2eproto[36];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_studio_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_studio_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_studio_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::StudioState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::StudioState, active_show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::StudioState, shows_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Show, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Show, id_),
  PROTOBUF_FIELD_OFFSET(::proto::Show, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Show, active_scene_id_),
  PROTOBUF_FIELD_OFFSET(::proto::Show, scenes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Scene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Scene, id_),
  PROTOBUF_FIELD_OFFSET(::proto::Scene, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Scene, active_source_ids_),
  PROTOBUF_FIELD_OFFSET(::proto::Scene, sources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Source, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Source, id_),
  PROTOBUF_FIELD_OFFSET(::proto::Source, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Source, type_),
  PROTOBUF_FIELD_OFFSET(::proto::Source, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowGetRequest, show_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowCreateRequest, show_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowDuplicateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowDuplicateRequest, show_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowRemoveRequest, show_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowLoadRequest, show_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetRequest, scene_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneAddRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SceneAddRequest, scene_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneDuplicateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneDuplicateRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SceneDuplicateRequest, scene_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneRemoveRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SceneRemoveRequest, scene_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneSetAsCurrentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneSetAsCurrentRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SceneSetAsCurrentRequest, scene_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetCurrentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetCurrentRequest, show_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceGetRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceGetRequest, scene_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceGetRequest, source_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddRequest, scene_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddRequest, source_name_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddRequest, source_type_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddRequest, source_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceDuplicateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceDuplicateRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceDuplicateRequest, scene_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceDuplicateRequest, source_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceRemoveRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceRemoveRequest, scene_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceRemoveRequest, source_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesRequest, show_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesRequest, scene_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesRequest, source_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesRequest, source_type_),
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesRequest, source_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::StudioGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::StudioGetResponse, studio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowGetResponse, show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowCreateResponse, show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowDuplicateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowDuplicateResponse, show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowLoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowLoadResponse, show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowSwitchSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowSwitchSourceResponse, show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetResponse, scene_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneAddResponse, scene_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneDuplicateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneDuplicateResponse, scene_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneSetAsCurrentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneSetAsCurrentResponse, show_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetCurrentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SceneGetCurrentResponse, scene_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceGetResponse, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceAddResponse, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceDuplicateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceDuplicateResponse, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::SourceSetPropertiesResponse, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::HealthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::HealthResponse, timestamp_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::StudioState)},
  { 7, -1, sizeof(::proto::Show)},
  { 16, -1, sizeof(::proto::Scene)},
  { 25, -1, sizeof(::proto::Source)},
  { 34, -1, sizeof(::proto::ShowGetRequest)},
  { 40, -1, sizeof(::proto::ShowCreateRequest)},
  { 46, -1, sizeof(::proto::ShowDuplicateRequest)},
  { 52, -1, sizeof(::proto::ShowRemoveRequest)},
  { 58, -1, sizeof(::proto::ShowLoadRequest)},
  { 64, -1, sizeof(::proto::SceneGetRequest)},
  { 71, -1, sizeof(::proto::SceneAddRequest)},
  { 78, -1, sizeof(::proto::SceneDuplicateRequest)},
  { 85, -1, sizeof(::proto::SceneRemoveRequest)},
  { 92, -1, sizeof(::proto::SceneSetAsCurrentRequest)},
  { 99, -1, sizeof(::proto::SceneGetCurrentRequest)},
  { 105, -1, sizeof(::proto::SourceGetRequest)},
  { 113, -1, sizeof(::proto::SourceAddRequest)},
  { 123, -1, sizeof(::proto::SourceDuplicateRequest)},
  { 131, -1, sizeof(::proto::SourceRemoveRequest)},
  { 139, -1, sizeof(::proto::SourceSetPropertiesRequest)},
  { 149, -1, sizeof(::proto::StudioGetResponse)},
  { 155, -1, sizeof(::proto::ShowGetResponse)},
  { 161, -1, sizeof(::proto::ShowCreateResponse)},
  { 167, -1, sizeof(::proto::ShowDuplicateResponse)},
  { 173, -1, sizeof(::proto::ShowLoadResponse)},
  { 179, -1, sizeof(::proto::ShowSwitchSourceResponse)},
  { 185, -1, sizeof(::proto::SceneGetResponse)},
  { 191, -1, sizeof(::proto::SceneAddResponse)},
  { 197, -1, sizeof(::proto::SceneDuplicateResponse)},
  { 203, -1, sizeof(::proto::SceneSetAsCurrentResponse)},
  { 209, -1, sizeof(::proto::SceneGetCurrentResponse)},
  { 215, -1, sizeof(::proto::SourceGetResponse)},
  { 221, -1, sizeof(::proto::SourceAddResponse)},
  { 227, -1, sizeof(::proto::SourceDuplicateResponse)},
  { 233, -1, sizeof(::proto::SourceSetPropertiesResponse)},
  { 239, -1, sizeof(::proto::HealthResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_StudioState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_Show_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_Scene_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_Source_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowDuplicateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowRemoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowLoadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneAddRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneDuplicateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneRemoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneSetAsCurrentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneGetCurrentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceAddRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceDuplicateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceRemoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceSetPropertiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_StudioGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowCreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowDuplicateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowLoadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowSwitchSourceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneAddResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneDuplicateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneSetAsCurrentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SceneGetCurrentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceAddResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceDuplicateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_SourceSetPropertiesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_HealthResponse_default_instance_),
};

const char descriptor_table_protodef_studio_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014studio.proto\022\005proto\032\033google/protobuf/e"
  "mpty.proto\"A\n\013StudioState\022\026\n\016active_show"
  "_id\030\001 \001(\t\022\032\n\005shows\030\002 \003(\0132\013.proto.Show\"W\n"
  "\004Show\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\027\n\017activ"
  "e_scene_id\030\003 \001(\t\022\034\n\006scenes\030\004 \003(\0132\014.proto"
  ".Scene\"\\\n\005Scene\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001("
  "\t\022\031\n\021active_source_ids\030\003 \003(\t\022\036\n\007sources\030"
  "\004 \003(\0132\r.proto.Source\"=\n\006Source\022\n\n\002id\030\001 \001"
  "(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\013\n\003url\030\004 "
  "\001(\t\"!\n\016ShowGetRequest\022\017\n\007show_id\030\001 \001(\t\"&"
  "\n\021ShowCreateRequest\022\021\n\tshow_name\030\001 \001(\t\"\'"
  "\n\024ShowDuplicateRequest\022\017\n\007show_id\030\001 \001(\t\""
  "$\n\021ShowRemoveRequest\022\017\n\007show_id\030\001 \001(\t\"$\n"
  "\017ShowLoadRequest\022\021\n\tshow_path\030\001 \001(\t\"4\n\017S"
  "ceneGetRequest\022\017\n\007show_id\030\001 \001(\t\022\020\n\010scene"
  "_id\030\002 \001(\t\"6\n\017SceneAddRequest\022\017\n\007show_id\030"
  "\001 \001(\t\022\022\n\nscene_name\030\002 \001(\t\":\n\025SceneDuplic"
  "ateRequest\022\017\n\007show_id\030\001 \001(\t\022\020\n\010scene_id\030"
  "\002 \001(\t\"7\n\022SceneRemoveRequest\022\017\n\007show_id\030\001"
  " \001(\t\022\020\n\010scene_id\030\002 \001(\t\"=\n\030SceneSetAsCurr"
  "entRequest\022\017\n\007show_id\030\001 \001(\t\022\020\n\010scene_id\030"
  "\002 \001(\t\")\n\026SceneGetCurrentRequest\022\017\n\007show_"
  "id\030\001 \001(\t\"H\n\020SourceGetRequest\022\017\n\007show_id\030"
  "\001 \001(\t\022\020\n\010scene_id\030\002 \001(\t\022\021\n\tsource_id\030\003 \001"
  "(\t\"s\n\020SourceAddRequest\022\017\n\007show_id\030\001 \001(\t\022"
  "\020\n\010scene_id\030\002 \001(\t\022\023\n\013source_name\030\003 \001(\t\022\023"
  "\n\013source_type\030\004 \001(\t\022\022\n\nsource_url\030\005 \001(\t\""
  "N\n\026SourceDuplicateRequest\022\017\n\007show_id\030\001 \001"
  "(\t\022\020\n\010scene_id\030\002 \001(\t\022\021\n\tsource_id\030\003 \001(\t\""
  "K\n\023SourceRemoveRequest\022\017\n\007show_id\030\001 \001(\t\022"
  "\020\n\010scene_id\030\002 \001(\t\022\021\n\tsource_id\030\003 \001(\t\"{\n\032"
  "SourceSetPropertiesRequest\022\017\n\007show_id\030\001 "
  "\001(\t\022\020\n\010scene_id\030\002 \001(\t\022\021\n\tsource_id\030\003 \001(\t"
  "\022\023\n\013source_type\030\004 \001(\t\022\022\n\nsource_url\030\005 \001("
  "\t\"7\n\021StudioGetResponse\022\"\n\006studio\030\001 \001(\0132\022"
  ".proto.StudioState\",\n\017ShowGetResponse\022\031\n"
  "\004show\030\001 \001(\0132\013.proto.Show\"/\n\022ShowCreateRe"
  "sponse\022\031\n\004show\030\001 \001(\0132\013.proto.Show\"2\n\025Sho"
  "wDuplicateResponse\022\031\n\004show\030\001 \001(\0132\013.proto"
  ".Show\"-\n\020ShowLoadResponse\022\031\n\004show\030\001 \001(\0132"
  "\013.proto.Show\"5\n\030ShowSwitchSourceResponse"
  "\022\031\n\004show\030\001 \001(\0132\013.proto.Show\"/\n\020SceneGetR"
  "esponse\022\033\n\005scene\030\001 \001(\0132\014.proto.Scene\"/\n\020"
  "SceneAddResponse\022\033\n\005scene\030\001 \001(\0132\014.proto."
  "Scene\"5\n\026SceneDuplicateResponse\022\033\n\005scene"
  "\030\001 \001(\0132\014.proto.Scene\"6\n\031SceneSetAsCurren"
  "tResponse\022\031\n\004show\030\001 \001(\0132\013.proto.Show\"+\n\027"
  "SceneGetCurrentResponse\022\020\n\010scene_id\030\002 \001("
  "\t\"2\n\021SourceGetResponse\022\035\n\006source\030\001 \001(\0132\r"
  ".proto.Source\"2\n\021SourceAddResponse\022\035\n\006so"
  "urce\030\001 \001(\0132\r.proto.Source\"8\n\027SourceDupli"
  "cateResponse\022\035\n\006source\030\001 \001(\0132\r.proto.Sou"
  "rce\"<\n\033SourceSetPropertiesResponse\022\035\n\006so"
  "urce\030\001 \001(\0132\r.proto.Source\"#\n\016HealthRespo"
  "nse\022\021\n\ttimestamp\030\001 \001(\0032\354\n\n\006Studio\022=\n\tStu"
  "dioGet\022\026.google.protobuf.Empty\032\030.proto.S"
  "tudioGetResponse\022=\n\013StudioStart\022\026.google"
  ".protobuf.Empty\032\026.google.protobuf.Empty\022"
  "<\n\nStudioStop\022\026.google.protobuf.Empty\032\026."
  "google.protobuf.Empty\0228\n\007ShowGet\022\025.proto"
  ".ShowGetRequest\032\026.proto.ShowGetResponse\022"
  "A\n\nShowCreate\022\030.proto.ShowCreateRequest\032"
  "\031.proto.ShowCreateResponse\022J\n\rShowDuplic"
  "ate\022\033.proto.ShowDuplicateRequest\032\034.proto"
  ".ShowDuplicateResponse\022>\n\nShowRemove\022\030.p"
  "roto.ShowRemoveRequest\032\026.google.protobuf"
  ".Empty\022;\n\010ShowLoad\022\026.proto.ShowLoadReque"
  "st\032\027.proto.ShowLoadResponse\022;\n\010SceneGet\022"
  "\026.proto.SceneGetRequest\032\027.proto.SceneGet"
  "Response\022;\n\010SceneAdd\022\026.proto.SceneAddReq"
  "uest\032\027.proto.SceneAddResponse\022M\n\016SceneDu"
  "plicate\022\034.proto.SceneDuplicateRequest\032\035."
  "proto.SceneDuplicateResponse\022@\n\013SceneRem"
  "ove\022\031.proto.SceneRemoveRequest\032\026.google."
  "protobuf.Empty\022V\n\021SceneSetAsCurrent\022\037.pr"
  "oto.SceneSetAsCurrentRequest\032 .proto.Sce"
  "neSetAsCurrentResponse\022P\n\017SceneGetCurren"
  "t\022\035.proto.SceneGetCurrentRequest\032\036.proto"
  ".SceneGetCurrentResponse\022>\n\tSourceGet\022\027."
  "proto.SourceGetRequest\032\030.proto.SourceGet"
  "Response\022>\n\tSourceAdd\022\027.proto.SourceAddR"
  "equest\032\030.proto.SourceAddResponse\022P\n\017Sour"
  "ceDuplicate\022\035.proto.SourceDuplicateReque"
  "st\032\036.proto.SourceDuplicateResponse\022B\n\014So"
  "urceRemove\022\032.proto.SourceRemoveRequest\032\026"
  ".google.protobuf.Empty\022\\\n\023SourceSetPrope"
  "rties\022!.proto.SourceSetPropertiesRequest"
  "\032\".proto.SourceSetPropertiesResponse\0227\n\006"
  "Health\022\026.google.protobuf.Empty\032\025.proto.H"
  "ealthResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_studio_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_studio_2eproto_sccs[36] = {
  &scc_info_HealthResponse_studio_2eproto.base,
  &scc_info_Scene_studio_2eproto.base,
  &scc_info_SceneAddRequest_studio_2eproto.base,
  &scc_info_SceneAddResponse_studio_2eproto.base,
  &scc_info_SceneDuplicateRequest_studio_2eproto.base,
  &scc_info_SceneDuplicateResponse_studio_2eproto.base,
  &scc_info_SceneGetCurrentRequest_studio_2eproto.base,
  &scc_info_SceneGetCurrentResponse_studio_2eproto.base,
  &scc_info_SceneGetRequest_studio_2eproto.base,
  &scc_info_SceneGetResponse_studio_2eproto.base,
  &scc_info_SceneRemoveRequest_studio_2eproto.base,
  &scc_info_SceneSetAsCurrentRequest_studio_2eproto.base,
  &scc_info_SceneSetAsCurrentResponse_studio_2eproto.base,
  &scc_info_Show_studio_2eproto.base,
  &scc_info_ShowCreateRequest_studio_2eproto.base,
  &scc_info_ShowCreateResponse_studio_2eproto.base,
  &scc_info_ShowDuplicateRequest_studio_2eproto.base,
  &scc_info_ShowDuplicateResponse_studio_2eproto.base,
  &scc_info_ShowGetRequest_studio_2eproto.base,
  &scc_info_ShowGetResponse_studio_2eproto.base,
  &scc_info_ShowLoadRequest_studio_2eproto.base,
  &scc_info_ShowLoadResponse_studio_2eproto.base,
  &scc_info_ShowRemoveRequest_studio_2eproto.base,
  &scc_info_ShowSwitchSourceResponse_studio_2eproto.base,
  &scc_info_Source_studio_2eproto.base,
  &scc_info_SourceAddRequest_studio_2eproto.base,
  &scc_info_SourceAddResponse_studio_2eproto.base,
  &scc_info_SourceDuplicateRequest_studio_2eproto.base,
  &scc_info_SourceDuplicateResponse_studio_2eproto.base,
  &scc_info_SourceGetRequest_studio_2eproto.base,
  &scc_info_SourceGetResponse_studio_2eproto.base,
  &scc_info_SourceRemoveRequest_studio_2eproto.base,
  &scc_info_SourceSetPropertiesRequest_studio_2eproto.base,
  &scc_info_SourceSetPropertiesResponse_studio_2eproto.base,
  &scc_info_StudioGetResponse_studio_2eproto.base,
  &scc_info_StudioState_studio_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_studio_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_studio_2eproto = {
  false, false, descriptor_table_protodef_studio_2eproto, "studio.proto", 3581,
  &descriptor_table_studio_2eproto_once, descriptor_table_studio_2eproto_sccs, descriptor_table_studio_2eproto_deps, 36, 1,
  schemas, file_default_instances, TableStruct_studio_2eproto::offsets,
  file_level_metadata_studio_2eproto, 36, file_level_enum_descriptors_studio_2eproto, file_level_service_descriptors_studio_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_studio_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_studio_2eproto)), true);
namespace proto {

// ===================================================================

void StudioState::InitAsDefaultInstance() {
}
class StudioState::_Internal {
 public:
};

StudioState::StudioState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shows_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.StudioState)
}
StudioState::StudioState(const StudioState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shows_(from.shows_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  active_show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_active_show_id().empty()) {
    active_show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_active_show_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.StudioState)
}

void StudioState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StudioState_studio_2eproto.base);
  active_show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StudioState::~StudioState() {
  // @@protoc_insertion_point(destructor:proto.StudioState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StudioState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  active_show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StudioState::ArenaDtor(void* object) {
  StudioState* _this = reinterpret_cast< StudioState* >(object);
  (void)_this;
}
void StudioState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StudioState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StudioState& StudioState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StudioState_studio_2eproto.base);
  return *internal_default_instance();
}


void StudioState::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StudioState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shows_.Clear();
  active_show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StudioState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string active_show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_active_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.StudioState.active_show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .proto.Show shows = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StudioState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.StudioState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string active_show_id = 1;
  if (this->active_show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_active_show_id().data(), static_cast<int>(this->_internal_active_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.StudioState.active_show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_active_show_id(), target);
  }

  // repeated .proto.Show shows = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shows_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_shows(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StudioState)
  return target;
}

size_t StudioState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StudioState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Show shows = 2;
  total_size += 1UL * this->_internal_shows_size();
  for (const auto& msg : this->shows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string active_show_id = 1;
  if (this->active_show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_active_show_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StudioState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StudioState)
  GOOGLE_DCHECK_NE(&from, this);
  const StudioState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StudioState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StudioState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StudioState)
    MergeFrom(*source);
  }
}

void StudioState::MergeFrom(const StudioState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StudioState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shows_.MergeFrom(from.shows_);
  if (from.active_show_id().size() > 0) {
    _internal_set_active_show_id(from._internal_active_show_id());
  }
}

void StudioState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StudioState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StudioState::CopyFrom(const StudioState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StudioState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StudioState::IsInitialized() const {
  return true;
}

void StudioState::InternalSwap(StudioState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shows_.InternalSwap(&other->shows_);
  active_show_id_.Swap(&other->active_show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StudioState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Show::InitAsDefaultInstance() {
}
class Show::_Internal {
 public:
};

Show::Show(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  scenes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.Show)
}
Show::Show(const Show& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scenes_(from.scenes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  active_scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_active_scene_id().empty()) {
    active_scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_active_scene_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.Show)
}

void Show::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Show_studio_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Show::~Show() {
  // @@protoc_insertion_point(destructor:proto.Show)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Show::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Show::ArenaDtor(void* object) {
  Show* _this = reinterpret_cast< Show* >(object);
  (void)_this;
}
void Show::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Show::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Show& Show::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Show_studio_2eproto.base);
  return *internal_default_instance();
}


void Show::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Show)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scenes_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  active_scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Show::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Show.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Show.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string active_scene_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_active_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Show.active_scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .proto.Scene scenes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scenes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Show::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Show)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Show.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Show.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string active_scene_id = 3;
  if (this->active_scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_active_scene_id().data(), static_cast<int>(this->_internal_active_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Show.active_scene_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_active_scene_id(), target);
  }

  // repeated .proto.Scene scenes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scenes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_scenes(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Show)
  return target;
}

size_t Show::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Show)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Scene scenes = 4;
  total_size += 1UL * this->_internal_scenes_size();
  for (const auto& msg : this->scenes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string active_scene_id = 3;
  if (this->active_scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_active_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Show::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Show)
  GOOGLE_DCHECK_NE(&from, this);
  const Show* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Show>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Show)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Show)
    MergeFrom(*source);
  }
}

void Show::MergeFrom(const Show& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Show)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scenes_.MergeFrom(from.scenes_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.active_scene_id().size() > 0) {
    _internal_set_active_scene_id(from._internal_active_scene_id());
  }
}

void Show::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Show)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Show::CopyFrom(const Show& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Show)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Show::IsInitialized() const {
  return true;
}

void Show::InternalSwap(Show* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scenes_.InternalSwap(&other->scenes_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  active_scene_id_.Swap(&other->active_scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Show::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Scene::InitAsDefaultInstance() {
}
class Scene::_Internal {
 public:
};

Scene::Scene(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  active_source_ids_(arena),
  sources_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.Scene)
}
Scene::Scene(const Scene& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      active_source_ids_(from.active_source_ids_),
      sources_(from.sources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.Scene)
}

void Scene::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Scene_studio_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Scene::~Scene() {
  // @@protoc_insertion_point(destructor:proto.Scene)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scene::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Scene::ArenaDtor(void* object) {
  Scene* _this = reinterpret_cast< Scene* >(object);
  (void)_this;
}
void Scene::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scene::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scene& Scene::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scene_studio_2eproto.base);
  return *internal_default_instance();
}


void Scene::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Scene)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  active_source_ids_.Clear();
  sources_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Scene.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Scene.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string active_source_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_active_source_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Scene.active_source_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .proto.Source sources = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scene::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Scene)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Scene.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Scene.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string active_source_ids = 3;
  for (int i = 0, n = this->_internal_active_source_ids_size(); i < n; i++) {
    const auto& s = this->_internal_active_source_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Scene.active_source_ids");
    target = stream->WriteString(3, s, target);
  }

  // repeated .proto.Source sources = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sources_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_sources(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Scene)
  return target;
}

size_t Scene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Scene)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string active_source_ids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(active_source_ids_.size());
  for (int i = 0, n = active_source_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      active_source_ids_.Get(i));
  }

  // repeated .proto.Source sources = 4;
  total_size += 1UL * this->_internal_sources_size();
  for (const auto& msg : this->sources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scene::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Scene)
  GOOGLE_DCHECK_NE(&from, this);
  const Scene* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scene>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Scene)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Scene)
    MergeFrom(*source);
  }
}

void Scene::MergeFrom(const Scene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Scene)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  active_source_ids_.MergeFrom(from.active_source_ids_);
  sources_.MergeFrom(from.sources_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Scene::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Scene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scene::CopyFrom(const Scene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Scene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene::IsInitialized() const {
  return true;
}

void Scene::InternalSwap(Scene* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  active_source_ids_.InternalSwap(&other->active_source_ids_);
  sources_.InternalSwap(&other->sources_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Source::InitAsDefaultInstance() {
}
class Source::_Internal {
 public:
};

Source::Source(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.Source)
}
Source::Source(const Source& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.Source)
}

void Source::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Source_studio_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Source::~Source() {
  // @@protoc_insertion_point(destructor:proto.Source)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Source::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Source::ArenaDtor(void* object) {
  Source* _this = reinterpret_cast< Source* >(object);
  (void)_this;
}
void Source::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Source::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Source& Source::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Source_studio_2eproto.base);
  return *internal_default_instance();
}


void Source::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Source)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Source::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Source.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Source.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Source.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.Source.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Source::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Source)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Source.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Source.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Source.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // string url = 4;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.Source.url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Source)
  return target;
}

size_t Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Source)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string url = 4;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Source::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Source)
  GOOGLE_DCHECK_NE(&from, this);
  const Source* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Source>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Source)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Source)
    MergeFrom(*source);
  }
}

void Source::MergeFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Source)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
}

void Source::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Source::CopyFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Source::IsInitialized() const {
  return true;
}

void Source::InternalSwap(Source* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Source::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowGetRequest::InitAsDefaultInstance() {
}
class ShowGetRequest::_Internal {
 public:
};

ShowGetRequest::ShowGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowGetRequest)
}
ShowGetRequest::ShowGetRequest(const ShowGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowGetRequest)
}

void ShowGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowGetRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShowGetRequest::~ShowGetRequest() {
  // @@protoc_insertion_point(destructor:proto.ShowGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShowGetRequest::ArenaDtor(void* object) {
  ShowGetRequest* _this = reinterpret_cast< ShowGetRequest* >(object);
  (void)_this;
}
void ShowGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowGetRequest& ShowGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowGetRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ShowGetRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ShowGetRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowGetRequest)
  return target;
}

size_t ShowGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowGetRequest)
    MergeFrom(*source);
  }
}

void ShowGetRequest::MergeFrom(const ShowGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
}

void ShowGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowGetRequest::CopyFrom(const ShowGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowGetRequest::IsInitialized() const {
  return true;
}

void ShowGetRequest::InternalSwap(ShowGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowCreateRequest::InitAsDefaultInstance() {
}
class ShowCreateRequest::_Internal {
 public:
};

ShowCreateRequest::ShowCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowCreateRequest)
}
ShowCreateRequest::ShowCreateRequest(const ShowCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_name().empty()) {
    show_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowCreateRequest)
}

void ShowCreateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowCreateRequest_studio_2eproto.base);
  show_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShowCreateRequest::~ShowCreateRequest() {
  // @@protoc_insertion_point(destructor:proto.ShowCreateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShowCreateRequest::ArenaDtor(void* object) {
  ShowCreateRequest* _this = reinterpret_cast< ShowCreateRequest* >(object);
  (void)_this;
}
void ShowCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowCreateRequest& ShowCreateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowCreateRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ShowCreateRequest.show_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowCreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_name = 1;
  if (this->show_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_name().data(), static_cast<int>(this->_internal_show_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ShowCreateRequest.show_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowCreateRequest)
  return target;
}

size_t ShowCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowCreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_name = 1;
  if (this->show_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowCreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowCreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowCreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowCreateRequest)
    MergeFrom(*source);
  }
}

void ShowCreateRequest::MergeFrom(const ShowCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_name().size() > 0) {
    _internal_set_show_name(from._internal_show_name());
  }
}

void ShowCreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowCreateRequest::CopyFrom(const ShowCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowCreateRequest::IsInitialized() const {
  return true;
}

void ShowCreateRequest::InternalSwap(ShowCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_name_.Swap(&other->show_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowCreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowDuplicateRequest::InitAsDefaultInstance() {
}
class ShowDuplicateRequest::_Internal {
 public:
};

ShowDuplicateRequest::ShowDuplicateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowDuplicateRequest)
}
ShowDuplicateRequest::ShowDuplicateRequest(const ShowDuplicateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowDuplicateRequest)
}

void ShowDuplicateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowDuplicateRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShowDuplicateRequest::~ShowDuplicateRequest() {
  // @@protoc_insertion_point(destructor:proto.ShowDuplicateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowDuplicateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShowDuplicateRequest::ArenaDtor(void* object) {
  ShowDuplicateRequest* _this = reinterpret_cast< ShowDuplicateRequest* >(object);
  (void)_this;
}
void ShowDuplicateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowDuplicateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowDuplicateRequest& ShowDuplicateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowDuplicateRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowDuplicateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowDuplicateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowDuplicateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ShowDuplicateRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowDuplicateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowDuplicateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ShowDuplicateRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowDuplicateRequest)
  return target;
}

size_t ShowDuplicateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowDuplicateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowDuplicateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowDuplicateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowDuplicateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowDuplicateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowDuplicateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowDuplicateRequest)
    MergeFrom(*source);
  }
}

void ShowDuplicateRequest::MergeFrom(const ShowDuplicateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowDuplicateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
}

void ShowDuplicateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowDuplicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowDuplicateRequest::CopyFrom(const ShowDuplicateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowDuplicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowDuplicateRequest::IsInitialized() const {
  return true;
}

void ShowDuplicateRequest::InternalSwap(ShowDuplicateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowDuplicateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowRemoveRequest::InitAsDefaultInstance() {
}
class ShowRemoveRequest::_Internal {
 public:
};

ShowRemoveRequest::ShowRemoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowRemoveRequest)
}
ShowRemoveRequest::ShowRemoveRequest(const ShowRemoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowRemoveRequest)
}

void ShowRemoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowRemoveRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShowRemoveRequest::~ShowRemoveRequest() {
  // @@protoc_insertion_point(destructor:proto.ShowRemoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowRemoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShowRemoveRequest::ArenaDtor(void* object) {
  ShowRemoveRequest* _this = reinterpret_cast< ShowRemoveRequest* >(object);
  (void)_this;
}
void ShowRemoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowRemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowRemoveRequest& ShowRemoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowRemoveRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowRemoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ShowRemoveRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowRemoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ShowRemoveRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowRemoveRequest)
  return target;
}

size_t ShowRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowRemoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowRemoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowRemoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowRemoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowRemoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowRemoveRequest)
    MergeFrom(*source);
  }
}

void ShowRemoveRequest::MergeFrom(const ShowRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
}

void ShowRemoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowRemoveRequest::CopyFrom(const ShowRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowRemoveRequest::IsInitialized() const {
  return true;
}

void ShowRemoveRequest::InternalSwap(ShowRemoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowRemoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowLoadRequest::InitAsDefaultInstance() {
}
class ShowLoadRequest::_Internal {
 public:
};

ShowLoadRequest::ShowLoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowLoadRequest)
}
ShowLoadRequest::ShowLoadRequest(const ShowLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_path().empty()) {
    show_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowLoadRequest)
}

void ShowLoadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowLoadRequest_studio_2eproto.base);
  show_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShowLoadRequest::~ShowLoadRequest() {
  // @@protoc_insertion_point(destructor:proto.ShowLoadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowLoadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShowLoadRequest::ArenaDtor(void* object) {
  ShowLoadRequest* _this = reinterpret_cast< ShowLoadRequest* >(object);
  (void)_this;
}
void ShowLoadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowLoadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowLoadRequest& ShowLoadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowLoadRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowLoadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ShowLoadRequest.show_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowLoadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_path = 1;
  if (this->show_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_path().data(), static_cast<int>(this->_internal_show_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ShowLoadRequest.show_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowLoadRequest)
  return target;
}

size_t ShowLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowLoadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_path = 1;
  if (this->show_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowLoadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowLoadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowLoadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowLoadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowLoadRequest)
    MergeFrom(*source);
  }
}

void ShowLoadRequest::MergeFrom(const ShowLoadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_path().size() > 0) {
    _internal_set_show_path(from._internal_show_path());
  }
}

void ShowLoadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowLoadRequest::CopyFrom(const ShowLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowLoadRequest::IsInitialized() const {
  return true;
}

void ShowLoadRequest::InternalSwap(ShowLoadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_path_.Swap(&other->show_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowLoadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneGetRequest::InitAsDefaultInstance() {
}
class SceneGetRequest::_Internal {
 public:
};

SceneGetRequest::SceneGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneGetRequest)
}
SceneGetRequest::SceneGetRequest(const SceneGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneGetRequest)
}

void SceneGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneGetRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneGetRequest::~SceneGetRequest() {
  // @@protoc_insertion_point(destructor:proto.SceneGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneGetRequest::ArenaDtor(void* object) {
  SceneGetRequest* _this = reinterpret_cast< SceneGetRequest* >(object);
  (void)_this;
}
void SceneGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneGetRequest& SceneGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneGetRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneGetRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneGetRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneGetRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneGetRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGetRequest)
  return target;
}

size_t SceneGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGetRequest)
    MergeFrom(*source);
  }
}

void SceneGetRequest::MergeFrom(const SceneGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void SceneGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGetRequest::CopyFrom(const SceneGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGetRequest::IsInitialized() const {
  return true;
}

void SceneGetRequest::InternalSwap(SceneGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneAddRequest::InitAsDefaultInstance() {
}
class SceneAddRequest::_Internal {
 public:
};

SceneAddRequest::SceneAddRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneAddRequest)
}
SceneAddRequest::SceneAddRequest(const SceneAddRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_name().empty()) {
    scene_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneAddRequest)
}

void SceneAddRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneAddRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneAddRequest::~SceneAddRequest() {
  // @@protoc_insertion_point(destructor:proto.SceneAddRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneAddRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneAddRequest::ArenaDtor(void* object) {
  SceneAddRequest* _this = reinterpret_cast< SceneAddRequest* >(object);
  (void)_this;
}
void SceneAddRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneAddRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneAddRequest& SceneAddRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneAddRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneAddRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneAddRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneAddRequest.scene_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneAddRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneAddRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_name = 2;
  if (this->scene_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_name().data(), static_cast<int>(this->_internal_scene_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneAddRequest.scene_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAddRequest)
  return target;
}

size_t SceneAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAddRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_name = 2;
  if (this->scene_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneAddRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAddRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneAddRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAddRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAddRequest)
    MergeFrom(*source);
  }
}

void SceneAddRequest::MergeFrom(const SceneAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_name().size() > 0) {
    _internal_set_scene_name(from._internal_scene_name());
  }
}

void SceneAddRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAddRequest::CopyFrom(const SceneAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAddRequest::IsInitialized() const {
  return true;
}

void SceneAddRequest::InternalSwap(SceneAddRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_name_.Swap(&other->scene_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneAddRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneDuplicateRequest::InitAsDefaultInstance() {
}
class SceneDuplicateRequest::_Internal {
 public:
};

SceneDuplicateRequest::SceneDuplicateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneDuplicateRequest)
}
SceneDuplicateRequest::SceneDuplicateRequest(const SceneDuplicateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneDuplicateRequest)
}

void SceneDuplicateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneDuplicateRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneDuplicateRequest::~SceneDuplicateRequest() {
  // @@protoc_insertion_point(destructor:proto.SceneDuplicateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneDuplicateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneDuplicateRequest::ArenaDtor(void* object) {
  SceneDuplicateRequest* _this = reinterpret_cast< SceneDuplicateRequest* >(object);
  (void)_this;
}
void SceneDuplicateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneDuplicateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneDuplicateRequest& SceneDuplicateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneDuplicateRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneDuplicateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneDuplicateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneDuplicateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneDuplicateRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneDuplicateRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneDuplicateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneDuplicateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneDuplicateRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneDuplicateRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneDuplicateRequest)
  return target;
}

size_t SceneDuplicateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneDuplicateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneDuplicateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneDuplicateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneDuplicateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneDuplicateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneDuplicateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneDuplicateRequest)
    MergeFrom(*source);
  }
}

void SceneDuplicateRequest::MergeFrom(const SceneDuplicateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneDuplicateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void SceneDuplicateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneDuplicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneDuplicateRequest::CopyFrom(const SceneDuplicateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneDuplicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneDuplicateRequest::IsInitialized() const {
  return true;
}

void SceneDuplicateRequest::InternalSwap(SceneDuplicateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneDuplicateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneRemoveRequest::InitAsDefaultInstance() {
}
class SceneRemoveRequest::_Internal {
 public:
};

SceneRemoveRequest::SceneRemoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneRemoveRequest)
}
SceneRemoveRequest::SceneRemoveRequest(const SceneRemoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneRemoveRequest)
}

void SceneRemoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneRemoveRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneRemoveRequest::~SceneRemoveRequest() {
  // @@protoc_insertion_point(destructor:proto.SceneRemoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneRemoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneRemoveRequest::ArenaDtor(void* object) {
  SceneRemoveRequest* _this = reinterpret_cast< SceneRemoveRequest* >(object);
  (void)_this;
}
void SceneRemoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneRemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneRemoveRequest& SceneRemoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneRemoveRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneRemoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneRemoveRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneRemoveRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneRemoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneRemoveRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneRemoveRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneRemoveRequest)
  return target;
}

size_t SceneRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneRemoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneRemoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneRemoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneRemoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneRemoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneRemoveRequest)
    MergeFrom(*source);
  }
}

void SceneRemoveRequest::MergeFrom(const SceneRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void SceneRemoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneRemoveRequest::CopyFrom(const SceneRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneRemoveRequest::IsInitialized() const {
  return true;
}

void SceneRemoveRequest::InternalSwap(SceneRemoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneRemoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneSetAsCurrentRequest::InitAsDefaultInstance() {
}
class SceneSetAsCurrentRequest::_Internal {
 public:
};

SceneSetAsCurrentRequest::SceneSetAsCurrentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneSetAsCurrentRequest)
}
SceneSetAsCurrentRequest::SceneSetAsCurrentRequest(const SceneSetAsCurrentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneSetAsCurrentRequest)
}

void SceneSetAsCurrentRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneSetAsCurrentRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneSetAsCurrentRequest::~SceneSetAsCurrentRequest() {
  // @@protoc_insertion_point(destructor:proto.SceneSetAsCurrentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneSetAsCurrentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneSetAsCurrentRequest::ArenaDtor(void* object) {
  SceneSetAsCurrentRequest* _this = reinterpret_cast< SceneSetAsCurrentRequest* >(object);
  (void)_this;
}
void SceneSetAsCurrentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneSetAsCurrentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneSetAsCurrentRequest& SceneSetAsCurrentRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneSetAsCurrentRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneSetAsCurrentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneSetAsCurrentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneSetAsCurrentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneSetAsCurrentRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneSetAsCurrentRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneSetAsCurrentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneSetAsCurrentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneSetAsCurrentRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneSetAsCurrentRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneSetAsCurrentRequest)
  return target;
}

size_t SceneSetAsCurrentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneSetAsCurrentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneSetAsCurrentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneSetAsCurrentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneSetAsCurrentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneSetAsCurrentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneSetAsCurrentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneSetAsCurrentRequest)
    MergeFrom(*source);
  }
}

void SceneSetAsCurrentRequest::MergeFrom(const SceneSetAsCurrentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneSetAsCurrentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void SceneSetAsCurrentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneSetAsCurrentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneSetAsCurrentRequest::CopyFrom(const SceneSetAsCurrentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneSetAsCurrentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneSetAsCurrentRequest::IsInitialized() const {
  return true;
}

void SceneSetAsCurrentRequest::InternalSwap(SceneSetAsCurrentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneSetAsCurrentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneGetCurrentRequest::InitAsDefaultInstance() {
}
class SceneGetCurrentRequest::_Internal {
 public:
};

SceneGetCurrentRequest::SceneGetCurrentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneGetCurrentRequest)
}
SceneGetCurrentRequest::SceneGetCurrentRequest(const SceneGetCurrentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneGetCurrentRequest)
}

void SceneGetCurrentRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneGetCurrentRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneGetCurrentRequest::~SceneGetCurrentRequest() {
  // @@protoc_insertion_point(destructor:proto.SceneGetCurrentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneGetCurrentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneGetCurrentRequest::ArenaDtor(void* object) {
  SceneGetCurrentRequest* _this = reinterpret_cast< SceneGetCurrentRequest* >(object);
  (void)_this;
}
void SceneGetCurrentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneGetCurrentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneGetCurrentRequest& SceneGetCurrentRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneGetCurrentRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneGetCurrentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGetCurrentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneGetCurrentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneGetCurrentRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneGetCurrentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGetCurrentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneGetCurrentRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGetCurrentRequest)
  return target;
}

size_t SceneGetCurrentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGetCurrentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneGetCurrentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGetCurrentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGetCurrentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneGetCurrentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGetCurrentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGetCurrentRequest)
    MergeFrom(*source);
  }
}

void SceneGetCurrentRequest::MergeFrom(const SceneGetCurrentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGetCurrentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
}

void SceneGetCurrentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGetCurrentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGetCurrentRequest::CopyFrom(const SceneGetCurrentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGetCurrentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGetCurrentRequest::IsInitialized() const {
  return true;
}

void SceneGetCurrentRequest::InternalSwap(SceneGetCurrentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneGetCurrentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceGetRequest::InitAsDefaultInstance() {
}
class SourceGetRequest::_Internal {
 public:
};

SourceGetRequest::SourceGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceGetRequest)
}
SourceGetRequest::SourceGetRequest(const SourceGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_id().empty()) {
    source_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceGetRequest)
}

void SourceGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceGetRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceGetRequest::~SourceGetRequest() {
  // @@protoc_insertion_point(destructor:proto.SourceGetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceGetRequest::ArenaDtor(void* object) {
  SourceGetRequest* _this = reinterpret_cast< SourceGetRequest* >(object);
  (void)_this;
}
void SourceGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceGetRequest& SourceGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceGetRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceGetRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceGetRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceGetRequest.source_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceGetRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceGetRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_id().data(), static_cast<int>(this->_internal_source_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceGetRequest.source_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceGetRequest)
  return target;
}

size_t SourceGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceGetRequest)
    MergeFrom(*source);
  }
}

void SourceGetRequest::MergeFrom(const SourceGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.source_id().size() > 0) {
    _internal_set_source_id(from._internal_source_id());
  }
}

void SourceGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceGetRequest::CopyFrom(const SourceGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceGetRequest::IsInitialized() const {
  return true;
}

void SourceGetRequest::InternalSwap(SourceGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.Swap(&other->source_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceAddRequest::InitAsDefaultInstance() {
}
class SourceAddRequest::_Internal {
 public:
};

SourceAddRequest::SourceAddRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceAddRequest)
}
SourceAddRequest::SourceAddRequest(const SourceAddRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  source_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_name().empty()) {
    source_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_name(),
      GetArena());
  }
  source_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_type().empty()) {
    source_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_type(),
      GetArena());
  }
  source_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_url().empty()) {
    source_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_url(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceAddRequest)
}

void SourceAddRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceAddRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceAddRequest::~SourceAddRequest() {
  // @@protoc_insertion_point(destructor:proto.SourceAddRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceAddRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceAddRequest::ArenaDtor(void* object) {
  SourceAddRequest* _this = reinterpret_cast< SourceAddRequest* >(object);
  (void)_this;
}
void SourceAddRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceAddRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceAddRequest& SourceAddRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceAddRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceAddRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceAddRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceAddRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceAddRequest.source_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_source_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceAddRequest.source_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_source_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceAddRequest.source_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceAddRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceAddRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceAddRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  // string source_name = 3;
  if (this->source_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_name().data(), static_cast<int>(this->_internal_source_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceAddRequest.source_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_name(), target);
  }

  // string source_type = 4;
  if (this->source_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_type().data(), static_cast<int>(this->_internal_source_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceAddRequest.source_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_source_type(), target);
  }

  // string source_url = 5;
  if (this->source_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_url().data(), static_cast<int>(this->_internal_source_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceAddRequest.source_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_source_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceAddRequest)
  return target;
}

size_t SourceAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceAddRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  // string source_name = 3;
  if (this->source_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_name());
  }

  // string source_type = 4;
  if (this->source_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_type());
  }

  // string source_url = 5;
  if (this->source_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceAddRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceAddRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceAddRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceAddRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceAddRequest)
    MergeFrom(*source);
  }
}

void SourceAddRequest::MergeFrom(const SourceAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.source_name().size() > 0) {
    _internal_set_source_name(from._internal_source_name());
  }
  if (from.source_type().size() > 0) {
    _internal_set_source_type(from._internal_source_type());
  }
  if (from.source_url().size() > 0) {
    _internal_set_source_url(from._internal_source_url());
  }
}

void SourceAddRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceAddRequest::CopyFrom(const SourceAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceAddRequest::IsInitialized() const {
  return true;
}

void SourceAddRequest::InternalSwap(SourceAddRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_name_.Swap(&other->source_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_type_.Swap(&other->source_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_url_.Swap(&other->source_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceAddRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceDuplicateRequest::InitAsDefaultInstance() {
}
class SourceDuplicateRequest::_Internal {
 public:
};

SourceDuplicateRequest::SourceDuplicateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceDuplicateRequest)
}
SourceDuplicateRequest::SourceDuplicateRequest(const SourceDuplicateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_id().empty()) {
    source_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceDuplicateRequest)
}

void SourceDuplicateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceDuplicateRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceDuplicateRequest::~SourceDuplicateRequest() {
  // @@protoc_insertion_point(destructor:proto.SourceDuplicateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceDuplicateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceDuplicateRequest::ArenaDtor(void* object) {
  SourceDuplicateRequest* _this = reinterpret_cast< SourceDuplicateRequest* >(object);
  (void)_this;
}
void SourceDuplicateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceDuplicateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceDuplicateRequest& SourceDuplicateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceDuplicateRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceDuplicateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceDuplicateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceDuplicateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceDuplicateRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceDuplicateRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceDuplicateRequest.source_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceDuplicateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceDuplicateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceDuplicateRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceDuplicateRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_id().data(), static_cast<int>(this->_internal_source_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceDuplicateRequest.source_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceDuplicateRequest)
  return target;
}

size_t SourceDuplicateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceDuplicateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceDuplicateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceDuplicateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceDuplicateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceDuplicateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceDuplicateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceDuplicateRequest)
    MergeFrom(*source);
  }
}

void SourceDuplicateRequest::MergeFrom(const SourceDuplicateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceDuplicateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.source_id().size() > 0) {
    _internal_set_source_id(from._internal_source_id());
  }
}

void SourceDuplicateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceDuplicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceDuplicateRequest::CopyFrom(const SourceDuplicateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceDuplicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceDuplicateRequest::IsInitialized() const {
  return true;
}

void SourceDuplicateRequest::InternalSwap(SourceDuplicateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.Swap(&other->source_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceDuplicateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceRemoveRequest::InitAsDefaultInstance() {
}
class SourceRemoveRequest::_Internal {
 public:
};

SourceRemoveRequest::SourceRemoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceRemoveRequest)
}
SourceRemoveRequest::SourceRemoveRequest(const SourceRemoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_id().empty()) {
    source_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceRemoveRequest)
}

void SourceRemoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceRemoveRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceRemoveRequest::~SourceRemoveRequest() {
  // @@protoc_insertion_point(destructor:proto.SourceRemoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceRemoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceRemoveRequest::ArenaDtor(void* object) {
  SourceRemoveRequest* _this = reinterpret_cast< SourceRemoveRequest* >(object);
  (void)_this;
}
void SourceRemoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceRemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceRemoveRequest& SourceRemoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceRemoveRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceRemoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceRemoveRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceRemoveRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceRemoveRequest.source_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceRemoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceRemoveRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceRemoveRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_id().data(), static_cast<int>(this->_internal_source_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceRemoveRequest.source_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceRemoveRequest)
  return target;
}

size_t SourceRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceRemoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceRemoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceRemoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceRemoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceRemoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceRemoveRequest)
    MergeFrom(*source);
  }
}

void SourceRemoveRequest::MergeFrom(const SourceRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.source_id().size() > 0) {
    _internal_set_source_id(from._internal_source_id());
  }
}

void SourceRemoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceRemoveRequest::CopyFrom(const SourceRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceRemoveRequest::IsInitialized() const {
  return true;
}

void SourceRemoveRequest::InternalSwap(SourceRemoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.Swap(&other->source_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceRemoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceSetPropertiesRequest::InitAsDefaultInstance() {
}
class SourceSetPropertiesRequest::_Internal {
 public:
};

SourceSetPropertiesRequest::SourceSetPropertiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceSetPropertiesRequest)
}
SourceSetPropertiesRequest::SourceSetPropertiesRequest(const SourceSetPropertiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_show_id().empty()) {
    show_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_show_id(),
      GetArena());
  }
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_id().empty()) {
    source_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_id(),
      GetArena());
  }
  source_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_type().empty()) {
    source_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_type(),
      GetArena());
  }
  source_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_url().empty()) {
    source_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_url(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceSetPropertiesRequest)
}

void SourceSetPropertiesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceSetPropertiesRequest_studio_2eproto.base);
  show_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceSetPropertiesRequest::~SourceSetPropertiesRequest() {
  // @@protoc_insertion_point(destructor:proto.SourceSetPropertiesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceSetPropertiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  show_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceSetPropertiesRequest::ArenaDtor(void* object) {
  SourceSetPropertiesRequest* _this = reinterpret_cast< SourceSetPropertiesRequest* >(object);
  (void)_this;
}
void SourceSetPropertiesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceSetPropertiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceSetPropertiesRequest& SourceSetPropertiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceSetPropertiesRequest_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceSetPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceSetPropertiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceSetPropertiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string show_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_show_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceSetPropertiesRequest.show_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceSetPropertiesRequest.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceSetPropertiesRequest.source_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_source_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceSetPropertiesRequest.source_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_source_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SourceSetPropertiesRequest.source_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceSetPropertiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceSetPropertiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_show_id().data(), static_cast<int>(this->_internal_show_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceSetPropertiesRequest.show_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_show_id(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceSetPropertiesRequest.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_id().data(), static_cast<int>(this->_internal_source_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceSetPropertiesRequest.source_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_id(), target);
  }

  // string source_type = 4;
  if (this->source_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_type().data(), static_cast<int>(this->_internal_source_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceSetPropertiesRequest.source_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_source_type(), target);
  }

  // string source_url = 5;
  if (this->source_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_url().data(), static_cast<int>(this->_internal_source_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SourceSetPropertiesRequest.source_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_source_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceSetPropertiesRequest)
  return target;
}

size_t SourceSetPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceSetPropertiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string show_id = 1;
  if (this->show_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_show_id());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  // string source_id = 3;
  if (this->source_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_id());
  }

  // string source_type = 4;
  if (this->source_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_type());
  }

  // string source_url = 5;
  if (this->source_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceSetPropertiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceSetPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceSetPropertiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceSetPropertiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceSetPropertiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceSetPropertiesRequest)
    MergeFrom(*source);
  }
}

void SourceSetPropertiesRequest::MergeFrom(const SourceSetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceSetPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.show_id().size() > 0) {
    _internal_set_show_id(from._internal_show_id());
  }
  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.source_id().size() > 0) {
    _internal_set_source_id(from._internal_source_id());
  }
  if (from.source_type().size() > 0) {
    _internal_set_source_type(from._internal_source_type());
  }
  if (from.source_url().size() > 0) {
    _internal_set_source_url(from._internal_source_url());
  }
}

void SourceSetPropertiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceSetPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceSetPropertiesRequest::CopyFrom(const SourceSetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceSetPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceSetPropertiesRequest::IsInitialized() const {
  return true;
}

void SourceSetPropertiesRequest::InternalSwap(SourceSetPropertiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  show_id_.Swap(&other->show_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_id_.Swap(&other->source_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_type_.Swap(&other->source_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_url_.Swap(&other->source_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceSetPropertiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StudioGetResponse::InitAsDefaultInstance() {
  ::proto::_StudioGetResponse_default_instance_._instance.get_mutable()->studio_ = const_cast< ::proto::StudioState*>(
      ::proto::StudioState::internal_default_instance());
}
class StudioGetResponse::_Internal {
 public:
  static const ::proto::StudioState& studio(const StudioGetResponse* msg);
};

const ::proto::StudioState&
StudioGetResponse::_Internal::studio(const StudioGetResponse* msg) {
  return *msg->studio_;
}
StudioGetResponse::StudioGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.StudioGetResponse)
}
StudioGetResponse::StudioGetResponse(const StudioGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_studio()) {
    studio_ = new ::proto::StudioState(*from.studio_);
  } else {
    studio_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.StudioGetResponse)
}

void StudioGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StudioGetResponse_studio_2eproto.base);
  studio_ = nullptr;
}

StudioGetResponse::~StudioGetResponse() {
  // @@protoc_insertion_point(destructor:proto.StudioGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StudioGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete studio_;
}

void StudioGetResponse::ArenaDtor(void* object) {
  StudioGetResponse* _this = reinterpret_cast< StudioGetResponse* >(object);
  (void)_this;
}
void StudioGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StudioGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StudioGetResponse& StudioGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StudioGetResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void StudioGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StudioGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && studio_ != nullptr) {
    delete studio_;
  }
  studio_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StudioGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.StudioState studio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_studio(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StudioGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.StudioGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.StudioState studio = 1;
  if (this->has_studio()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::studio(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StudioGetResponse)
  return target;
}

size_t StudioGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StudioGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.StudioState studio = 1;
  if (this->has_studio()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *studio_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StudioGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StudioGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StudioGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StudioGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StudioGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StudioGetResponse)
    MergeFrom(*source);
  }
}

void StudioGetResponse::MergeFrom(const StudioGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StudioGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_studio()) {
    _internal_mutable_studio()->::proto::StudioState::MergeFrom(from._internal_studio());
  }
}

void StudioGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StudioGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StudioGetResponse::CopyFrom(const StudioGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StudioGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StudioGetResponse::IsInitialized() const {
  return true;
}

void StudioGetResponse::InternalSwap(StudioGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(studio_, other->studio_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StudioGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowGetResponse::InitAsDefaultInstance() {
  ::proto::_ShowGetResponse_default_instance_._instance.get_mutable()->show_ = const_cast< ::proto::Show*>(
      ::proto::Show::internal_default_instance());
}
class ShowGetResponse::_Internal {
 public:
  static const ::proto::Show& show(const ShowGetResponse* msg);
};

const ::proto::Show&
ShowGetResponse::_Internal::show(const ShowGetResponse* msg) {
  return *msg->show_;
}
ShowGetResponse::ShowGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowGetResponse)
}
ShowGetResponse::ShowGetResponse(const ShowGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_show()) {
    show_ = new ::proto::Show(*from.show_);
  } else {
    show_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowGetResponse)
}

void ShowGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowGetResponse_studio_2eproto.base);
  show_ = nullptr;
}

ShowGetResponse::~ShowGetResponse() {
  // @@protoc_insertion_point(destructor:proto.ShowGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete show_;
}

void ShowGetResponse::ArenaDtor(void* object) {
  ShowGetResponse* _this = reinterpret_cast< ShowGetResponse* >(object);
  (void)_this;
}
void ShowGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowGetResponse& ShowGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowGetResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && show_ != nullptr) {
    delete show_;
  }
  show_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Show show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_show(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::show(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowGetResponse)
  return target;
}

size_t ShowGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *show_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowGetResponse)
    MergeFrom(*source);
  }
}

void ShowGetResponse::MergeFrom(const ShowGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show()) {
    _internal_mutable_show()->::proto::Show::MergeFrom(from._internal_show());
  }
}

void ShowGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowGetResponse::CopyFrom(const ShowGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowGetResponse::IsInitialized() const {
  return true;
}

void ShowGetResponse::InternalSwap(ShowGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(show_, other->show_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowCreateResponse::InitAsDefaultInstance() {
  ::proto::_ShowCreateResponse_default_instance_._instance.get_mutable()->show_ = const_cast< ::proto::Show*>(
      ::proto::Show::internal_default_instance());
}
class ShowCreateResponse::_Internal {
 public:
  static const ::proto::Show& show(const ShowCreateResponse* msg);
};

const ::proto::Show&
ShowCreateResponse::_Internal::show(const ShowCreateResponse* msg) {
  return *msg->show_;
}
ShowCreateResponse::ShowCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowCreateResponse)
}
ShowCreateResponse::ShowCreateResponse(const ShowCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_show()) {
    show_ = new ::proto::Show(*from.show_);
  } else {
    show_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowCreateResponse)
}

void ShowCreateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowCreateResponse_studio_2eproto.base);
  show_ = nullptr;
}

ShowCreateResponse::~ShowCreateResponse() {
  // @@protoc_insertion_point(destructor:proto.ShowCreateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete show_;
}

void ShowCreateResponse::ArenaDtor(void* object) {
  ShowCreateResponse* _this = reinterpret_cast< ShowCreateResponse* >(object);
  (void)_this;
}
void ShowCreateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowCreateResponse& ShowCreateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowCreateResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && show_ != nullptr) {
    delete show_;
  }
  show_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowCreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Show show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_show(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowCreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::show(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowCreateResponse)
  return target;
}

size_t ShowCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowCreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *show_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowCreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowCreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowCreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowCreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowCreateResponse)
    MergeFrom(*source);
  }
}

void ShowCreateResponse::MergeFrom(const ShowCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show()) {
    _internal_mutable_show()->::proto::Show::MergeFrom(from._internal_show());
  }
}

void ShowCreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowCreateResponse::CopyFrom(const ShowCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowCreateResponse::IsInitialized() const {
  return true;
}

void ShowCreateResponse::InternalSwap(ShowCreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(show_, other->show_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowCreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowDuplicateResponse::InitAsDefaultInstance() {
  ::proto::_ShowDuplicateResponse_default_instance_._instance.get_mutable()->show_ = const_cast< ::proto::Show*>(
      ::proto::Show::internal_default_instance());
}
class ShowDuplicateResponse::_Internal {
 public:
  static const ::proto::Show& show(const ShowDuplicateResponse* msg);
};

const ::proto::Show&
ShowDuplicateResponse::_Internal::show(const ShowDuplicateResponse* msg) {
  return *msg->show_;
}
ShowDuplicateResponse::ShowDuplicateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowDuplicateResponse)
}
ShowDuplicateResponse::ShowDuplicateResponse(const ShowDuplicateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_show()) {
    show_ = new ::proto::Show(*from.show_);
  } else {
    show_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowDuplicateResponse)
}

void ShowDuplicateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowDuplicateResponse_studio_2eproto.base);
  show_ = nullptr;
}

ShowDuplicateResponse::~ShowDuplicateResponse() {
  // @@protoc_insertion_point(destructor:proto.ShowDuplicateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowDuplicateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete show_;
}

void ShowDuplicateResponse::ArenaDtor(void* object) {
  ShowDuplicateResponse* _this = reinterpret_cast< ShowDuplicateResponse* >(object);
  (void)_this;
}
void ShowDuplicateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowDuplicateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowDuplicateResponse& ShowDuplicateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowDuplicateResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowDuplicateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowDuplicateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && show_ != nullptr) {
    delete show_;
  }
  show_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowDuplicateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Show show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_show(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowDuplicateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowDuplicateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::show(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowDuplicateResponse)
  return target;
}

size_t ShowDuplicateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowDuplicateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *show_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowDuplicateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowDuplicateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowDuplicateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowDuplicateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowDuplicateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowDuplicateResponse)
    MergeFrom(*source);
  }
}

void ShowDuplicateResponse::MergeFrom(const ShowDuplicateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowDuplicateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show()) {
    _internal_mutable_show()->::proto::Show::MergeFrom(from._internal_show());
  }
}

void ShowDuplicateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowDuplicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowDuplicateResponse::CopyFrom(const ShowDuplicateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowDuplicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowDuplicateResponse::IsInitialized() const {
  return true;
}

void ShowDuplicateResponse::InternalSwap(ShowDuplicateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(show_, other->show_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowDuplicateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowLoadResponse::InitAsDefaultInstance() {
  ::proto::_ShowLoadResponse_default_instance_._instance.get_mutable()->show_ = const_cast< ::proto::Show*>(
      ::proto::Show::internal_default_instance());
}
class ShowLoadResponse::_Internal {
 public:
  static const ::proto::Show& show(const ShowLoadResponse* msg);
};

const ::proto::Show&
ShowLoadResponse::_Internal::show(const ShowLoadResponse* msg) {
  return *msg->show_;
}
ShowLoadResponse::ShowLoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowLoadResponse)
}
ShowLoadResponse::ShowLoadResponse(const ShowLoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_show()) {
    show_ = new ::proto::Show(*from.show_);
  } else {
    show_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowLoadResponse)
}

void ShowLoadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowLoadResponse_studio_2eproto.base);
  show_ = nullptr;
}

ShowLoadResponse::~ShowLoadResponse() {
  // @@protoc_insertion_point(destructor:proto.ShowLoadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowLoadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete show_;
}

void ShowLoadResponse::ArenaDtor(void* object) {
  ShowLoadResponse* _this = reinterpret_cast< ShowLoadResponse* >(object);
  (void)_this;
}
void ShowLoadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowLoadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowLoadResponse& ShowLoadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowLoadResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowLoadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowLoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && show_ != nullptr) {
    delete show_;
  }
  show_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowLoadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Show show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_show(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowLoadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowLoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::show(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowLoadResponse)
  return target;
}

size_t ShowLoadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowLoadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *show_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowLoadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowLoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowLoadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowLoadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowLoadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowLoadResponse)
    MergeFrom(*source);
  }
}

void ShowLoadResponse::MergeFrom(const ShowLoadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowLoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show()) {
    _internal_mutable_show()->::proto::Show::MergeFrom(from._internal_show());
  }
}

void ShowLoadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowLoadResponse::CopyFrom(const ShowLoadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowLoadResponse::IsInitialized() const {
  return true;
}

void ShowLoadResponse::InternalSwap(ShowLoadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(show_, other->show_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowLoadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowSwitchSourceResponse::InitAsDefaultInstance() {
  ::proto::_ShowSwitchSourceResponse_default_instance_._instance.get_mutable()->show_ = const_cast< ::proto::Show*>(
      ::proto::Show::internal_default_instance());
}
class ShowSwitchSourceResponse::_Internal {
 public:
  static const ::proto::Show& show(const ShowSwitchSourceResponse* msg);
};

const ::proto::Show&
ShowSwitchSourceResponse::_Internal::show(const ShowSwitchSourceResponse* msg) {
  return *msg->show_;
}
ShowSwitchSourceResponse::ShowSwitchSourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.ShowSwitchSourceResponse)
}
ShowSwitchSourceResponse::ShowSwitchSourceResponse(const ShowSwitchSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_show()) {
    show_ = new ::proto::Show(*from.show_);
  } else {
    show_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowSwitchSourceResponse)
}

void ShowSwitchSourceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowSwitchSourceResponse_studio_2eproto.base);
  show_ = nullptr;
}

ShowSwitchSourceResponse::~ShowSwitchSourceResponse() {
  // @@protoc_insertion_point(destructor:proto.ShowSwitchSourceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShowSwitchSourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete show_;
}

void ShowSwitchSourceResponse::ArenaDtor(void* object) {
  ShowSwitchSourceResponse* _this = reinterpret_cast< ShowSwitchSourceResponse* >(object);
  (void)_this;
}
void ShowSwitchSourceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShowSwitchSourceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowSwitchSourceResponse& ShowSwitchSourceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowSwitchSourceResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void ShowSwitchSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowSwitchSourceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && show_ != nullptr) {
    delete show_;
  }
  show_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShowSwitchSourceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Show show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_show(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowSwitchSourceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowSwitchSourceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::show(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowSwitchSourceResponse)
  return target;
}

size_t ShowSwitchSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowSwitchSourceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *show_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowSwitchSourceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowSwitchSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowSwitchSourceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowSwitchSourceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowSwitchSourceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowSwitchSourceResponse)
    MergeFrom(*source);
  }
}

void ShowSwitchSourceResponse::MergeFrom(const ShowSwitchSourceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowSwitchSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show()) {
    _internal_mutable_show()->::proto::Show::MergeFrom(from._internal_show());
  }
}

void ShowSwitchSourceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowSwitchSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowSwitchSourceResponse::CopyFrom(const ShowSwitchSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowSwitchSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowSwitchSourceResponse::IsInitialized() const {
  return true;
}

void ShowSwitchSourceResponse::InternalSwap(ShowSwitchSourceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(show_, other->show_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowSwitchSourceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneGetResponse::InitAsDefaultInstance() {
  ::proto::_SceneGetResponse_default_instance_._instance.get_mutable()->scene_ = const_cast< ::proto::Scene*>(
      ::proto::Scene::internal_default_instance());
}
class SceneGetResponse::_Internal {
 public:
  static const ::proto::Scene& scene(const SceneGetResponse* msg);
};

const ::proto::Scene&
SceneGetResponse::_Internal::scene(const SceneGetResponse* msg) {
  return *msg->scene_;
}
SceneGetResponse::SceneGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneGetResponse)
}
SceneGetResponse::SceneGetResponse(const SceneGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scene()) {
    scene_ = new ::proto::Scene(*from.scene_);
  } else {
    scene_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneGetResponse)
}

void SceneGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneGetResponse_studio_2eproto.base);
  scene_ = nullptr;
}

SceneGetResponse::~SceneGetResponse() {
  // @@protoc_insertion_point(destructor:proto.SceneGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete scene_;
}

void SceneGetResponse::ArenaDtor(void* object) {
  SceneGetResponse* _this = reinterpret_cast< SceneGetResponse* >(object);
  (void)_this;
}
void SceneGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneGetResponse& SceneGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneGetResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && scene_ != nullptr) {
    delete scene_;
  }
  scene_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Scene scene = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Scene scene = 1;
  if (this->has_scene()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::scene(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGetResponse)
  return target;
}

size_t SceneGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Scene scene = 1;
  if (this->has_scene()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scene_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGetResponse)
    MergeFrom(*source);
  }
}

void SceneGetResponse::MergeFrom(const SceneGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scene()) {
    _internal_mutable_scene()->::proto::Scene::MergeFrom(from._internal_scene());
  }
}

void SceneGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGetResponse::CopyFrom(const SceneGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGetResponse::IsInitialized() const {
  return true;
}

void SceneGetResponse::InternalSwap(SceneGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(scene_, other->scene_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneAddResponse::InitAsDefaultInstance() {
  ::proto::_SceneAddResponse_default_instance_._instance.get_mutable()->scene_ = const_cast< ::proto::Scene*>(
      ::proto::Scene::internal_default_instance());
}
class SceneAddResponse::_Internal {
 public:
  static const ::proto::Scene& scene(const SceneAddResponse* msg);
};

const ::proto::Scene&
SceneAddResponse::_Internal::scene(const SceneAddResponse* msg) {
  return *msg->scene_;
}
SceneAddResponse::SceneAddResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneAddResponse)
}
SceneAddResponse::SceneAddResponse(const SceneAddResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scene()) {
    scene_ = new ::proto::Scene(*from.scene_);
  } else {
    scene_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneAddResponse)
}

void SceneAddResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneAddResponse_studio_2eproto.base);
  scene_ = nullptr;
}

SceneAddResponse::~SceneAddResponse() {
  // @@protoc_insertion_point(destructor:proto.SceneAddResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneAddResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete scene_;
}

void SceneAddResponse::ArenaDtor(void* object) {
  SceneAddResponse* _this = reinterpret_cast< SceneAddResponse* >(object);
  (void)_this;
}
void SceneAddResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneAddResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneAddResponse& SceneAddResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneAddResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && scene_ != nullptr) {
    delete scene_;
  }
  scene_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneAddResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Scene scene = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneAddResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Scene scene = 1;
  if (this->has_scene()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::scene(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAddResponse)
  return target;
}

size_t SceneAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAddResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Scene scene = 1;
  if (this->has_scene()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scene_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneAddResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAddResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneAddResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAddResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAddResponse)
    MergeFrom(*source);
  }
}

void SceneAddResponse::MergeFrom(const SceneAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scene()) {
    _internal_mutable_scene()->::proto::Scene::MergeFrom(from._internal_scene());
  }
}

void SceneAddResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAddResponse::CopyFrom(const SceneAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAddResponse::IsInitialized() const {
  return true;
}

void SceneAddResponse::InternalSwap(SceneAddResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(scene_, other->scene_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneAddResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneDuplicateResponse::InitAsDefaultInstance() {
  ::proto::_SceneDuplicateResponse_default_instance_._instance.get_mutable()->scene_ = const_cast< ::proto::Scene*>(
      ::proto::Scene::internal_default_instance());
}
class SceneDuplicateResponse::_Internal {
 public:
  static const ::proto::Scene& scene(const SceneDuplicateResponse* msg);
};

const ::proto::Scene&
SceneDuplicateResponse::_Internal::scene(const SceneDuplicateResponse* msg) {
  return *msg->scene_;
}
SceneDuplicateResponse::SceneDuplicateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneDuplicateResponse)
}
SceneDuplicateResponse::SceneDuplicateResponse(const SceneDuplicateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scene()) {
    scene_ = new ::proto::Scene(*from.scene_);
  } else {
    scene_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneDuplicateResponse)
}

void SceneDuplicateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneDuplicateResponse_studio_2eproto.base);
  scene_ = nullptr;
}

SceneDuplicateResponse::~SceneDuplicateResponse() {
  // @@protoc_insertion_point(destructor:proto.SceneDuplicateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneDuplicateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete scene_;
}

void SceneDuplicateResponse::ArenaDtor(void* object) {
  SceneDuplicateResponse* _this = reinterpret_cast< SceneDuplicateResponse* >(object);
  (void)_this;
}
void SceneDuplicateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneDuplicateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneDuplicateResponse& SceneDuplicateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneDuplicateResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneDuplicateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneDuplicateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && scene_ != nullptr) {
    delete scene_;
  }
  scene_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneDuplicateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Scene scene = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneDuplicateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneDuplicateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Scene scene = 1;
  if (this->has_scene()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::scene(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneDuplicateResponse)
  return target;
}

size_t SceneDuplicateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneDuplicateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Scene scene = 1;
  if (this->has_scene()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scene_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneDuplicateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneDuplicateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneDuplicateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneDuplicateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneDuplicateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneDuplicateResponse)
    MergeFrom(*source);
  }
}

void SceneDuplicateResponse::MergeFrom(const SceneDuplicateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneDuplicateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scene()) {
    _internal_mutable_scene()->::proto::Scene::MergeFrom(from._internal_scene());
  }
}

void SceneDuplicateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneDuplicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneDuplicateResponse::CopyFrom(const SceneDuplicateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneDuplicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneDuplicateResponse::IsInitialized() const {
  return true;
}

void SceneDuplicateResponse::InternalSwap(SceneDuplicateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(scene_, other->scene_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneDuplicateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneSetAsCurrentResponse::InitAsDefaultInstance() {
  ::proto::_SceneSetAsCurrentResponse_default_instance_._instance.get_mutable()->show_ = const_cast< ::proto::Show*>(
      ::proto::Show::internal_default_instance());
}
class SceneSetAsCurrentResponse::_Internal {
 public:
  static const ::proto::Show& show(const SceneSetAsCurrentResponse* msg);
};

const ::proto::Show&
SceneSetAsCurrentResponse::_Internal::show(const SceneSetAsCurrentResponse* msg) {
  return *msg->show_;
}
SceneSetAsCurrentResponse::SceneSetAsCurrentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneSetAsCurrentResponse)
}
SceneSetAsCurrentResponse::SceneSetAsCurrentResponse(const SceneSetAsCurrentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_show()) {
    show_ = new ::proto::Show(*from.show_);
  } else {
    show_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneSetAsCurrentResponse)
}

void SceneSetAsCurrentResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneSetAsCurrentResponse_studio_2eproto.base);
  show_ = nullptr;
}

SceneSetAsCurrentResponse::~SceneSetAsCurrentResponse() {
  // @@protoc_insertion_point(destructor:proto.SceneSetAsCurrentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneSetAsCurrentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete show_;
}

void SceneSetAsCurrentResponse::ArenaDtor(void* object) {
  SceneSetAsCurrentResponse* _this = reinterpret_cast< SceneSetAsCurrentResponse* >(object);
  (void)_this;
}
void SceneSetAsCurrentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneSetAsCurrentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneSetAsCurrentResponse& SceneSetAsCurrentResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneSetAsCurrentResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneSetAsCurrentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneSetAsCurrentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && show_ != nullptr) {
    delete show_;
  }
  show_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneSetAsCurrentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Show show = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_show(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneSetAsCurrentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneSetAsCurrentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::show(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneSetAsCurrentResponse)
  return target;
}

size_t SceneSetAsCurrentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneSetAsCurrentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Show show = 1;
  if (this->has_show()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *show_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneSetAsCurrentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneSetAsCurrentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneSetAsCurrentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneSetAsCurrentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneSetAsCurrentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneSetAsCurrentResponse)
    MergeFrom(*source);
  }
}

void SceneSetAsCurrentResponse::MergeFrom(const SceneSetAsCurrentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneSetAsCurrentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_show()) {
    _internal_mutable_show()->::proto::Show::MergeFrom(from._internal_show());
  }
}

void SceneSetAsCurrentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneSetAsCurrentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneSetAsCurrentResponse::CopyFrom(const SceneSetAsCurrentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneSetAsCurrentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneSetAsCurrentResponse::IsInitialized() const {
  return true;
}

void SceneSetAsCurrentResponse::InternalSwap(SceneSetAsCurrentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(show_, other->show_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneSetAsCurrentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneGetCurrentResponse::InitAsDefaultInstance() {
}
class SceneGetCurrentResponse::_Internal {
 public:
};

SceneGetCurrentResponse::SceneGetCurrentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SceneGetCurrentResponse)
}
SceneGetCurrentResponse::SceneGetCurrentResponse(const SceneGetCurrentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scene_id().empty()) {
    scene_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_scene_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneGetCurrentResponse)
}

void SceneGetCurrentResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneGetCurrentResponse_studio_2eproto.base);
  scene_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SceneGetCurrentResponse::~SceneGetCurrentResponse() {
  // @@protoc_insertion_point(destructor:proto.SceneGetCurrentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneGetCurrentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  scene_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneGetCurrentResponse::ArenaDtor(void* object) {
  SceneGetCurrentResponse* _this = reinterpret_cast< SceneGetCurrentResponse* >(object);
  (void)_this;
}
void SceneGetCurrentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneGetCurrentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneGetCurrentResponse& SceneGetCurrentResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneGetCurrentResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SceneGetCurrentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGetCurrentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneGetCurrentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string scene_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_scene_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.SceneGetCurrentResponse.scene_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneGetCurrentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGetCurrentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scene_id().data(), static_cast<int>(this->_internal_scene_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SceneGetCurrentResponse.scene_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scene_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGetCurrentResponse)
  return target;
}

size_t SceneGetCurrentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGetCurrentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneGetCurrentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGetCurrentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGetCurrentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneGetCurrentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGetCurrentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGetCurrentResponse)
    MergeFrom(*source);
  }
}

void SceneGetCurrentResponse::MergeFrom(const SceneGetCurrentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGetCurrentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id().size() > 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void SceneGetCurrentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGetCurrentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGetCurrentResponse::CopyFrom(const SceneGetCurrentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGetCurrentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGetCurrentResponse::IsInitialized() const {
  return true;
}

void SceneGetCurrentResponse::InternalSwap(SceneGetCurrentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scene_id_.Swap(&other->scene_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneGetCurrentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceGetResponse::InitAsDefaultInstance() {
  ::proto::_SourceGetResponse_default_instance_._instance.get_mutable()->source_ = const_cast< ::proto::Source*>(
      ::proto::Source::internal_default_instance());
}
class SourceGetResponse::_Internal {
 public:
  static const ::proto::Source& source(const SourceGetResponse* msg);
};

const ::proto::Source&
SourceGetResponse::_Internal::source(const SourceGetResponse* msg) {
  return *msg->source_;
}
SourceGetResponse::SourceGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceGetResponse)
}
SourceGetResponse::SourceGetResponse(const SourceGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::proto::Source(*from.source_);
  } else {
    source_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceGetResponse)
}

void SourceGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceGetResponse_studio_2eproto.base);
  source_ = nullptr;
}

SourceGetResponse::~SourceGetResponse() {
  // @@protoc_insertion_point(destructor:proto.SourceGetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
}

void SourceGetResponse::ArenaDtor(void* object) {
  SourceGetResponse* _this = reinterpret_cast< SourceGetResponse* >(object);
  (void)_this;
}
void SourceGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceGetResponse& SourceGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceGetResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Source source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceGetResponse)
  return target;
}

size_t SourceGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceGetResponse)
    MergeFrom(*source);
  }
}

void SourceGetResponse::MergeFrom(const SourceGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::proto::Source::MergeFrom(from._internal_source());
  }
}

void SourceGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceGetResponse::CopyFrom(const SourceGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceGetResponse::IsInitialized() const {
  return true;
}

void SourceGetResponse::InternalSwap(SourceGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceAddResponse::InitAsDefaultInstance() {
  ::proto::_SourceAddResponse_default_instance_._instance.get_mutable()->source_ = const_cast< ::proto::Source*>(
      ::proto::Source::internal_default_instance());
}
class SourceAddResponse::_Internal {
 public:
  static const ::proto::Source& source(const SourceAddResponse* msg);
};

const ::proto::Source&
SourceAddResponse::_Internal::source(const SourceAddResponse* msg) {
  return *msg->source_;
}
SourceAddResponse::SourceAddResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceAddResponse)
}
SourceAddResponse::SourceAddResponse(const SourceAddResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::proto::Source(*from.source_);
  } else {
    source_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceAddResponse)
}

void SourceAddResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceAddResponse_studio_2eproto.base);
  source_ = nullptr;
}

SourceAddResponse::~SourceAddResponse() {
  // @@protoc_insertion_point(destructor:proto.SourceAddResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceAddResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
}

void SourceAddResponse::ArenaDtor(void* object) {
  SourceAddResponse* _this = reinterpret_cast< SourceAddResponse* >(object);
  (void)_this;
}
void SourceAddResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceAddResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceAddResponse& SourceAddResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceAddResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceAddResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Source source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceAddResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceAddResponse)
  return target;
}

size_t SourceAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceAddResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceAddResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceAddResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceAddResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceAddResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceAddResponse)
    MergeFrom(*source);
  }
}

void SourceAddResponse::MergeFrom(const SourceAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::proto::Source::MergeFrom(from._internal_source());
  }
}

void SourceAddResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceAddResponse::CopyFrom(const SourceAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceAddResponse::IsInitialized() const {
  return true;
}

void SourceAddResponse::InternalSwap(SourceAddResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceAddResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceDuplicateResponse::InitAsDefaultInstance() {
  ::proto::_SourceDuplicateResponse_default_instance_._instance.get_mutable()->source_ = const_cast< ::proto::Source*>(
      ::proto::Source::internal_default_instance());
}
class SourceDuplicateResponse::_Internal {
 public:
  static const ::proto::Source& source(const SourceDuplicateResponse* msg);
};

const ::proto::Source&
SourceDuplicateResponse::_Internal::source(const SourceDuplicateResponse* msg) {
  return *msg->source_;
}
SourceDuplicateResponse::SourceDuplicateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceDuplicateResponse)
}
SourceDuplicateResponse::SourceDuplicateResponse(const SourceDuplicateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::proto::Source(*from.source_);
  } else {
    source_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceDuplicateResponse)
}

void SourceDuplicateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceDuplicateResponse_studio_2eproto.base);
  source_ = nullptr;
}

SourceDuplicateResponse::~SourceDuplicateResponse() {
  // @@protoc_insertion_point(destructor:proto.SourceDuplicateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceDuplicateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
}

void SourceDuplicateResponse::ArenaDtor(void* object) {
  SourceDuplicateResponse* _this = reinterpret_cast< SourceDuplicateResponse* >(object);
  (void)_this;
}
void SourceDuplicateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceDuplicateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceDuplicateResponse& SourceDuplicateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceDuplicateResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceDuplicateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceDuplicateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceDuplicateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Source source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceDuplicateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceDuplicateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceDuplicateResponse)
  return target;
}

size_t SourceDuplicateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceDuplicateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceDuplicateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceDuplicateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceDuplicateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceDuplicateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceDuplicateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceDuplicateResponse)
    MergeFrom(*source);
  }
}

void SourceDuplicateResponse::MergeFrom(const SourceDuplicateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceDuplicateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::proto::Source::MergeFrom(from._internal_source());
  }
}

void SourceDuplicateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceDuplicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceDuplicateResponse::CopyFrom(const SourceDuplicateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceDuplicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceDuplicateResponse::IsInitialized() const {
  return true;
}

void SourceDuplicateResponse::InternalSwap(SourceDuplicateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceDuplicateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceSetPropertiesResponse::InitAsDefaultInstance() {
  ::proto::_SourceSetPropertiesResponse_default_instance_._instance.get_mutable()->source_ = const_cast< ::proto::Source*>(
      ::proto::Source::internal_default_instance());
}
class SourceSetPropertiesResponse::_Internal {
 public:
  static const ::proto::Source& source(const SourceSetPropertiesResponse* msg);
};

const ::proto::Source&
SourceSetPropertiesResponse::_Internal::source(const SourceSetPropertiesResponse* msg) {
  return *msg->source_;
}
SourceSetPropertiesResponse::SourceSetPropertiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.SourceSetPropertiesResponse)
}
SourceSetPropertiesResponse::SourceSetPropertiesResponse(const SourceSetPropertiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::proto::Source(*from.source_);
  } else {
    source_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceSetPropertiesResponse)
}

void SourceSetPropertiesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceSetPropertiesResponse_studio_2eproto.base);
  source_ = nullptr;
}

SourceSetPropertiesResponse::~SourceSetPropertiesResponse() {
  // @@protoc_insertion_point(destructor:proto.SourceSetPropertiesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceSetPropertiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
}

void SourceSetPropertiesResponse::ArenaDtor(void* object) {
  SourceSetPropertiesResponse* _this = reinterpret_cast< SourceSetPropertiesResponse* >(object);
  (void)_this;
}
void SourceSetPropertiesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceSetPropertiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceSetPropertiesResponse& SourceSetPropertiesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceSetPropertiesResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void SourceSetPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceSetPropertiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceSetPropertiesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.Source source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceSetPropertiesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceSetPropertiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceSetPropertiesResponse)
  return target;
}

size_t SourceSetPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceSetPropertiesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.Source source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceSetPropertiesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceSetPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceSetPropertiesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceSetPropertiesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceSetPropertiesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceSetPropertiesResponse)
    MergeFrom(*source);
  }
}

void SourceSetPropertiesResponse::MergeFrom(const SourceSetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceSetPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::proto::Source::MergeFrom(from._internal_source());
  }
}

void SourceSetPropertiesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceSetPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceSetPropertiesResponse::CopyFrom(const SourceSetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceSetPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceSetPropertiesResponse::IsInitialized() const {
  return true;
}

void SourceSetPropertiesResponse::InternalSwap(SourceSetPropertiesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceSetPropertiesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HealthResponse::InitAsDefaultInstance() {
}
class HealthResponse::_Internal {
 public:
};

HealthResponse::HealthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.HealthResponse)
}
HealthResponse::HealthResponse(const HealthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:proto.HealthResponse)
}

void HealthResponse::SharedCtor() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}

HealthResponse::~HealthResponse() {
  // @@protoc_insertion_point(destructor:proto.HealthResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HealthResponse::ArenaDtor(void* object) {
  HealthResponse* _this = reinterpret_cast< HealthResponse* >(object);
  (void)_this;
}
void HealthResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthResponse& HealthResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthResponse_studio_2eproto.base);
  return *internal_default_instance();
}


void HealthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HealthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.HealthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HealthResponse)
  return target;
}

size_t HealthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HealthResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HealthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HealthResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HealthResponse)
    MergeFrom(*source);
  }
}

void HealthResponse::MergeFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HealthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void HealthResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthResponse::CopyFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthResponse::IsInitialized() const {
  return true;
}

void HealthResponse::InternalSwap(HealthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::StudioState* Arena::CreateMaybeMessage< ::proto::StudioState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::StudioState >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Show* Arena::CreateMaybeMessage< ::proto::Show >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::Show >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Scene* Arena::CreateMaybeMessage< ::proto::Scene >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::Scene >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Source* Arena::CreateMaybeMessage< ::proto::Source >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::Source >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowGetRequest* Arena::CreateMaybeMessage< ::proto::ShowGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowCreateRequest* Arena::CreateMaybeMessage< ::proto::ShowCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowDuplicateRequest* Arena::CreateMaybeMessage< ::proto::ShowDuplicateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowDuplicateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowRemoveRequest* Arena::CreateMaybeMessage< ::proto::ShowRemoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowRemoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowLoadRequest* Arena::CreateMaybeMessage< ::proto::ShowLoadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneGetRequest* Arena::CreateMaybeMessage< ::proto::SceneGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneAddRequest* Arena::CreateMaybeMessage< ::proto::SceneAddRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneAddRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneDuplicateRequest* Arena::CreateMaybeMessage< ::proto::SceneDuplicateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneDuplicateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneRemoveRequest* Arena::CreateMaybeMessage< ::proto::SceneRemoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneRemoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneSetAsCurrentRequest* Arena::CreateMaybeMessage< ::proto::SceneSetAsCurrentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneSetAsCurrentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneGetCurrentRequest* Arena::CreateMaybeMessage< ::proto::SceneGetCurrentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneGetCurrentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceGetRequest* Arena::CreateMaybeMessage< ::proto::SourceGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceAddRequest* Arena::CreateMaybeMessage< ::proto::SourceAddRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceAddRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceDuplicateRequest* Arena::CreateMaybeMessage< ::proto::SourceDuplicateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceDuplicateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceRemoveRequest* Arena::CreateMaybeMessage< ::proto::SourceRemoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceRemoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceSetPropertiesRequest* Arena::CreateMaybeMessage< ::proto::SourceSetPropertiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceSetPropertiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::StudioGetResponse* Arena::CreateMaybeMessage< ::proto::StudioGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::StudioGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowGetResponse* Arena::CreateMaybeMessage< ::proto::ShowGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowCreateResponse* Arena::CreateMaybeMessage< ::proto::ShowCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowDuplicateResponse* Arena::CreateMaybeMessage< ::proto::ShowDuplicateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowDuplicateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowLoadResponse* Arena::CreateMaybeMessage< ::proto::ShowLoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowLoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowSwitchSourceResponse* Arena::CreateMaybeMessage< ::proto::ShowSwitchSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ShowSwitchSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneGetResponse* Arena::CreateMaybeMessage< ::proto::SceneGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneAddResponse* Arena::CreateMaybeMessage< ::proto::SceneAddResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneAddResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneDuplicateResponse* Arena::CreateMaybeMessage< ::proto::SceneDuplicateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneDuplicateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneSetAsCurrentResponse* Arena::CreateMaybeMessage< ::proto::SceneSetAsCurrentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneSetAsCurrentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SceneGetCurrentResponse* Arena::CreateMaybeMessage< ::proto::SceneGetCurrentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SceneGetCurrentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceGetResponse* Arena::CreateMaybeMessage< ::proto::SourceGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceAddResponse* Arena::CreateMaybeMessage< ::proto::SourceAddResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceAddResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceDuplicateResponse* Arena::CreateMaybeMessage< ::proto::SourceDuplicateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceDuplicateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SourceSetPropertiesResponse* Arena::CreateMaybeMessage< ::proto::SourceSetPropertiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SourceSetPropertiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::HealthResponse* Arena::CreateMaybeMessage< ::proto::HealthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::HealthResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
