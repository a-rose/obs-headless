// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: studio.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_studio_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_studio_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_studio_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_studio_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_studio_2eproto;
namespace proto {
class HealthResponse;
struct HealthResponseDefaultTypeInternal;
extern HealthResponseDefaultTypeInternal _HealthResponse_default_instance_;
class Scene;
struct SceneDefaultTypeInternal;
extern SceneDefaultTypeInternal _Scene_default_instance_;
class SceneAddRequest;
struct SceneAddRequestDefaultTypeInternal;
extern SceneAddRequestDefaultTypeInternal _SceneAddRequest_default_instance_;
class SceneAddResponse;
struct SceneAddResponseDefaultTypeInternal;
extern SceneAddResponseDefaultTypeInternal _SceneAddResponse_default_instance_;
class SceneDuplicateRequest;
struct SceneDuplicateRequestDefaultTypeInternal;
extern SceneDuplicateRequestDefaultTypeInternal _SceneDuplicateRequest_default_instance_;
class SceneDuplicateResponse;
struct SceneDuplicateResponseDefaultTypeInternal;
extern SceneDuplicateResponseDefaultTypeInternal _SceneDuplicateResponse_default_instance_;
class SceneGetCurrentRequest;
struct SceneGetCurrentRequestDefaultTypeInternal;
extern SceneGetCurrentRequestDefaultTypeInternal _SceneGetCurrentRequest_default_instance_;
class SceneGetCurrentResponse;
struct SceneGetCurrentResponseDefaultTypeInternal;
extern SceneGetCurrentResponseDefaultTypeInternal _SceneGetCurrentResponse_default_instance_;
class SceneGetRequest;
struct SceneGetRequestDefaultTypeInternal;
extern SceneGetRequestDefaultTypeInternal _SceneGetRequest_default_instance_;
class SceneGetResponse;
struct SceneGetResponseDefaultTypeInternal;
extern SceneGetResponseDefaultTypeInternal _SceneGetResponse_default_instance_;
class SceneRemoveRequest;
struct SceneRemoveRequestDefaultTypeInternal;
extern SceneRemoveRequestDefaultTypeInternal _SceneRemoveRequest_default_instance_;
class SceneSetAsCurrentRequest;
struct SceneSetAsCurrentRequestDefaultTypeInternal;
extern SceneSetAsCurrentRequestDefaultTypeInternal _SceneSetAsCurrentRequest_default_instance_;
class SceneSetAsCurrentResponse;
struct SceneSetAsCurrentResponseDefaultTypeInternal;
extern SceneSetAsCurrentResponseDefaultTypeInternal _SceneSetAsCurrentResponse_default_instance_;
class Show;
struct ShowDefaultTypeInternal;
extern ShowDefaultTypeInternal _Show_default_instance_;
class ShowCreateRequest;
struct ShowCreateRequestDefaultTypeInternal;
extern ShowCreateRequestDefaultTypeInternal _ShowCreateRequest_default_instance_;
class ShowCreateResponse;
struct ShowCreateResponseDefaultTypeInternal;
extern ShowCreateResponseDefaultTypeInternal _ShowCreateResponse_default_instance_;
class ShowDuplicateRequest;
struct ShowDuplicateRequestDefaultTypeInternal;
extern ShowDuplicateRequestDefaultTypeInternal _ShowDuplicateRequest_default_instance_;
class ShowDuplicateResponse;
struct ShowDuplicateResponseDefaultTypeInternal;
extern ShowDuplicateResponseDefaultTypeInternal _ShowDuplicateResponse_default_instance_;
class ShowGetRequest;
struct ShowGetRequestDefaultTypeInternal;
extern ShowGetRequestDefaultTypeInternal _ShowGetRequest_default_instance_;
class ShowGetResponse;
struct ShowGetResponseDefaultTypeInternal;
extern ShowGetResponseDefaultTypeInternal _ShowGetResponse_default_instance_;
class ShowLoadRequest;
struct ShowLoadRequestDefaultTypeInternal;
extern ShowLoadRequestDefaultTypeInternal _ShowLoadRequest_default_instance_;
class ShowLoadResponse;
struct ShowLoadResponseDefaultTypeInternal;
extern ShowLoadResponseDefaultTypeInternal _ShowLoadResponse_default_instance_;
class ShowRemoveRequest;
struct ShowRemoveRequestDefaultTypeInternal;
extern ShowRemoveRequestDefaultTypeInternal _ShowRemoveRequest_default_instance_;
class ShowSwitchSourceResponse;
struct ShowSwitchSourceResponseDefaultTypeInternal;
extern ShowSwitchSourceResponseDefaultTypeInternal _ShowSwitchSourceResponse_default_instance_;
class Source;
struct SourceDefaultTypeInternal;
extern SourceDefaultTypeInternal _Source_default_instance_;
class SourceAddRequest;
struct SourceAddRequestDefaultTypeInternal;
extern SourceAddRequestDefaultTypeInternal _SourceAddRequest_default_instance_;
class SourceAddResponse;
struct SourceAddResponseDefaultTypeInternal;
extern SourceAddResponseDefaultTypeInternal _SourceAddResponse_default_instance_;
class SourceDuplicateRequest;
struct SourceDuplicateRequestDefaultTypeInternal;
extern SourceDuplicateRequestDefaultTypeInternal _SourceDuplicateRequest_default_instance_;
class SourceDuplicateResponse;
struct SourceDuplicateResponseDefaultTypeInternal;
extern SourceDuplicateResponseDefaultTypeInternal _SourceDuplicateResponse_default_instance_;
class SourceGetRequest;
struct SourceGetRequestDefaultTypeInternal;
extern SourceGetRequestDefaultTypeInternal _SourceGetRequest_default_instance_;
class SourceGetResponse;
struct SourceGetResponseDefaultTypeInternal;
extern SourceGetResponseDefaultTypeInternal _SourceGetResponse_default_instance_;
class SourceRemoveRequest;
struct SourceRemoveRequestDefaultTypeInternal;
extern SourceRemoveRequestDefaultTypeInternal _SourceRemoveRequest_default_instance_;
class SourceSetPropertiesRequest;
struct SourceSetPropertiesRequestDefaultTypeInternal;
extern SourceSetPropertiesRequestDefaultTypeInternal _SourceSetPropertiesRequest_default_instance_;
class SourceSetPropertiesResponse;
struct SourceSetPropertiesResponseDefaultTypeInternal;
extern SourceSetPropertiesResponseDefaultTypeInternal _SourceSetPropertiesResponse_default_instance_;
class StudioGetResponse;
struct StudioGetResponseDefaultTypeInternal;
extern StudioGetResponseDefaultTypeInternal _StudioGetResponse_default_instance_;
class StudioState;
struct StudioStateDefaultTypeInternal;
extern StudioStateDefaultTypeInternal _StudioState_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {

// ===================================================================


// -------------------------------------------------------------------

class SourceSetPropertiesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceSetPropertiesRequest) */ {
 public:
  inline SourceSetPropertiesRequest() : SourceSetPropertiesRequest(nullptr) {}
  ~SourceSetPropertiesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceSetPropertiesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceSetPropertiesRequest(const SourceSetPropertiesRequest& from) : SourceSetPropertiesRequest(nullptr, from) {}
  inline SourceSetPropertiesRequest(SourceSetPropertiesRequest&& from) noexcept
      : SourceSetPropertiesRequest(nullptr, std::move(from)) {}
  inline SourceSetPropertiesRequest& operator=(const SourceSetPropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceSetPropertiesRequest& operator=(SourceSetPropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceSetPropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceSetPropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const SourceSetPropertiesRequest*>(
        &_SourceSetPropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SourceSetPropertiesRequest& a, SourceSetPropertiesRequest& b) { a.Swap(&b); }
  inline void Swap(SourceSetPropertiesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceSetPropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceSetPropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceSetPropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceSetPropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceSetPropertiesRequest& from) { SourceSetPropertiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceSetPropertiesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceSetPropertiesRequest"; }

 protected:
  explicit SourceSetPropertiesRequest(::google::protobuf::Arena* arena);
  SourceSetPropertiesRequest(::google::protobuf::Arena* arena, const SourceSetPropertiesRequest& from);
  SourceSetPropertiesRequest(::google::protobuf::Arena* arena, SourceSetPropertiesRequest&& from) noexcept
      : SourceSetPropertiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kSourceIdFieldNumber = 3,
    kSourceTypeFieldNumber = 4,
    kSourceUrlFieldNumber = 5,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // string source_id = 3;
  void clear_source_id() ;
  const std::string& source_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_id();
  PROTOBUF_NODISCARD std::string* release_source_id();
  void set_allocated_source_id(std::string* value);

  private:
  const std::string& _internal_source_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_id(
      const std::string& value);
  std::string* _internal_mutable_source_id();

  public:
  // string source_type = 4;
  void clear_source_type() ;
  const std::string& source_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_type(Arg_&& arg, Args_... args);
  std::string* mutable_source_type();
  PROTOBUF_NODISCARD std::string* release_source_type();
  void set_allocated_source_type(std::string* value);

  private:
  const std::string& _internal_source_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_type(
      const std::string& value);
  std::string* _internal_mutable_source_type();

  public:
  // string source_url = 5;
  void clear_source_url() ;
  const std::string& source_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_url(Arg_&& arg, Args_... args);
  std::string* mutable_source_url();
  PROTOBUF_NODISCARD std::string* release_source_url();
  void set_allocated_source_url(std::string* value);

  private:
  const std::string& _internal_source_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_url(
      const std::string& value);
  std::string* _internal_mutable_source_url();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceSetPropertiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      86, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceSetPropertiesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceSetPropertiesRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    ::google::protobuf::internal::ArenaStringPtr source_id_;
    ::google::protobuf::internal::ArenaStringPtr source_type_;
    ::google::protobuf::internal::ArenaStringPtr source_url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceRemoveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceRemoveRequest) */ {
 public:
  inline SourceRemoveRequest() : SourceRemoveRequest(nullptr) {}
  ~SourceRemoveRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceRemoveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceRemoveRequest(const SourceRemoveRequest& from) : SourceRemoveRequest(nullptr, from) {}
  inline SourceRemoveRequest(SourceRemoveRequest&& from) noexcept
      : SourceRemoveRequest(nullptr, std::move(from)) {}
  inline SourceRemoveRequest& operator=(const SourceRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceRemoveRequest& operator=(SourceRemoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceRemoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceRemoveRequest* internal_default_instance() {
    return reinterpret_cast<const SourceRemoveRequest*>(
        &_SourceRemoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(SourceRemoveRequest& a, SourceRemoveRequest& b) { a.Swap(&b); }
  inline void Swap(SourceRemoveRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceRemoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceRemoveRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceRemoveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceRemoveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceRemoveRequest& from) { SourceRemoveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceRemoveRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceRemoveRequest"; }

 protected:
  explicit SourceRemoveRequest(::google::protobuf::Arena* arena);
  SourceRemoveRequest(::google::protobuf::Arena* arena, const SourceRemoveRequest& from);
  SourceRemoveRequest(::google::protobuf::Arena* arena, SourceRemoveRequest&& from) noexcept
      : SourceRemoveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kSourceIdFieldNumber = 3,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // string source_id = 3;
  void clear_source_id() ;
  const std::string& source_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_id();
  PROTOBUF_NODISCARD std::string* release_source_id();
  void set_allocated_source_id(std::string* value);

  private:
  const std::string& _internal_source_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_id(
      const std::string& value);
  std::string* _internal_mutable_source_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceRemoveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceRemoveRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceRemoveRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    ::google::protobuf::internal::ArenaStringPtr source_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceGetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceGetRequest) */ {
 public:
  inline SourceGetRequest() : SourceGetRequest(nullptr) {}
  ~SourceGetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceGetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceGetRequest(const SourceGetRequest& from) : SourceGetRequest(nullptr, from) {}
  inline SourceGetRequest(SourceGetRequest&& from) noexcept
      : SourceGetRequest(nullptr, std::move(from)) {}
  inline SourceGetRequest& operator=(const SourceGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceGetRequest& operator=(SourceGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceGetRequest* internal_default_instance() {
    return reinterpret_cast<const SourceGetRequest*>(
        &_SourceGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SourceGetRequest& a, SourceGetRequest& b) { a.Swap(&b); }
  inline void Swap(SourceGetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceGetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceGetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceGetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceGetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceGetRequest& from) { SourceGetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceGetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceGetRequest"; }

 protected:
  explicit SourceGetRequest(::google::protobuf::Arena* arena);
  SourceGetRequest(::google::protobuf::Arena* arena, const SourceGetRequest& from);
  SourceGetRequest(::google::protobuf::Arena* arena, SourceGetRequest&& from) noexcept
      : SourceGetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kSourceIdFieldNumber = 3,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // string source_id = 3;
  void clear_source_id() ;
  const std::string& source_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_id();
  PROTOBUF_NODISCARD std::string* release_source_id();
  void set_allocated_source_id(std::string* value);

  private:
  const std::string& _internal_source_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_id(
      const std::string& value);
  std::string* _internal_mutable_source_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceGetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceGetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceGetRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    ::google::protobuf::internal::ArenaStringPtr source_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceDuplicateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceDuplicateRequest) */ {
 public:
  inline SourceDuplicateRequest() : SourceDuplicateRequest(nullptr) {}
  ~SourceDuplicateRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceDuplicateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceDuplicateRequest(const SourceDuplicateRequest& from) : SourceDuplicateRequest(nullptr, from) {}
  inline SourceDuplicateRequest(SourceDuplicateRequest&& from) noexcept
      : SourceDuplicateRequest(nullptr, std::move(from)) {}
  inline SourceDuplicateRequest& operator=(const SourceDuplicateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceDuplicateRequest& operator=(SourceDuplicateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceDuplicateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceDuplicateRequest* internal_default_instance() {
    return reinterpret_cast<const SourceDuplicateRequest*>(
        &_SourceDuplicateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SourceDuplicateRequest& a, SourceDuplicateRequest& b) { a.Swap(&b); }
  inline void Swap(SourceDuplicateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceDuplicateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceDuplicateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceDuplicateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceDuplicateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceDuplicateRequest& from) { SourceDuplicateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceDuplicateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceDuplicateRequest"; }

 protected:
  explicit SourceDuplicateRequest(::google::protobuf::Arena* arena);
  SourceDuplicateRequest(::google::protobuf::Arena* arena, const SourceDuplicateRequest& from);
  SourceDuplicateRequest(::google::protobuf::Arena* arena, SourceDuplicateRequest&& from) noexcept
      : SourceDuplicateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kSourceIdFieldNumber = 3,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // string source_id = 3;
  void clear_source_id() ;
  const std::string& source_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_id();
  PROTOBUF_NODISCARD std::string* release_source_id();
  void set_allocated_source_id(std::string* value);

  private:
  const std::string& _internal_source_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_id(
      const std::string& value);
  std::string* _internal_mutable_source_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceDuplicateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceDuplicateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceDuplicateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    ::google::protobuf::internal::ArenaStringPtr source_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceAddRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceAddRequest) */ {
 public:
  inline SourceAddRequest() : SourceAddRequest(nullptr) {}
  ~SourceAddRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceAddRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceAddRequest(const SourceAddRequest& from) : SourceAddRequest(nullptr, from) {}
  inline SourceAddRequest(SourceAddRequest&& from) noexcept
      : SourceAddRequest(nullptr, std::move(from)) {}
  inline SourceAddRequest& operator=(const SourceAddRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceAddRequest& operator=(SourceAddRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceAddRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceAddRequest* internal_default_instance() {
    return reinterpret_cast<const SourceAddRequest*>(
        &_SourceAddRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SourceAddRequest& a, SourceAddRequest& b) { a.Swap(&b); }
  inline void Swap(SourceAddRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceAddRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceAddRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceAddRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceAddRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceAddRequest& from) { SourceAddRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceAddRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceAddRequest"; }

 protected:
  explicit SourceAddRequest(::google::protobuf::Arena* arena);
  SourceAddRequest(::google::protobuf::Arena* arena, const SourceAddRequest& from);
  SourceAddRequest(::google::protobuf::Arena* arena, SourceAddRequest&& from) noexcept
      : SourceAddRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kSourceNameFieldNumber = 3,
    kSourceTypeFieldNumber = 4,
    kSourceUrlFieldNumber = 5,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // string source_name = 3;
  void clear_source_name() ;
  const std::string& source_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_name(Arg_&& arg, Args_... args);
  std::string* mutable_source_name();
  PROTOBUF_NODISCARD std::string* release_source_name();
  void set_allocated_source_name(std::string* value);

  private:
  const std::string& _internal_source_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_name(
      const std::string& value);
  std::string* _internal_mutable_source_name();

  public:
  // string source_type = 4;
  void clear_source_type() ;
  const std::string& source_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_type(Arg_&& arg, Args_... args);
  std::string* mutable_source_type();
  PROTOBUF_NODISCARD std::string* release_source_type();
  void set_allocated_source_type(std::string* value);

  private:
  const std::string& _internal_source_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_type(
      const std::string& value);
  std::string* _internal_mutable_source_type();

  public:
  // string source_url = 5;
  void clear_source_url() ;
  const std::string& source_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_url(Arg_&& arg, Args_... args);
  std::string* mutable_source_url();
  PROTOBUF_NODISCARD std::string* release_source_url();
  void set_allocated_source_url(std::string* value);

  private:
  const std::string& _internal_source_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_url(
      const std::string& value);
  std::string* _internal_mutable_source_url();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceAddRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      78, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceAddRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceAddRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    ::google::protobuf::internal::ArenaStringPtr source_name_;
    ::google::protobuf::internal::ArenaStringPtr source_type_;
    ::google::protobuf::internal::ArenaStringPtr source_url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class Source final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.Source) */ {
 public:
  inline Source() : Source(nullptr) {}
  ~Source() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Source(
      ::google::protobuf::internal::ConstantInitialized);

  inline Source(const Source& from) : Source(nullptr, from) {}
  inline Source(Source&& from) noexcept
      : Source(nullptr, std::move(from)) {}
  inline Source& operator=(const Source& from) {
    CopyFrom(from);
    return *this;
  }
  inline Source& operator=(Source&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Source& default_instance() {
    return *internal_default_instance();
  }
  static inline const Source* internal_default_instance() {
    return reinterpret_cast<const Source*>(
        &_Source_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Source& a, Source& b) { a.Swap(&b); }
  inline void Swap(Source* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Source* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Source* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Source>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Source& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Source& from) { Source::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Source* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.Source"; }

 protected:
  explicit Source(::google::protobuf::Arena* arena);
  Source(::google::protobuf::Arena* arena, const Source& from);
  Source(::google::protobuf::Arena* arena, Source&& from) noexcept
      : Source(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kTypeFieldNumber = 3,
    kUrlFieldNumber = 4,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type = 3;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string url = 4;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:proto.Source)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      34, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Source_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Source& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowRemoveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowRemoveRequest) */ {
 public:
  inline ShowRemoveRequest() : ShowRemoveRequest(nullptr) {}
  ~ShowRemoveRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowRemoveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowRemoveRequest(const ShowRemoveRequest& from) : ShowRemoveRequest(nullptr, from) {}
  inline ShowRemoveRequest(ShowRemoveRequest&& from) noexcept
      : ShowRemoveRequest(nullptr, std::move(from)) {}
  inline ShowRemoveRequest& operator=(const ShowRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowRemoveRequest& operator=(ShowRemoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowRemoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowRemoveRequest* internal_default_instance() {
    return reinterpret_cast<const ShowRemoveRequest*>(
        &_ShowRemoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ShowRemoveRequest& a, ShowRemoveRequest& b) { a.Swap(&b); }
  inline void Swap(ShowRemoveRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowRemoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowRemoveRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowRemoveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowRemoveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowRemoveRequest& from) { ShowRemoveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowRemoveRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowRemoveRequest"; }

 protected:
  explicit ShowRemoveRequest(::google::protobuf::Arena* arena);
  ShowRemoveRequest(::google::protobuf::Arena* arena, const ShowRemoveRequest& from);
  ShowRemoveRequest(::google::protobuf::Arena* arena, ShowRemoveRequest&& from) noexcept
      : ShowRemoveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowRemoveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowRemoveRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowRemoveRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowLoadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowLoadRequest) */ {
 public:
  inline ShowLoadRequest() : ShowLoadRequest(nullptr) {}
  ~ShowLoadRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowLoadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowLoadRequest(const ShowLoadRequest& from) : ShowLoadRequest(nullptr, from) {}
  inline ShowLoadRequest(ShowLoadRequest&& from) noexcept
      : ShowLoadRequest(nullptr, std::move(from)) {}
  inline ShowLoadRequest& operator=(const ShowLoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowLoadRequest& operator=(ShowLoadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowLoadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowLoadRequest* internal_default_instance() {
    return reinterpret_cast<const ShowLoadRequest*>(
        &_ShowLoadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ShowLoadRequest& a, ShowLoadRequest& b) { a.Swap(&b); }
  inline void Swap(ShowLoadRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowLoadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowLoadRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowLoadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowLoadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowLoadRequest& from) { ShowLoadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowLoadRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowLoadRequest"; }

 protected:
  explicit ShowLoadRequest(::google::protobuf::Arena* arena);
  ShowLoadRequest(::google::protobuf::Arena* arena, const ShowLoadRequest& from);
  ShowLoadRequest(::google::protobuf::Arena* arena, ShowLoadRequest&& from) noexcept
      : ShowLoadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowPathFieldNumber = 1,
  };
  // string show_path = 1;
  void clear_show_path() ;
  const std::string& show_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_path(Arg_&& arg, Args_... args);
  std::string* mutable_show_path();
  PROTOBUF_NODISCARD std::string* release_show_path();
  void set_allocated_show_path(std::string* value);

  private:
  const std::string& _internal_show_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_path(
      const std::string& value);
  std::string* _internal_mutable_show_path();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowLoadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowLoadRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowLoadRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowGetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowGetRequest) */ {
 public:
  inline ShowGetRequest() : ShowGetRequest(nullptr) {}
  ~ShowGetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowGetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowGetRequest(const ShowGetRequest& from) : ShowGetRequest(nullptr, from) {}
  inline ShowGetRequest(ShowGetRequest&& from) noexcept
      : ShowGetRequest(nullptr, std::move(from)) {}
  inline ShowGetRequest& operator=(const ShowGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowGetRequest& operator=(ShowGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowGetRequest* internal_default_instance() {
    return reinterpret_cast<const ShowGetRequest*>(
        &_ShowGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ShowGetRequest& a, ShowGetRequest& b) { a.Swap(&b); }
  inline void Swap(ShowGetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowGetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowGetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowGetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowGetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowGetRequest& from) { ShowGetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowGetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowGetRequest"; }

 protected:
  explicit ShowGetRequest(::google::protobuf::Arena* arena);
  ShowGetRequest(::google::protobuf::Arena* arena, const ShowGetRequest& from);
  ShowGetRequest(::google::protobuf::Arena* arena, ShowGetRequest&& from) noexcept
      : ShowGetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowGetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowGetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowGetRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowDuplicateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowDuplicateRequest) */ {
 public:
  inline ShowDuplicateRequest() : ShowDuplicateRequest(nullptr) {}
  ~ShowDuplicateRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowDuplicateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowDuplicateRequest(const ShowDuplicateRequest& from) : ShowDuplicateRequest(nullptr, from) {}
  inline ShowDuplicateRequest(ShowDuplicateRequest&& from) noexcept
      : ShowDuplicateRequest(nullptr, std::move(from)) {}
  inline ShowDuplicateRequest& operator=(const ShowDuplicateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowDuplicateRequest& operator=(ShowDuplicateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowDuplicateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowDuplicateRequest* internal_default_instance() {
    return reinterpret_cast<const ShowDuplicateRequest*>(
        &_ShowDuplicateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ShowDuplicateRequest& a, ShowDuplicateRequest& b) { a.Swap(&b); }
  inline void Swap(ShowDuplicateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowDuplicateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowDuplicateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowDuplicateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowDuplicateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowDuplicateRequest& from) { ShowDuplicateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowDuplicateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowDuplicateRequest"; }

 protected:
  explicit ShowDuplicateRequest(::google::protobuf::Arena* arena);
  ShowDuplicateRequest(::google::protobuf::Arena* arena, const ShowDuplicateRequest& from);
  ShowDuplicateRequest(::google::protobuf::Arena* arena, ShowDuplicateRequest&& from) noexcept
      : ShowDuplicateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowDuplicateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowDuplicateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowDuplicateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowCreateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowCreateRequest) */ {
 public:
  inline ShowCreateRequest() : ShowCreateRequest(nullptr) {}
  ~ShowCreateRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowCreateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowCreateRequest(const ShowCreateRequest& from) : ShowCreateRequest(nullptr, from) {}
  inline ShowCreateRequest(ShowCreateRequest&& from) noexcept
      : ShowCreateRequest(nullptr, std::move(from)) {}
  inline ShowCreateRequest& operator=(const ShowCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowCreateRequest& operator=(ShowCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowCreateRequest* internal_default_instance() {
    return reinterpret_cast<const ShowCreateRequest*>(
        &_ShowCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ShowCreateRequest& a, ShowCreateRequest& b) { a.Swap(&b); }
  inline void Swap(ShowCreateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowCreateRequest& from) { ShowCreateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowCreateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowCreateRequest"; }

 protected:
  explicit ShowCreateRequest(::google::protobuf::Arena* arena);
  ShowCreateRequest(::google::protobuf::Arena* arena, const ShowCreateRequest& from);
  ShowCreateRequest(::google::protobuf::Arena* arena, ShowCreateRequest&& from) noexcept
      : ShowCreateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowNameFieldNumber = 1,
  };
  // string show_name = 1;
  void clear_show_name() ;
  const std::string& show_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_name(Arg_&& arg, Args_... args);
  std::string* mutable_show_name();
  PROTOBUF_NODISCARD std::string* release_show_name();
  void set_allocated_show_name(std::string* value);

  private:
  const std::string& _internal_show_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_name(
      const std::string& value);
  std::string* _internal_mutable_show_name();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowCreateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowCreateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowCreateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneSetAsCurrentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneSetAsCurrentRequest) */ {
 public:
  inline SceneSetAsCurrentRequest() : SceneSetAsCurrentRequest(nullptr) {}
  ~SceneSetAsCurrentRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneSetAsCurrentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneSetAsCurrentRequest(const SceneSetAsCurrentRequest& from) : SceneSetAsCurrentRequest(nullptr, from) {}
  inline SceneSetAsCurrentRequest(SceneSetAsCurrentRequest&& from) noexcept
      : SceneSetAsCurrentRequest(nullptr, std::move(from)) {}
  inline SceneSetAsCurrentRequest& operator=(const SceneSetAsCurrentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneSetAsCurrentRequest& operator=(SceneSetAsCurrentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneSetAsCurrentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneSetAsCurrentRequest* internal_default_instance() {
    return reinterpret_cast<const SceneSetAsCurrentRequest*>(
        &_SceneSetAsCurrentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SceneSetAsCurrentRequest& a, SceneSetAsCurrentRequest& b) { a.Swap(&b); }
  inline void Swap(SceneSetAsCurrentRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneSetAsCurrentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneSetAsCurrentRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneSetAsCurrentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneSetAsCurrentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneSetAsCurrentRequest& from) { SceneSetAsCurrentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneSetAsCurrentRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneSetAsCurrentRequest"; }

 protected:
  explicit SceneSetAsCurrentRequest(::google::protobuf::Arena* arena);
  SceneSetAsCurrentRequest(::google::protobuf::Arena* arena, const SceneSetAsCurrentRequest& from);
  SceneSetAsCurrentRequest(::google::protobuf::Arena* arena, SceneSetAsCurrentRequest&& from) noexcept
      : SceneSetAsCurrentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneSetAsCurrentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneSetAsCurrentRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneSetAsCurrentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneRemoveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneRemoveRequest) */ {
 public:
  inline SceneRemoveRequest() : SceneRemoveRequest(nullptr) {}
  ~SceneRemoveRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneRemoveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneRemoveRequest(const SceneRemoveRequest& from) : SceneRemoveRequest(nullptr, from) {}
  inline SceneRemoveRequest(SceneRemoveRequest&& from) noexcept
      : SceneRemoveRequest(nullptr, std::move(from)) {}
  inline SceneRemoveRequest& operator=(const SceneRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneRemoveRequest& operator=(SceneRemoveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneRemoveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneRemoveRequest* internal_default_instance() {
    return reinterpret_cast<const SceneRemoveRequest*>(
        &_SceneRemoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SceneRemoveRequest& a, SceneRemoveRequest& b) { a.Swap(&b); }
  inline void Swap(SceneRemoveRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneRemoveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneRemoveRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneRemoveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneRemoveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneRemoveRequest& from) { SceneRemoveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneRemoveRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneRemoveRequest"; }

 protected:
  explicit SceneRemoveRequest(::google::protobuf::Arena* arena);
  SceneRemoveRequest(::google::protobuf::Arena* arena, const SceneRemoveRequest& from);
  SceneRemoveRequest(::google::protobuf::Arena* arena, SceneRemoveRequest&& from) noexcept
      : SceneRemoveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneRemoveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneRemoveRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneRemoveRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneGetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneGetRequest) */ {
 public:
  inline SceneGetRequest() : SceneGetRequest(nullptr) {}
  ~SceneGetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneGetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneGetRequest(const SceneGetRequest& from) : SceneGetRequest(nullptr, from) {}
  inline SceneGetRequest(SceneGetRequest&& from) noexcept
      : SceneGetRequest(nullptr, std::move(from)) {}
  inline SceneGetRequest& operator=(const SceneGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneGetRequest& operator=(SceneGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneGetRequest* internal_default_instance() {
    return reinterpret_cast<const SceneGetRequest*>(
        &_SceneGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SceneGetRequest& a, SceneGetRequest& b) { a.Swap(&b); }
  inline void Swap(SceneGetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneGetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneGetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneGetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneGetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneGetRequest& from) { SceneGetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneGetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneGetRequest"; }

 protected:
  explicit SceneGetRequest(::google::protobuf::Arena* arena);
  SceneGetRequest(::google::protobuf::Arena* arena, const SceneGetRequest& from);
  SceneGetRequest(::google::protobuf::Arena* arena, SceneGetRequest&& from) noexcept
      : SceneGetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneGetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneGetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneGetRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneGetCurrentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneGetCurrentResponse) */ {
 public:
  inline SceneGetCurrentResponse() : SceneGetCurrentResponse(nullptr) {}
  ~SceneGetCurrentResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneGetCurrentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneGetCurrentResponse(const SceneGetCurrentResponse& from) : SceneGetCurrentResponse(nullptr, from) {}
  inline SceneGetCurrentResponse(SceneGetCurrentResponse&& from) noexcept
      : SceneGetCurrentResponse(nullptr, std::move(from)) {}
  inline SceneGetCurrentResponse& operator=(const SceneGetCurrentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneGetCurrentResponse& operator=(SceneGetCurrentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneGetCurrentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneGetCurrentResponse* internal_default_instance() {
    return reinterpret_cast<const SceneGetCurrentResponse*>(
        &_SceneGetCurrentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(SceneGetCurrentResponse& a, SceneGetCurrentResponse& b) { a.Swap(&b); }
  inline void Swap(SceneGetCurrentResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneGetCurrentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneGetCurrentResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneGetCurrentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneGetCurrentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneGetCurrentResponse& from) { SceneGetCurrentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneGetCurrentResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneGetCurrentResponse"; }

 protected:
  explicit SceneGetCurrentResponse(::google::protobuf::Arena* arena);
  SceneGetCurrentResponse(::google::protobuf::Arena* arena, const SceneGetCurrentResponse& from);
  SceneGetCurrentResponse(::google::protobuf::Arena* arena, SceneGetCurrentResponse&& from) noexcept
      : SceneGetCurrentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSceneIdFieldNumber = 2,
  };
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneGetCurrentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneGetCurrentResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneGetCurrentResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneGetCurrentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneGetCurrentRequest) */ {
 public:
  inline SceneGetCurrentRequest() : SceneGetCurrentRequest(nullptr) {}
  ~SceneGetCurrentRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneGetCurrentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneGetCurrentRequest(const SceneGetCurrentRequest& from) : SceneGetCurrentRequest(nullptr, from) {}
  inline SceneGetCurrentRequest(SceneGetCurrentRequest&& from) noexcept
      : SceneGetCurrentRequest(nullptr, std::move(from)) {}
  inline SceneGetCurrentRequest& operator=(const SceneGetCurrentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneGetCurrentRequest& operator=(SceneGetCurrentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneGetCurrentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneGetCurrentRequest* internal_default_instance() {
    return reinterpret_cast<const SceneGetCurrentRequest*>(
        &_SceneGetCurrentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SceneGetCurrentRequest& a, SceneGetCurrentRequest& b) { a.Swap(&b); }
  inline void Swap(SceneGetCurrentRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneGetCurrentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneGetCurrentRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneGetCurrentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneGetCurrentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneGetCurrentRequest& from) { SceneGetCurrentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneGetCurrentRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneGetCurrentRequest"; }

 protected:
  explicit SceneGetCurrentRequest(::google::protobuf::Arena* arena);
  SceneGetCurrentRequest(::google::protobuf::Arena* arena, const SceneGetCurrentRequest& from);
  SceneGetCurrentRequest(::google::protobuf::Arena* arena, SceneGetCurrentRequest&& from) noexcept
      : SceneGetCurrentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneGetCurrentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneGetCurrentRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneGetCurrentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneDuplicateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneDuplicateRequest) */ {
 public:
  inline SceneDuplicateRequest() : SceneDuplicateRequest(nullptr) {}
  ~SceneDuplicateRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneDuplicateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneDuplicateRequest(const SceneDuplicateRequest& from) : SceneDuplicateRequest(nullptr, from) {}
  inline SceneDuplicateRequest(SceneDuplicateRequest&& from) noexcept
      : SceneDuplicateRequest(nullptr, std::move(from)) {}
  inline SceneDuplicateRequest& operator=(const SceneDuplicateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneDuplicateRequest& operator=(SceneDuplicateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneDuplicateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneDuplicateRequest* internal_default_instance() {
    return reinterpret_cast<const SceneDuplicateRequest*>(
        &_SceneDuplicateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SceneDuplicateRequest& a, SceneDuplicateRequest& b) { a.Swap(&b); }
  inline void Swap(SceneDuplicateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneDuplicateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneDuplicateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneDuplicateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneDuplicateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneDuplicateRequest& from) { SceneDuplicateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneDuplicateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneDuplicateRequest"; }

 protected:
  explicit SceneDuplicateRequest(::google::protobuf::Arena* arena);
  SceneDuplicateRequest(::google::protobuf::Arena* arena, const SceneDuplicateRequest& from);
  SceneDuplicateRequest(::google::protobuf::Arena* arena, SceneDuplicateRequest&& from) noexcept
      : SceneDuplicateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_id = 2;
  void clear_scene_id() ;
  const std::string& scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_scene_id();
  PROTOBUF_NODISCARD std::string* release_scene_id();
  void set_allocated_scene_id(std::string* value);

  private:
  const std::string& _internal_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_id(
      const std::string& value);
  std::string* _internal_mutable_scene_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneDuplicateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneDuplicateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneDuplicateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneAddRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneAddRequest) */ {
 public:
  inline SceneAddRequest() : SceneAddRequest(nullptr) {}
  ~SceneAddRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneAddRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneAddRequest(const SceneAddRequest& from) : SceneAddRequest(nullptr, from) {}
  inline SceneAddRequest(SceneAddRequest&& from) noexcept
      : SceneAddRequest(nullptr, std::move(from)) {}
  inline SceneAddRequest& operator=(const SceneAddRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneAddRequest& operator=(SceneAddRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneAddRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneAddRequest* internal_default_instance() {
    return reinterpret_cast<const SceneAddRequest*>(
        &_SceneAddRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SceneAddRequest& a, SceneAddRequest& b) { a.Swap(&b); }
  inline void Swap(SceneAddRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneAddRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneAddRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneAddRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneAddRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneAddRequest& from) { SceneAddRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneAddRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneAddRequest"; }

 protected:
  explicit SceneAddRequest(::google::protobuf::Arena* arena);
  SceneAddRequest(::google::protobuf::Arena* arena, const SceneAddRequest& from);
  SceneAddRequest(::google::protobuf::Arena* arena, SceneAddRequest&& from) noexcept
      : SceneAddRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowIdFieldNumber = 1,
    kSceneNameFieldNumber = 2,
  };
  // string show_id = 1;
  void clear_show_id() ;
  const std::string& show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_show_id();
  PROTOBUF_NODISCARD std::string* release_show_id();
  void set_allocated_show_id(std::string* value);

  private:
  const std::string& _internal_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_show_id(
      const std::string& value);
  std::string* _internal_mutable_show_id();

  public:
  // string scene_name = 2;
  void clear_scene_name() ;
  const std::string& scene_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_scene_name(Arg_&& arg, Args_... args);
  std::string* mutable_scene_name();
  PROTOBUF_NODISCARD std::string* release_scene_name();
  void set_allocated_scene_name(std::string* value);

  private:
  const std::string& _internal_scene_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_scene_name(
      const std::string& value);
  std::string* _internal_mutable_scene_name();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneAddRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneAddRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneAddRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr show_id_;
    ::google::protobuf::internal::ArenaStringPtr scene_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class HealthResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.HealthResponse) */ {
 public:
  inline HealthResponse() : HealthResponse(nullptr) {}
  ~HealthResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HealthResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline HealthResponse(const HealthResponse& from) : HealthResponse(nullptr, from) {}
  inline HealthResponse(HealthResponse&& from) noexcept
      : HealthResponse(nullptr, std::move(from)) {}
  inline HealthResponse& operator=(const HealthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HealthResponse& operator=(HealthResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HealthResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HealthResponse* internal_default_instance() {
    return reinterpret_cast<const HealthResponse*>(
        &_HealthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(HealthResponse& a, HealthResponse& b) { a.Swap(&b); }
  inline void Swap(HealthResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HealthResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HealthResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HealthResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HealthResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HealthResponse& from) { HealthResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HealthResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.HealthResponse"; }

 protected:
  explicit HealthResponse(::google::protobuf::Arena* arena);
  HealthResponse(::google::protobuf::Arena* arena, const HealthResponse& from);
  HealthResponse(::google::protobuf::Arena* arena, HealthResponse&& from) noexcept
      : HealthResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
  };
  // int64 timestamp = 1;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.HealthResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HealthResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HealthResponse& from_msg);
    ::int64_t timestamp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceSetPropertiesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceSetPropertiesResponse) */ {
 public:
  inline SourceSetPropertiesResponse() : SourceSetPropertiesResponse(nullptr) {}
  ~SourceSetPropertiesResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceSetPropertiesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceSetPropertiesResponse(const SourceSetPropertiesResponse& from) : SourceSetPropertiesResponse(nullptr, from) {}
  inline SourceSetPropertiesResponse(SourceSetPropertiesResponse&& from) noexcept
      : SourceSetPropertiesResponse(nullptr, std::move(from)) {}
  inline SourceSetPropertiesResponse& operator=(const SourceSetPropertiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceSetPropertiesResponse& operator=(SourceSetPropertiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceSetPropertiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceSetPropertiesResponse* internal_default_instance() {
    return reinterpret_cast<const SourceSetPropertiesResponse*>(
        &_SourceSetPropertiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(SourceSetPropertiesResponse& a, SourceSetPropertiesResponse& b) { a.Swap(&b); }
  inline void Swap(SourceSetPropertiesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceSetPropertiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceSetPropertiesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceSetPropertiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceSetPropertiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceSetPropertiesResponse& from) { SourceSetPropertiesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceSetPropertiesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceSetPropertiesResponse"; }

 protected:
  explicit SourceSetPropertiesResponse(::google::protobuf::Arena* arena);
  SourceSetPropertiesResponse(::google::protobuf::Arena* arena, const SourceSetPropertiesResponse& from);
  SourceSetPropertiesResponse(::google::protobuf::Arena* arena, SourceSetPropertiesResponse&& from) noexcept
      : SourceSetPropertiesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceFieldNumber = 1,
  };
  // .proto.Source source = 1;
  bool has_source() const;
  void clear_source() ;
  const ::proto::Source& source() const;
  PROTOBUF_NODISCARD ::proto::Source* release_source();
  ::proto::Source* mutable_source();
  void set_allocated_source(::proto::Source* value);
  void unsafe_arena_set_allocated_source(::proto::Source* value);
  ::proto::Source* unsafe_arena_release_source();

  private:
  const ::proto::Source& _internal_source() const;
  ::proto::Source* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceSetPropertiesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceSetPropertiesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceSetPropertiesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Source* source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceGetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceGetResponse) */ {
 public:
  inline SourceGetResponse() : SourceGetResponse(nullptr) {}
  ~SourceGetResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceGetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceGetResponse(const SourceGetResponse& from) : SourceGetResponse(nullptr, from) {}
  inline SourceGetResponse(SourceGetResponse&& from) noexcept
      : SourceGetResponse(nullptr, std::move(from)) {}
  inline SourceGetResponse& operator=(const SourceGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceGetResponse& operator=(SourceGetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceGetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceGetResponse* internal_default_instance() {
    return reinterpret_cast<const SourceGetResponse*>(
        &_SourceGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(SourceGetResponse& a, SourceGetResponse& b) { a.Swap(&b); }
  inline void Swap(SourceGetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceGetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceGetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceGetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceGetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceGetResponse& from) { SourceGetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceGetResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceGetResponse"; }

 protected:
  explicit SourceGetResponse(::google::protobuf::Arena* arena);
  SourceGetResponse(::google::protobuf::Arena* arena, const SourceGetResponse& from);
  SourceGetResponse(::google::protobuf::Arena* arena, SourceGetResponse&& from) noexcept
      : SourceGetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceFieldNumber = 1,
  };
  // .proto.Source source = 1;
  bool has_source() const;
  void clear_source() ;
  const ::proto::Source& source() const;
  PROTOBUF_NODISCARD ::proto::Source* release_source();
  ::proto::Source* mutable_source();
  void set_allocated_source(::proto::Source* value);
  void unsafe_arena_set_allocated_source(::proto::Source* value);
  ::proto::Source* unsafe_arena_release_source();

  private:
  const ::proto::Source& _internal_source() const;
  ::proto::Source* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceGetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceGetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceGetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Source* source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceDuplicateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceDuplicateResponse) */ {
 public:
  inline SourceDuplicateResponse() : SourceDuplicateResponse(nullptr) {}
  ~SourceDuplicateResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceDuplicateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceDuplicateResponse(const SourceDuplicateResponse& from) : SourceDuplicateResponse(nullptr, from) {}
  inline SourceDuplicateResponse(SourceDuplicateResponse&& from) noexcept
      : SourceDuplicateResponse(nullptr, std::move(from)) {}
  inline SourceDuplicateResponse& operator=(const SourceDuplicateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceDuplicateResponse& operator=(SourceDuplicateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceDuplicateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceDuplicateResponse* internal_default_instance() {
    return reinterpret_cast<const SourceDuplicateResponse*>(
        &_SourceDuplicateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(SourceDuplicateResponse& a, SourceDuplicateResponse& b) { a.Swap(&b); }
  inline void Swap(SourceDuplicateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceDuplicateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceDuplicateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceDuplicateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceDuplicateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceDuplicateResponse& from) { SourceDuplicateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceDuplicateResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceDuplicateResponse"; }

 protected:
  explicit SourceDuplicateResponse(::google::protobuf::Arena* arena);
  SourceDuplicateResponse(::google::protobuf::Arena* arena, const SourceDuplicateResponse& from);
  SourceDuplicateResponse(::google::protobuf::Arena* arena, SourceDuplicateResponse&& from) noexcept
      : SourceDuplicateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceFieldNumber = 1,
  };
  // .proto.Source source = 1;
  bool has_source() const;
  void clear_source() ;
  const ::proto::Source& source() const;
  PROTOBUF_NODISCARD ::proto::Source* release_source();
  ::proto::Source* mutable_source();
  void set_allocated_source(::proto::Source* value);
  void unsafe_arena_set_allocated_source(::proto::Source* value);
  ::proto::Source* unsafe_arena_release_source();

  private:
  const ::proto::Source& _internal_source() const;
  ::proto::Source* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceDuplicateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceDuplicateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceDuplicateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Source* source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SourceAddResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SourceAddResponse) */ {
 public:
  inline SourceAddResponse() : SourceAddResponse(nullptr) {}
  ~SourceAddResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SourceAddResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SourceAddResponse(const SourceAddResponse& from) : SourceAddResponse(nullptr, from) {}
  inline SourceAddResponse(SourceAddResponse&& from) noexcept
      : SourceAddResponse(nullptr, std::move(from)) {}
  inline SourceAddResponse& operator=(const SourceAddResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceAddResponse& operator=(SourceAddResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceAddResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceAddResponse* internal_default_instance() {
    return reinterpret_cast<const SourceAddResponse*>(
        &_SourceAddResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(SourceAddResponse& a, SourceAddResponse& b) { a.Swap(&b); }
  inline void Swap(SourceAddResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceAddResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceAddResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SourceAddResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceAddResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SourceAddResponse& from) { SourceAddResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceAddResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SourceAddResponse"; }

 protected:
  explicit SourceAddResponse(::google::protobuf::Arena* arena);
  SourceAddResponse(::google::protobuf::Arena* arena, const SourceAddResponse& from);
  SourceAddResponse(::google::protobuf::Arena* arena, SourceAddResponse&& from) noexcept
      : SourceAddResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceFieldNumber = 1,
  };
  // .proto.Source source = 1;
  bool has_source() const;
  void clear_source() ;
  const ::proto::Source& source() const;
  PROTOBUF_NODISCARD ::proto::Source* release_source();
  ::proto::Source* mutable_source();
  void set_allocated_source(::proto::Source* value);
  void unsafe_arena_set_allocated_source(::proto::Source* value);
  ::proto::Source* unsafe_arena_release_source();

  private:
  const ::proto::Source& _internal_source() const;
  ::proto::Source* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:proto.SourceAddResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SourceAddResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SourceAddResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Source* source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class Scene final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.Scene) */ {
 public:
  inline Scene() : Scene(nullptr) {}
  ~Scene() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Scene(
      ::google::protobuf::internal::ConstantInitialized);

  inline Scene(const Scene& from) : Scene(nullptr, from) {}
  inline Scene(Scene&& from) noexcept
      : Scene(nullptr, std::move(from)) {}
  inline Scene& operator=(const Scene& from) {
    CopyFrom(from);
    return *this;
  }
  inline Scene& operator=(Scene&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Scene& default_instance() {
    return *internal_default_instance();
  }
  static inline const Scene* internal_default_instance() {
    return reinterpret_cast<const Scene*>(
        &_Scene_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Scene& a, Scene& b) { a.Swap(&b); }
  inline void Swap(Scene* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Scene* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Scene* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Scene>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Scene& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Scene& from) { Scene::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Scene* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.Scene"; }

 protected:
  explicit Scene(::google::protobuf::Arena* arena);
  Scene(::google::protobuf::Arena* arena, const Scene& from);
  Scene(::google::protobuf::Arena* arena, Scene&& from) noexcept
      : Scene(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActiveSourceIdsFieldNumber = 3,
    kSourcesFieldNumber = 4,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // repeated string active_source_ids = 3;
  int active_source_ids_size() const;
  private:
  int _internal_active_source_ids_size() const;

  public:
  void clear_active_source_ids() ;
  const std::string& active_source_ids(int index) const;
  std::string* mutable_active_source_ids(int index);
  void set_active_source_ids(int index, const std::string& value);
  void set_active_source_ids(int index, std::string&& value);
  void set_active_source_ids(int index, const char* value);
  void set_active_source_ids(int index, const char* value, std::size_t size);
  void set_active_source_ids(int index, absl::string_view value);
  std::string* add_active_source_ids();
  void add_active_source_ids(const std::string& value);
  void add_active_source_ids(std::string&& value);
  void add_active_source_ids(const char* value);
  void add_active_source_ids(const char* value, std::size_t size);
  void add_active_source_ids(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& active_source_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_active_source_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_active_source_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_active_source_ids();

  public:
  // repeated .proto.Source sources = 4;
  int sources_size() const;
  private:
  int _internal_sources_size() const;

  public:
  void clear_sources() ;
  ::proto::Source* mutable_sources(int index);
  ::google::protobuf::RepeatedPtrField<::proto::Source>* mutable_sources();

  private:
  const ::google::protobuf::RepeatedPtrField<::proto::Source>& _internal_sources() const;
  ::google::protobuf::RepeatedPtrField<::proto::Source>* _internal_mutable_sources();
  public:
  const ::proto::Source& sources(int index) const;
  ::proto::Source* add_sources();
  const ::google::protobuf::RepeatedPtrField<::proto::Source>& sources() const;
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:proto.Scene)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Scene_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Scene& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> active_source_ids_;
    ::google::protobuf::RepeatedPtrField< ::proto::Source > sources_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class Show final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.Show) */ {
 public:
  inline Show() : Show(nullptr) {}
  ~Show() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Show(
      ::google::protobuf::internal::ConstantInitialized);

  inline Show(const Show& from) : Show(nullptr, from) {}
  inline Show(Show&& from) noexcept
      : Show(nullptr, std::move(from)) {}
  inline Show& operator=(const Show& from) {
    CopyFrom(from);
    return *this;
  }
  inline Show& operator=(Show&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Show& default_instance() {
    return *internal_default_instance();
  }
  static inline const Show* internal_default_instance() {
    return reinterpret_cast<const Show*>(
        &_Show_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Show& a, Show& b) { a.Swap(&b); }
  inline void Swap(Show* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Show* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Show* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Show>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Show& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Show& from) { Show::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Show* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.Show"; }

 protected:
  explicit Show(::google::protobuf::Arena* arena);
  Show(::google::protobuf::Arena* arena, const Show& from);
  Show(::google::protobuf::Arena* arena, Show&& from) noexcept
      : Show(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScenesFieldNumber = 4,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kActiveSceneIdFieldNumber = 3,
  };
  // repeated .proto.Scene scenes = 4;
  int scenes_size() const;
  private:
  int _internal_scenes_size() const;

  public:
  void clear_scenes() ;
  ::proto::Scene* mutable_scenes(int index);
  ::google::protobuf::RepeatedPtrField<::proto::Scene>* mutable_scenes();

  private:
  const ::google::protobuf::RepeatedPtrField<::proto::Scene>& _internal_scenes() const;
  ::google::protobuf::RepeatedPtrField<::proto::Scene>* _internal_mutable_scenes();
  public:
  const ::proto::Scene& scenes(int index) const;
  ::proto::Scene* add_scenes();
  const ::google::protobuf::RepeatedPtrField<::proto::Scene>& scenes() const;
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string active_scene_id = 3;
  void clear_active_scene_id() ;
  const std::string& active_scene_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_active_scene_id(Arg_&& arg, Args_... args);
  std::string* mutable_active_scene_id();
  PROTOBUF_NODISCARD std::string* release_active_scene_id();
  void set_allocated_active_scene_id(std::string* value);

  private:
  const std::string& _internal_active_scene_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_active_scene_id(
      const std::string& value);
  std::string* _internal_mutable_active_scene_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.Show)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Show_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Show& from_msg);
    ::google::protobuf::RepeatedPtrField< ::proto::Scene > scenes_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr active_scene_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneGetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneGetResponse) */ {
 public:
  inline SceneGetResponse() : SceneGetResponse(nullptr) {}
  ~SceneGetResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneGetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneGetResponse(const SceneGetResponse& from) : SceneGetResponse(nullptr, from) {}
  inline SceneGetResponse(SceneGetResponse&& from) noexcept
      : SceneGetResponse(nullptr, std::move(from)) {}
  inline SceneGetResponse& operator=(const SceneGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneGetResponse& operator=(SceneGetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneGetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneGetResponse* internal_default_instance() {
    return reinterpret_cast<const SceneGetResponse*>(
        &_SceneGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SceneGetResponse& a, SceneGetResponse& b) { a.Swap(&b); }
  inline void Swap(SceneGetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneGetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneGetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneGetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneGetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneGetResponse& from) { SceneGetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneGetResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneGetResponse"; }

 protected:
  explicit SceneGetResponse(::google::protobuf::Arena* arena);
  SceneGetResponse(::google::protobuf::Arena* arena, const SceneGetResponse& from);
  SceneGetResponse(::google::protobuf::Arena* arena, SceneGetResponse&& from) noexcept
      : SceneGetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSceneFieldNumber = 1,
  };
  // .proto.Scene scene = 1;
  bool has_scene() const;
  void clear_scene() ;
  const ::proto::Scene& scene() const;
  PROTOBUF_NODISCARD ::proto::Scene* release_scene();
  ::proto::Scene* mutable_scene();
  void set_allocated_scene(::proto::Scene* value);
  void unsafe_arena_set_allocated_scene(::proto::Scene* value);
  ::proto::Scene* unsafe_arena_release_scene();

  private:
  const ::proto::Scene& _internal_scene() const;
  ::proto::Scene* _internal_mutable_scene();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneGetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneGetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneGetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Scene* scene_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneDuplicateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneDuplicateResponse) */ {
 public:
  inline SceneDuplicateResponse() : SceneDuplicateResponse(nullptr) {}
  ~SceneDuplicateResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneDuplicateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneDuplicateResponse(const SceneDuplicateResponse& from) : SceneDuplicateResponse(nullptr, from) {}
  inline SceneDuplicateResponse(SceneDuplicateResponse&& from) noexcept
      : SceneDuplicateResponse(nullptr, std::move(from)) {}
  inline SceneDuplicateResponse& operator=(const SceneDuplicateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneDuplicateResponse& operator=(SceneDuplicateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneDuplicateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneDuplicateResponse* internal_default_instance() {
    return reinterpret_cast<const SceneDuplicateResponse*>(
        &_SceneDuplicateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(SceneDuplicateResponse& a, SceneDuplicateResponse& b) { a.Swap(&b); }
  inline void Swap(SceneDuplicateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneDuplicateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneDuplicateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneDuplicateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneDuplicateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneDuplicateResponse& from) { SceneDuplicateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneDuplicateResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneDuplicateResponse"; }

 protected:
  explicit SceneDuplicateResponse(::google::protobuf::Arena* arena);
  SceneDuplicateResponse(::google::protobuf::Arena* arena, const SceneDuplicateResponse& from);
  SceneDuplicateResponse(::google::protobuf::Arena* arena, SceneDuplicateResponse&& from) noexcept
      : SceneDuplicateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSceneFieldNumber = 1,
  };
  // .proto.Scene scene = 1;
  bool has_scene() const;
  void clear_scene() ;
  const ::proto::Scene& scene() const;
  PROTOBUF_NODISCARD ::proto::Scene* release_scene();
  ::proto::Scene* mutable_scene();
  void set_allocated_scene(::proto::Scene* value);
  void unsafe_arena_set_allocated_scene(::proto::Scene* value);
  ::proto::Scene* unsafe_arena_release_scene();

  private:
  const ::proto::Scene& _internal_scene() const;
  ::proto::Scene* _internal_mutable_scene();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneDuplicateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneDuplicateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneDuplicateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Scene* scene_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneAddResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneAddResponse) */ {
 public:
  inline SceneAddResponse() : SceneAddResponse(nullptr) {}
  ~SceneAddResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneAddResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneAddResponse(const SceneAddResponse& from) : SceneAddResponse(nullptr, from) {}
  inline SceneAddResponse(SceneAddResponse&& from) noexcept
      : SceneAddResponse(nullptr, std::move(from)) {}
  inline SceneAddResponse& operator=(const SceneAddResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneAddResponse& operator=(SceneAddResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneAddResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneAddResponse* internal_default_instance() {
    return reinterpret_cast<const SceneAddResponse*>(
        &_SceneAddResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(SceneAddResponse& a, SceneAddResponse& b) { a.Swap(&b); }
  inline void Swap(SceneAddResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneAddResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneAddResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneAddResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneAddResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneAddResponse& from) { SceneAddResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneAddResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneAddResponse"; }

 protected:
  explicit SceneAddResponse(::google::protobuf::Arena* arena);
  SceneAddResponse(::google::protobuf::Arena* arena, const SceneAddResponse& from);
  SceneAddResponse(::google::protobuf::Arena* arena, SceneAddResponse&& from) noexcept
      : SceneAddResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSceneFieldNumber = 1,
  };
  // .proto.Scene scene = 1;
  bool has_scene() const;
  void clear_scene() ;
  const ::proto::Scene& scene() const;
  PROTOBUF_NODISCARD ::proto::Scene* release_scene();
  ::proto::Scene* mutable_scene();
  void set_allocated_scene(::proto::Scene* value);
  void unsafe_arena_set_allocated_scene(::proto::Scene* value);
  ::proto::Scene* unsafe_arena_release_scene();

  private:
  const ::proto::Scene& _internal_scene() const;
  ::proto::Scene* _internal_mutable_scene();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneAddResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneAddResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneAddResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Scene* scene_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class StudioState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.StudioState) */ {
 public:
  inline StudioState() : StudioState(nullptr) {}
  ~StudioState() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StudioState(
      ::google::protobuf::internal::ConstantInitialized);

  inline StudioState(const StudioState& from) : StudioState(nullptr, from) {}
  inline StudioState(StudioState&& from) noexcept
      : StudioState(nullptr, std::move(from)) {}
  inline StudioState& operator=(const StudioState& from) {
    CopyFrom(from);
    return *this;
  }
  inline StudioState& operator=(StudioState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StudioState& default_instance() {
    return *internal_default_instance();
  }
  static inline const StudioState* internal_default_instance() {
    return reinterpret_cast<const StudioState*>(
        &_StudioState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StudioState& a, StudioState& b) { a.Swap(&b); }
  inline void Swap(StudioState* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StudioState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StudioState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StudioState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StudioState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StudioState& from) { StudioState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StudioState* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.StudioState"; }

 protected:
  explicit StudioState(::google::protobuf::Arena* arena);
  StudioState(::google::protobuf::Arena* arena, const StudioState& from);
  StudioState(::google::protobuf::Arena* arena, StudioState&& from) noexcept
      : StudioState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowsFieldNumber = 2,
    kActiveShowIdFieldNumber = 1,
  };
  // repeated .proto.Show shows = 2;
  int shows_size() const;
  private:
  int _internal_shows_size() const;

  public:
  void clear_shows() ;
  ::proto::Show* mutable_shows(int index);
  ::google::protobuf::RepeatedPtrField<::proto::Show>* mutable_shows();

  private:
  const ::google::protobuf::RepeatedPtrField<::proto::Show>& _internal_shows() const;
  ::google::protobuf::RepeatedPtrField<::proto::Show>* _internal_mutable_shows();
  public:
  const ::proto::Show& shows(int index) const;
  ::proto::Show* add_shows();
  const ::google::protobuf::RepeatedPtrField<::proto::Show>& shows() const;
  // string active_show_id = 1;
  void clear_active_show_id() ;
  const std::string& active_show_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_active_show_id(Arg_&& arg, Args_... args);
  std::string* mutable_active_show_id();
  PROTOBUF_NODISCARD std::string* release_active_show_id();
  void set_allocated_active_show_id(std::string* value);

  private:
  const std::string& _internal_active_show_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_active_show_id(
      const std::string& value);
  std::string* _internal_mutable_active_show_id();

  public:
  // @@protoc_insertion_point(class_scope:proto.StudioState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StudioState_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StudioState& from_msg);
    ::google::protobuf::RepeatedPtrField< ::proto::Show > shows_;
    ::google::protobuf::internal::ArenaStringPtr active_show_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowSwitchSourceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowSwitchSourceResponse) */ {
 public:
  inline ShowSwitchSourceResponse() : ShowSwitchSourceResponse(nullptr) {}
  ~ShowSwitchSourceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowSwitchSourceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowSwitchSourceResponse(const ShowSwitchSourceResponse& from) : ShowSwitchSourceResponse(nullptr, from) {}
  inline ShowSwitchSourceResponse(ShowSwitchSourceResponse&& from) noexcept
      : ShowSwitchSourceResponse(nullptr, std::move(from)) {}
  inline ShowSwitchSourceResponse& operator=(const ShowSwitchSourceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowSwitchSourceResponse& operator=(ShowSwitchSourceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowSwitchSourceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowSwitchSourceResponse* internal_default_instance() {
    return reinterpret_cast<const ShowSwitchSourceResponse*>(
        &_ShowSwitchSourceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(ShowSwitchSourceResponse& a, ShowSwitchSourceResponse& b) { a.Swap(&b); }
  inline void Swap(ShowSwitchSourceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowSwitchSourceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowSwitchSourceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowSwitchSourceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowSwitchSourceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowSwitchSourceResponse& from) { ShowSwitchSourceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowSwitchSourceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowSwitchSourceResponse"; }

 protected:
  explicit ShowSwitchSourceResponse(::google::protobuf::Arena* arena);
  ShowSwitchSourceResponse(::google::protobuf::Arena* arena, const ShowSwitchSourceResponse& from);
  ShowSwitchSourceResponse(::google::protobuf::Arena* arena, ShowSwitchSourceResponse&& from) noexcept
      : ShowSwitchSourceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowFieldNumber = 1,
  };
  // .proto.Show show = 1;
  bool has_show() const;
  void clear_show() ;
  const ::proto::Show& show() const;
  PROTOBUF_NODISCARD ::proto::Show* release_show();
  ::proto::Show* mutable_show();
  void set_allocated_show(::proto::Show* value);
  void unsafe_arena_set_allocated_show(::proto::Show* value);
  ::proto::Show* unsafe_arena_release_show();

  private:
  const ::proto::Show& _internal_show() const;
  ::proto::Show* _internal_mutable_show();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowSwitchSourceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowSwitchSourceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowSwitchSourceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Show* show_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowLoadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowLoadResponse) */ {
 public:
  inline ShowLoadResponse() : ShowLoadResponse(nullptr) {}
  ~ShowLoadResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowLoadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowLoadResponse(const ShowLoadResponse& from) : ShowLoadResponse(nullptr, from) {}
  inline ShowLoadResponse(ShowLoadResponse&& from) noexcept
      : ShowLoadResponse(nullptr, std::move(from)) {}
  inline ShowLoadResponse& operator=(const ShowLoadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowLoadResponse& operator=(ShowLoadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowLoadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowLoadResponse* internal_default_instance() {
    return reinterpret_cast<const ShowLoadResponse*>(
        &_ShowLoadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ShowLoadResponse& a, ShowLoadResponse& b) { a.Swap(&b); }
  inline void Swap(ShowLoadResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowLoadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowLoadResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowLoadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowLoadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowLoadResponse& from) { ShowLoadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowLoadResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowLoadResponse"; }

 protected:
  explicit ShowLoadResponse(::google::protobuf::Arena* arena);
  ShowLoadResponse(::google::protobuf::Arena* arena, const ShowLoadResponse& from);
  ShowLoadResponse(::google::protobuf::Arena* arena, ShowLoadResponse&& from) noexcept
      : ShowLoadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowFieldNumber = 1,
  };
  // .proto.Show show = 1;
  bool has_show() const;
  void clear_show() ;
  const ::proto::Show& show() const;
  PROTOBUF_NODISCARD ::proto::Show* release_show();
  ::proto::Show* mutable_show();
  void set_allocated_show(::proto::Show* value);
  void unsafe_arena_set_allocated_show(::proto::Show* value);
  ::proto::Show* unsafe_arena_release_show();

  private:
  const ::proto::Show& _internal_show() const;
  ::proto::Show* _internal_mutable_show();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowLoadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowLoadResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowLoadResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Show* show_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowGetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowGetResponse) */ {
 public:
  inline ShowGetResponse() : ShowGetResponse(nullptr) {}
  ~ShowGetResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowGetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowGetResponse(const ShowGetResponse& from) : ShowGetResponse(nullptr, from) {}
  inline ShowGetResponse(ShowGetResponse&& from) noexcept
      : ShowGetResponse(nullptr, std::move(from)) {}
  inline ShowGetResponse& operator=(const ShowGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowGetResponse& operator=(ShowGetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowGetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowGetResponse* internal_default_instance() {
    return reinterpret_cast<const ShowGetResponse*>(
        &_ShowGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ShowGetResponse& a, ShowGetResponse& b) { a.Swap(&b); }
  inline void Swap(ShowGetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowGetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowGetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowGetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowGetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowGetResponse& from) { ShowGetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowGetResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowGetResponse"; }

 protected:
  explicit ShowGetResponse(::google::protobuf::Arena* arena);
  ShowGetResponse(::google::protobuf::Arena* arena, const ShowGetResponse& from);
  ShowGetResponse(::google::protobuf::Arena* arena, ShowGetResponse&& from) noexcept
      : ShowGetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowFieldNumber = 1,
  };
  // .proto.Show show = 1;
  bool has_show() const;
  void clear_show() ;
  const ::proto::Show& show() const;
  PROTOBUF_NODISCARD ::proto::Show* release_show();
  ::proto::Show* mutable_show();
  void set_allocated_show(::proto::Show* value);
  void unsafe_arena_set_allocated_show(::proto::Show* value);
  ::proto::Show* unsafe_arena_release_show();

  private:
  const ::proto::Show& _internal_show() const;
  ::proto::Show* _internal_mutable_show();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowGetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowGetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowGetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Show* show_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowDuplicateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowDuplicateResponse) */ {
 public:
  inline ShowDuplicateResponse() : ShowDuplicateResponse(nullptr) {}
  ~ShowDuplicateResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowDuplicateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowDuplicateResponse(const ShowDuplicateResponse& from) : ShowDuplicateResponse(nullptr, from) {}
  inline ShowDuplicateResponse(ShowDuplicateResponse&& from) noexcept
      : ShowDuplicateResponse(nullptr, std::move(from)) {}
  inline ShowDuplicateResponse& operator=(const ShowDuplicateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowDuplicateResponse& operator=(ShowDuplicateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowDuplicateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowDuplicateResponse* internal_default_instance() {
    return reinterpret_cast<const ShowDuplicateResponse*>(
        &_ShowDuplicateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(ShowDuplicateResponse& a, ShowDuplicateResponse& b) { a.Swap(&b); }
  inline void Swap(ShowDuplicateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowDuplicateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowDuplicateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowDuplicateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowDuplicateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowDuplicateResponse& from) { ShowDuplicateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowDuplicateResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowDuplicateResponse"; }

 protected:
  explicit ShowDuplicateResponse(::google::protobuf::Arena* arena);
  ShowDuplicateResponse(::google::protobuf::Arena* arena, const ShowDuplicateResponse& from);
  ShowDuplicateResponse(::google::protobuf::Arena* arena, ShowDuplicateResponse&& from) noexcept
      : ShowDuplicateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowFieldNumber = 1,
  };
  // .proto.Show show = 1;
  bool has_show() const;
  void clear_show() ;
  const ::proto::Show& show() const;
  PROTOBUF_NODISCARD ::proto::Show* release_show();
  ::proto::Show* mutable_show();
  void set_allocated_show(::proto::Show* value);
  void unsafe_arena_set_allocated_show(::proto::Show* value);
  ::proto::Show* unsafe_arena_release_show();

  private:
  const ::proto::Show& _internal_show() const;
  ::proto::Show* _internal_mutable_show();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowDuplicateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowDuplicateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowDuplicateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Show* show_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class ShowCreateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.ShowCreateResponse) */ {
 public:
  inline ShowCreateResponse() : ShowCreateResponse(nullptr) {}
  ~ShowCreateResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowCreateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowCreateResponse(const ShowCreateResponse& from) : ShowCreateResponse(nullptr, from) {}
  inline ShowCreateResponse(ShowCreateResponse&& from) noexcept
      : ShowCreateResponse(nullptr, std::move(from)) {}
  inline ShowCreateResponse& operator=(const ShowCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowCreateResponse& operator=(ShowCreateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowCreateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowCreateResponse* internal_default_instance() {
    return reinterpret_cast<const ShowCreateResponse*>(
        &_ShowCreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ShowCreateResponse& a, ShowCreateResponse& b) { a.Swap(&b); }
  inline void Swap(ShowCreateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowCreateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowCreateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowCreateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowCreateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowCreateResponse& from) { ShowCreateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowCreateResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.ShowCreateResponse"; }

 protected:
  explicit ShowCreateResponse(::google::protobuf::Arena* arena);
  ShowCreateResponse(::google::protobuf::Arena* arena, const ShowCreateResponse& from);
  ShowCreateResponse(::google::protobuf::Arena* arena, ShowCreateResponse&& from) noexcept
      : ShowCreateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowFieldNumber = 1,
  };
  // .proto.Show show = 1;
  bool has_show() const;
  void clear_show() ;
  const ::proto::Show& show() const;
  PROTOBUF_NODISCARD ::proto::Show* release_show();
  ::proto::Show* mutable_show();
  void set_allocated_show(::proto::Show* value);
  void unsafe_arena_set_allocated_show(::proto::Show* value);
  ::proto::Show* unsafe_arena_release_show();

  private:
  const ::proto::Show& _internal_show() const;
  ::proto::Show* _internal_mutable_show();

  public:
  // @@protoc_insertion_point(class_scope:proto.ShowCreateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowCreateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowCreateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Show* show_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class SceneSetAsCurrentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.SceneSetAsCurrentResponse) */ {
 public:
  inline SceneSetAsCurrentResponse() : SceneSetAsCurrentResponse(nullptr) {}
  ~SceneSetAsCurrentResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneSetAsCurrentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneSetAsCurrentResponse(const SceneSetAsCurrentResponse& from) : SceneSetAsCurrentResponse(nullptr, from) {}
  inline SceneSetAsCurrentResponse(SceneSetAsCurrentResponse&& from) noexcept
      : SceneSetAsCurrentResponse(nullptr, std::move(from)) {}
  inline SceneSetAsCurrentResponse& operator=(const SceneSetAsCurrentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneSetAsCurrentResponse& operator=(SceneSetAsCurrentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneSetAsCurrentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneSetAsCurrentResponse* internal_default_instance() {
    return reinterpret_cast<const SceneSetAsCurrentResponse*>(
        &_SceneSetAsCurrentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SceneSetAsCurrentResponse& a, SceneSetAsCurrentResponse& b) { a.Swap(&b); }
  inline void Swap(SceneSetAsCurrentResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneSetAsCurrentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneSetAsCurrentResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneSetAsCurrentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneSetAsCurrentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneSetAsCurrentResponse& from) { SceneSetAsCurrentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneSetAsCurrentResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.SceneSetAsCurrentResponse"; }

 protected:
  explicit SceneSetAsCurrentResponse(::google::protobuf::Arena* arena);
  SceneSetAsCurrentResponse(::google::protobuf::Arena* arena, const SceneSetAsCurrentResponse& from);
  SceneSetAsCurrentResponse(::google::protobuf::Arena* arena, SceneSetAsCurrentResponse&& from) noexcept
      : SceneSetAsCurrentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShowFieldNumber = 1,
  };
  // .proto.Show show = 1;
  bool has_show() const;
  void clear_show() ;
  const ::proto::Show& show() const;
  PROTOBUF_NODISCARD ::proto::Show* release_show();
  ::proto::Show* mutable_show();
  void set_allocated_show(::proto::Show* value);
  void unsafe_arena_set_allocated_show(::proto::Show* value);
  ::proto::Show* unsafe_arena_release_show();

  private:
  const ::proto::Show& _internal_show() const;
  ::proto::Show* _internal_mutable_show();

  public:
  // @@protoc_insertion_point(class_scope:proto.SceneSetAsCurrentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SceneSetAsCurrentResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneSetAsCurrentResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::Show* show_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};
// -------------------------------------------------------------------

class StudioGetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:proto.StudioGetResponse) */ {
 public:
  inline StudioGetResponse() : StudioGetResponse(nullptr) {}
  ~StudioGetResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StudioGetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StudioGetResponse(const StudioGetResponse& from) : StudioGetResponse(nullptr, from) {}
  inline StudioGetResponse(StudioGetResponse&& from) noexcept
      : StudioGetResponse(nullptr, std::move(from)) {}
  inline StudioGetResponse& operator=(const StudioGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StudioGetResponse& operator=(StudioGetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StudioGetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StudioGetResponse* internal_default_instance() {
    return reinterpret_cast<const StudioGetResponse*>(
        &_StudioGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(StudioGetResponse& a, StudioGetResponse& b) { a.Swap(&b); }
  inline void Swap(StudioGetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StudioGetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StudioGetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StudioGetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StudioGetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StudioGetResponse& from) { StudioGetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StudioGetResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "proto.StudioGetResponse"; }

 protected:
  explicit StudioGetResponse(::google::protobuf::Arena* arena);
  StudioGetResponse(::google::protobuf::Arena* arena, const StudioGetResponse& from);
  StudioGetResponse(::google::protobuf::Arena* arena, StudioGetResponse&& from) noexcept
      : StudioGetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStudioFieldNumber = 1,
  };
  // .proto.StudioState studio = 1;
  bool has_studio() const;
  void clear_studio() ;
  const ::proto::StudioState& studio() const;
  PROTOBUF_NODISCARD ::proto::StudioState* release_studio();
  ::proto::StudioState* mutable_studio();
  void set_allocated_studio(::proto::StudioState* value);
  void unsafe_arena_set_allocated_studio(::proto::StudioState* value);
  ::proto::StudioState* unsafe_arena_release_studio();

  private:
  const ::proto::StudioState& _internal_studio() const;
  ::proto::StudioState* _internal_mutable_studio();

  public:
  // @@protoc_insertion_point(class_scope:proto.StudioGetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StudioGetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StudioGetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::StudioState* studio_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_studio_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StudioState

// string active_show_id = 1;
inline void StudioState::clear_active_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_show_id_.ClearToEmpty();
}
inline const std::string& StudioState::active_show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.StudioState.active_show_id)
  return _internal_active_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StudioState::set_active_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.StudioState.active_show_id)
}
inline std::string* StudioState::mutable_active_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_active_show_id();
  // @@protoc_insertion_point(field_mutable:proto.StudioState.active_show_id)
  return _s;
}
inline const std::string& StudioState::_internal_active_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_show_id_.Get();
}
inline void StudioState::_internal_set_active_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_show_id_.Set(value, GetArena());
}
inline std::string* StudioState::_internal_mutable_active_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.active_show_id_.Mutable( GetArena());
}
inline std::string* StudioState::release_active_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.StudioState.active_show_id)
  return _impl_.active_show_id_.Release();
}
inline void StudioState::set_allocated_active_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.active_show_id_.IsDefault()) {
          _impl_.active_show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.StudioState.active_show_id)
}

// repeated .proto.Show shows = 2;
inline int StudioState::_internal_shows_size() const {
  return _internal_shows().size();
}
inline int StudioState::shows_size() const {
  return _internal_shows_size();
}
inline void StudioState::clear_shows() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shows_.Clear();
}
inline ::proto::Show* StudioState::mutable_shows(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.StudioState.shows)
  return _internal_mutable_shows()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::Show>* StudioState::mutable_shows()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.StudioState.shows)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shows();
}
inline const ::proto::Show& StudioState::shows(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.StudioState.shows)
  return _internal_shows().Get(index);
}
inline ::proto::Show* StudioState::add_shows() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::proto::Show* _add = _internal_mutable_shows()->Add();
  // @@protoc_insertion_point(field_add:proto.StudioState.shows)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Show>& StudioState::shows() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.StudioState.shows)
  return _internal_shows();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Show>&
StudioState::_internal_shows() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shows_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::Show>*
StudioState::_internal_mutable_shows() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shows_;
}

// -------------------------------------------------------------------

// Show

// string id = 1;
inline void Show::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Show::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Show.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Show::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Show.id)
}
inline std::string* Show::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:proto.Show.id)
  return _s;
}
inline const std::string& Show::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Show::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Show::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Show::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Show.id)
  return _impl_.id_.Release();
}
inline void Show::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Show.id)
}

// string name = 2;
inline void Show::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Show::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Show.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Show::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Show.name)
}
inline std::string* Show::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:proto.Show.name)
  return _s;
}
inline const std::string& Show::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Show::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Show::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Show::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Show.name)
  return _impl_.name_.Release();
}
inline void Show::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Show.name)
}

// string active_scene_id = 3;
inline void Show::clear_active_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_scene_id_.ClearToEmpty();
}
inline const std::string& Show::active_scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Show.active_scene_id)
  return _internal_active_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Show::set_active_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Show.active_scene_id)
}
inline std::string* Show::mutable_active_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_active_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.Show.active_scene_id)
  return _s;
}
inline const std::string& Show::_internal_active_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_scene_id_.Get();
}
inline void Show::_internal_set_active_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_scene_id_.Set(value, GetArena());
}
inline std::string* Show::_internal_mutable_active_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.active_scene_id_.Mutable( GetArena());
}
inline std::string* Show::release_active_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Show.active_scene_id)
  return _impl_.active_scene_id_.Release();
}
inline void Show::set_allocated_active_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.active_scene_id_.IsDefault()) {
          _impl_.active_scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Show.active_scene_id)
}

// repeated .proto.Scene scenes = 4;
inline int Show::_internal_scenes_size() const {
  return _internal_scenes().size();
}
inline int Show::scenes_size() const {
  return _internal_scenes_size();
}
inline void Show::clear_scenes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scenes_.Clear();
}
inline ::proto::Scene* Show::mutable_scenes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.Show.scenes)
  return _internal_mutable_scenes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::Scene>* Show::mutable_scenes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.Show.scenes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_scenes();
}
inline const ::proto::Scene& Show::scenes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Show.scenes)
  return _internal_scenes().Get(index);
}
inline ::proto::Scene* Show::add_scenes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::proto::Scene* _add = _internal_mutable_scenes()->Add();
  // @@protoc_insertion_point(field_add:proto.Show.scenes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Scene>& Show::scenes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.Show.scenes)
  return _internal_scenes();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Scene>&
Show::_internal_scenes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scenes_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::Scene>*
Show::_internal_mutable_scenes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.scenes_;
}

// -------------------------------------------------------------------

// Scene

// string id = 1;
inline void Scene::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Scene::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Scene.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Scene::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Scene.id)
}
inline std::string* Scene::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:proto.Scene.id)
  return _s;
}
inline const std::string& Scene::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Scene::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Scene::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Scene::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Scene.id)
  return _impl_.id_.Release();
}
inline void Scene::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Scene.id)
}

// string name = 2;
inline void Scene::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Scene::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Scene.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Scene::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Scene.name)
}
inline std::string* Scene::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:proto.Scene.name)
  return _s;
}
inline const std::string& Scene::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Scene::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Scene::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Scene::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Scene.name)
  return _impl_.name_.Release();
}
inline void Scene::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Scene.name)
}

// repeated string active_source_ids = 3;
inline int Scene::_internal_active_source_ids_size() const {
  return _internal_active_source_ids().size();
}
inline int Scene::active_source_ids_size() const {
  return _internal_active_source_ids_size();
}
inline void Scene::clear_active_source_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_source_ids_.Clear();
}
inline std::string* Scene::add_active_source_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_active_source_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:proto.Scene.active_source_ids)
  return _s;
}
inline const std::string& Scene::active_source_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Scene.active_source_ids)
  return _internal_active_source_ids().Get(index);
}
inline std::string* Scene::mutable_active_source_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.Scene.active_source_ids)
  return _internal_mutable_active_source_ids()->Mutable(index);
}
inline void Scene::set_active_source_ids(int index, const std::string& value) {
  _internal_mutable_active_source_ids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:proto.Scene.active_source_ids)
}
inline void Scene::set_active_source_ids(int index, std::string&& value) {
  _internal_mutable_active_source_ids()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:proto.Scene.active_source_ids)
}
inline void Scene::set_active_source_ids(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_active_source_ids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.Scene.active_source_ids)
}
inline void Scene::set_active_source_ids(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_active_source_ids()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.Scene.active_source_ids)
}
inline void Scene::set_active_source_ids(int index, absl::string_view value) {
  _internal_mutable_active_source_ids()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:proto.Scene.active_source_ids)
}
inline void Scene::add_active_source_ids(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active_source_ids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.Scene.active_source_ids)
}
inline void Scene::add_active_source_ids(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active_source_ids()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.Scene.active_source_ids)
}
inline void Scene::add_active_source_ids(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active_source_ids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.Scene.active_source_ids)
}
inline void Scene::add_active_source_ids(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active_source_ids()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.Scene.active_source_ids)
}
inline void Scene::add_active_source_ids(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_active_source_ids()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:proto.Scene.active_source_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Scene::active_source_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.Scene.active_source_ids)
  return _internal_active_source_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Scene::mutable_active_source_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.Scene.active_source_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_active_source_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Scene::_internal_active_source_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_source_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Scene::_internal_mutable_active_source_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.active_source_ids_;
}

// repeated .proto.Source sources = 4;
inline int Scene::_internal_sources_size() const {
  return _internal_sources().size();
}
inline int Scene::sources_size() const {
  return _internal_sources_size();
}
inline void Scene::clear_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sources_.Clear();
}
inline ::proto::Source* Scene::mutable_sources(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.Scene.sources)
  return _internal_mutable_sources()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::Source>* Scene::mutable_sources()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.Scene.sources)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sources();
}
inline const ::proto::Source& Scene::sources(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Scene.sources)
  return _internal_sources().Get(index);
}
inline ::proto::Source* Scene::add_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::proto::Source* _add = _internal_mutable_sources()->Add();
  // @@protoc_insertion_point(field_add:proto.Scene.sources)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Source>& Scene::sources() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.Scene.sources)
  return _internal_sources();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::Source>&
Scene::_internal_sources() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sources_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::Source>*
Scene::_internal_mutable_sources() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sources_;
}

// -------------------------------------------------------------------

// Source

// string id = 1;
inline void Source::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Source::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Source.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Source::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Source.id)
}
inline std::string* Source::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:proto.Source.id)
  return _s;
}
inline const std::string& Source::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Source::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Source::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Source::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Source.id)
  return _impl_.id_.Release();
}
inline void Source::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Source.id)
}

// string name = 2;
inline void Source::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Source::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Source.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Source::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Source.name)
}
inline std::string* Source::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:proto.Source.name)
  return _s;
}
inline const std::string& Source::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Source::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Source::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Source::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Source.name)
  return _impl_.name_.Release();
}
inline void Source::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Source.name)
}

// string type = 3;
inline void Source::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Source::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Source.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Source::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Source.type)
}
inline std::string* Source::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:proto.Source.type)
  return _s;
}
inline const std::string& Source::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Source::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Source::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Source::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Source.type)
  return _impl_.type_.Release();
}
inline void Source::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Source.type)
}

// string url = 4;
inline void Source::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& Source::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.Source.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Source::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.Source.url)
}
inline std::string* Source::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:proto.Source.url)
  return _s;
}
inline const std::string& Source::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void Source::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* Source::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* Source::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.Source.url)
  return _impl_.url_.Release();
}
inline void Source::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.Source.url)
}

// -------------------------------------------------------------------

// ShowGetRequest

// string show_id = 1;
inline void ShowGetRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& ShowGetRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowGetRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShowGetRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ShowGetRequest.show_id)
}
inline std::string* ShowGetRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.ShowGetRequest.show_id)
  return _s;
}
inline const std::string& ShowGetRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void ShowGetRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* ShowGetRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* ShowGetRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowGetRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void ShowGetRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ShowGetRequest.show_id)
}

// -------------------------------------------------------------------

// ShowCreateRequest

// string show_name = 1;
inline void ShowCreateRequest::clear_show_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_name_.ClearToEmpty();
}
inline const std::string& ShowCreateRequest::show_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowCreateRequest.show_name)
  return _internal_show_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShowCreateRequest::set_show_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ShowCreateRequest.show_name)
}
inline std::string* ShowCreateRequest::mutable_show_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_name();
  // @@protoc_insertion_point(field_mutable:proto.ShowCreateRequest.show_name)
  return _s;
}
inline const std::string& ShowCreateRequest::_internal_show_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_name_.Get();
}
inline void ShowCreateRequest::_internal_set_show_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_name_.Set(value, GetArena());
}
inline std::string* ShowCreateRequest::_internal_mutable_show_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_name_.Mutable( GetArena());
}
inline std::string* ShowCreateRequest::release_show_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowCreateRequest.show_name)
  return _impl_.show_name_.Release();
}
inline void ShowCreateRequest::set_allocated_show_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_name_.IsDefault()) {
          _impl_.show_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ShowCreateRequest.show_name)
}

// -------------------------------------------------------------------

// ShowDuplicateRequest

// string show_id = 1;
inline void ShowDuplicateRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& ShowDuplicateRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowDuplicateRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShowDuplicateRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ShowDuplicateRequest.show_id)
}
inline std::string* ShowDuplicateRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.ShowDuplicateRequest.show_id)
  return _s;
}
inline const std::string& ShowDuplicateRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void ShowDuplicateRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* ShowDuplicateRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* ShowDuplicateRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowDuplicateRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void ShowDuplicateRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ShowDuplicateRequest.show_id)
}

// -------------------------------------------------------------------

// ShowRemoveRequest

// string show_id = 1;
inline void ShowRemoveRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& ShowRemoveRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowRemoveRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShowRemoveRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ShowRemoveRequest.show_id)
}
inline std::string* ShowRemoveRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.ShowRemoveRequest.show_id)
  return _s;
}
inline const std::string& ShowRemoveRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void ShowRemoveRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* ShowRemoveRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* ShowRemoveRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowRemoveRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void ShowRemoveRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ShowRemoveRequest.show_id)
}

// -------------------------------------------------------------------

// ShowLoadRequest

// string show_path = 1;
inline void ShowLoadRequest::clear_show_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_path_.ClearToEmpty();
}
inline const std::string& ShowLoadRequest::show_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowLoadRequest.show_path)
  return _internal_show_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShowLoadRequest::set_show_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.ShowLoadRequest.show_path)
}
inline std::string* ShowLoadRequest::mutable_show_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_path();
  // @@protoc_insertion_point(field_mutable:proto.ShowLoadRequest.show_path)
  return _s;
}
inline const std::string& ShowLoadRequest::_internal_show_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_path_.Get();
}
inline void ShowLoadRequest::_internal_set_show_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_path_.Set(value, GetArena());
}
inline std::string* ShowLoadRequest::_internal_mutable_show_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_path_.Mutable( GetArena());
}
inline std::string* ShowLoadRequest::release_show_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowLoadRequest.show_path)
  return _impl_.show_path_.Release();
}
inline void ShowLoadRequest::set_allocated_show_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_path_.IsDefault()) {
          _impl_.show_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.ShowLoadRequest.show_path)
}

// -------------------------------------------------------------------

// SceneGetRequest

// string show_id = 1;
inline void SceneGetRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SceneGetRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneGetRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneGetRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneGetRequest.show_id)
}
inline std::string* SceneGetRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneGetRequest.show_id)
  return _s;
}
inline const std::string& SceneGetRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SceneGetRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SceneGetRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SceneGetRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneGetRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SceneGetRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGetRequest.show_id)
}

// string scene_id = 2;
inline void SceneGetRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SceneGetRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneGetRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneGetRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneGetRequest.scene_id)
}
inline std::string* SceneGetRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneGetRequest.scene_id)
  return _s;
}
inline const std::string& SceneGetRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SceneGetRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SceneGetRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SceneGetRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneGetRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SceneGetRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGetRequest.scene_id)
}

// -------------------------------------------------------------------

// SceneAddRequest

// string show_id = 1;
inline void SceneAddRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SceneAddRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneAddRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneAddRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneAddRequest.show_id)
}
inline std::string* SceneAddRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneAddRequest.show_id)
  return _s;
}
inline const std::string& SceneAddRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SceneAddRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SceneAddRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SceneAddRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneAddRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SceneAddRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAddRequest.show_id)
}

// string scene_name = 2;
inline void SceneAddRequest::clear_scene_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_name_.ClearToEmpty();
}
inline const std::string& SceneAddRequest::scene_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneAddRequest.scene_name)
  return _internal_scene_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneAddRequest::set_scene_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneAddRequest.scene_name)
}
inline std::string* SceneAddRequest::mutable_scene_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_name();
  // @@protoc_insertion_point(field_mutable:proto.SceneAddRequest.scene_name)
  return _s;
}
inline const std::string& SceneAddRequest::_internal_scene_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_name_.Get();
}
inline void SceneAddRequest::_internal_set_scene_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_name_.Set(value, GetArena());
}
inline std::string* SceneAddRequest::_internal_mutable_scene_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_name_.Mutable( GetArena());
}
inline std::string* SceneAddRequest::release_scene_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneAddRequest.scene_name)
  return _impl_.scene_name_.Release();
}
inline void SceneAddRequest::set_allocated_scene_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_name_.IsDefault()) {
          _impl_.scene_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAddRequest.scene_name)
}

// -------------------------------------------------------------------

// SceneDuplicateRequest

// string show_id = 1;
inline void SceneDuplicateRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SceneDuplicateRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneDuplicateRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneDuplicateRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneDuplicateRequest.show_id)
}
inline std::string* SceneDuplicateRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneDuplicateRequest.show_id)
  return _s;
}
inline const std::string& SceneDuplicateRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SceneDuplicateRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SceneDuplicateRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SceneDuplicateRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneDuplicateRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SceneDuplicateRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneDuplicateRequest.show_id)
}

// string scene_id = 2;
inline void SceneDuplicateRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SceneDuplicateRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneDuplicateRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneDuplicateRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneDuplicateRequest.scene_id)
}
inline std::string* SceneDuplicateRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneDuplicateRequest.scene_id)
  return _s;
}
inline const std::string& SceneDuplicateRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SceneDuplicateRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SceneDuplicateRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SceneDuplicateRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneDuplicateRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SceneDuplicateRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneDuplicateRequest.scene_id)
}

// -------------------------------------------------------------------

// SceneRemoveRequest

// string show_id = 1;
inline void SceneRemoveRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SceneRemoveRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneRemoveRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneRemoveRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneRemoveRequest.show_id)
}
inline std::string* SceneRemoveRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneRemoveRequest.show_id)
  return _s;
}
inline const std::string& SceneRemoveRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SceneRemoveRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SceneRemoveRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SceneRemoveRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneRemoveRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SceneRemoveRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneRemoveRequest.show_id)
}

// string scene_id = 2;
inline void SceneRemoveRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SceneRemoveRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneRemoveRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneRemoveRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneRemoveRequest.scene_id)
}
inline std::string* SceneRemoveRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneRemoveRequest.scene_id)
  return _s;
}
inline const std::string& SceneRemoveRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SceneRemoveRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SceneRemoveRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SceneRemoveRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneRemoveRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SceneRemoveRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneRemoveRequest.scene_id)
}

// -------------------------------------------------------------------

// SceneSetAsCurrentRequest

// string show_id = 1;
inline void SceneSetAsCurrentRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SceneSetAsCurrentRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneSetAsCurrentRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneSetAsCurrentRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneSetAsCurrentRequest.show_id)
}
inline std::string* SceneSetAsCurrentRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneSetAsCurrentRequest.show_id)
  return _s;
}
inline const std::string& SceneSetAsCurrentRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SceneSetAsCurrentRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SceneSetAsCurrentRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SceneSetAsCurrentRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneSetAsCurrentRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SceneSetAsCurrentRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneSetAsCurrentRequest.show_id)
}

// string scene_id = 2;
inline void SceneSetAsCurrentRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SceneSetAsCurrentRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneSetAsCurrentRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneSetAsCurrentRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneSetAsCurrentRequest.scene_id)
}
inline std::string* SceneSetAsCurrentRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneSetAsCurrentRequest.scene_id)
  return _s;
}
inline const std::string& SceneSetAsCurrentRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SceneSetAsCurrentRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SceneSetAsCurrentRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SceneSetAsCurrentRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneSetAsCurrentRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SceneSetAsCurrentRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneSetAsCurrentRequest.scene_id)
}

// -------------------------------------------------------------------

// SceneGetCurrentRequest

// string show_id = 1;
inline void SceneGetCurrentRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SceneGetCurrentRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneGetCurrentRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneGetCurrentRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneGetCurrentRequest.show_id)
}
inline std::string* SceneGetCurrentRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneGetCurrentRequest.show_id)
  return _s;
}
inline const std::string& SceneGetCurrentRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SceneGetCurrentRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SceneGetCurrentRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SceneGetCurrentRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneGetCurrentRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SceneGetCurrentRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGetCurrentRequest.show_id)
}

// -------------------------------------------------------------------

// SourceGetRequest

// string show_id = 1;
inline void SourceGetRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SourceGetRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceGetRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceGetRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceGetRequest.show_id)
}
inline std::string* SourceGetRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceGetRequest.show_id)
  return _s;
}
inline const std::string& SourceGetRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SourceGetRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SourceGetRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SourceGetRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceGetRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SourceGetRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceGetRequest.show_id)
}

// string scene_id = 2;
inline void SourceGetRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SourceGetRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceGetRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceGetRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceGetRequest.scene_id)
}
inline std::string* SourceGetRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceGetRequest.scene_id)
  return _s;
}
inline const std::string& SourceGetRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SourceGetRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SourceGetRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SourceGetRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceGetRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SourceGetRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceGetRequest.scene_id)
}

// string source_id = 3;
inline void SourceGetRequest::clear_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.ClearToEmpty();
}
inline const std::string& SourceGetRequest::source_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceGetRequest.source_id)
  return _internal_source_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceGetRequest::set_source_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceGetRequest.source_id)
}
inline std::string* SourceGetRequest::mutable_source_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceGetRequest.source_id)
  return _s;
}
inline const std::string& SourceGetRequest::_internal_source_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_id_.Get();
}
inline void SourceGetRequest::_internal_set_source_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(value, GetArena());
}
inline std::string* SourceGetRequest::_internal_mutable_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_id_.Mutable( GetArena());
}
inline std::string* SourceGetRequest::release_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceGetRequest.source_id)
  return _impl_.source_id_.Release();
}
inline void SourceGetRequest::set_allocated_source_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_id_.IsDefault()) {
          _impl_.source_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceGetRequest.source_id)
}

// -------------------------------------------------------------------

// SourceAddRequest

// string show_id = 1;
inline void SourceAddRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SourceAddRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceAddRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceAddRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceAddRequest.show_id)
}
inline std::string* SourceAddRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceAddRequest.show_id)
  return _s;
}
inline const std::string& SourceAddRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SourceAddRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SourceAddRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SourceAddRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceAddRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SourceAddRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceAddRequest.show_id)
}

// string scene_id = 2;
inline void SourceAddRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SourceAddRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceAddRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceAddRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceAddRequest.scene_id)
}
inline std::string* SourceAddRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceAddRequest.scene_id)
  return _s;
}
inline const std::string& SourceAddRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SourceAddRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SourceAddRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SourceAddRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceAddRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SourceAddRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceAddRequest.scene_id)
}

// string source_name = 3;
inline void SourceAddRequest::clear_source_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_name_.ClearToEmpty();
}
inline const std::string& SourceAddRequest::source_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceAddRequest.source_name)
  return _internal_source_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceAddRequest::set_source_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceAddRequest.source_name)
}
inline std::string* SourceAddRequest::mutable_source_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_name();
  // @@protoc_insertion_point(field_mutable:proto.SourceAddRequest.source_name)
  return _s;
}
inline const std::string& SourceAddRequest::_internal_source_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_name_.Get();
}
inline void SourceAddRequest::_internal_set_source_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_name_.Set(value, GetArena());
}
inline std::string* SourceAddRequest::_internal_mutable_source_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_name_.Mutable( GetArena());
}
inline std::string* SourceAddRequest::release_source_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceAddRequest.source_name)
  return _impl_.source_name_.Release();
}
inline void SourceAddRequest::set_allocated_source_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_name_.IsDefault()) {
          _impl_.source_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceAddRequest.source_name)
}

// string source_type = 4;
inline void SourceAddRequest::clear_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.ClearToEmpty();
}
inline const std::string& SourceAddRequest::source_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceAddRequest.source_type)
  return _internal_source_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceAddRequest::set_source_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceAddRequest.source_type)
}
inline std::string* SourceAddRequest::mutable_source_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_type();
  // @@protoc_insertion_point(field_mutable:proto.SourceAddRequest.source_type)
  return _s;
}
inline const std::string& SourceAddRequest::_internal_source_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_type_.Get();
}
inline void SourceAddRequest::_internal_set_source_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.Set(value, GetArena());
}
inline std::string* SourceAddRequest::_internal_mutable_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_type_.Mutable( GetArena());
}
inline std::string* SourceAddRequest::release_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceAddRequest.source_type)
  return _impl_.source_type_.Release();
}
inline void SourceAddRequest::set_allocated_source_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_type_.IsDefault()) {
          _impl_.source_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceAddRequest.source_type)
}

// string source_url = 5;
inline void SourceAddRequest::clear_source_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.ClearToEmpty();
}
inline const std::string& SourceAddRequest::source_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceAddRequest.source_url)
  return _internal_source_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceAddRequest::set_source_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceAddRequest.source_url)
}
inline std::string* SourceAddRequest::mutable_source_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_url();
  // @@protoc_insertion_point(field_mutable:proto.SourceAddRequest.source_url)
  return _s;
}
inline const std::string& SourceAddRequest::_internal_source_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_url_.Get();
}
inline void SourceAddRequest::_internal_set_source_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.Set(value, GetArena());
}
inline std::string* SourceAddRequest::_internal_mutable_source_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_url_.Mutable( GetArena());
}
inline std::string* SourceAddRequest::release_source_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceAddRequest.source_url)
  return _impl_.source_url_.Release();
}
inline void SourceAddRequest::set_allocated_source_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_url_.IsDefault()) {
          _impl_.source_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceAddRequest.source_url)
}

// -------------------------------------------------------------------

// SourceDuplicateRequest

// string show_id = 1;
inline void SourceDuplicateRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SourceDuplicateRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceDuplicateRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceDuplicateRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceDuplicateRequest.show_id)
}
inline std::string* SourceDuplicateRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceDuplicateRequest.show_id)
  return _s;
}
inline const std::string& SourceDuplicateRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SourceDuplicateRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SourceDuplicateRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SourceDuplicateRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceDuplicateRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SourceDuplicateRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceDuplicateRequest.show_id)
}

// string scene_id = 2;
inline void SourceDuplicateRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SourceDuplicateRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceDuplicateRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceDuplicateRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceDuplicateRequest.scene_id)
}
inline std::string* SourceDuplicateRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceDuplicateRequest.scene_id)
  return _s;
}
inline const std::string& SourceDuplicateRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SourceDuplicateRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SourceDuplicateRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SourceDuplicateRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceDuplicateRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SourceDuplicateRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceDuplicateRequest.scene_id)
}

// string source_id = 3;
inline void SourceDuplicateRequest::clear_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.ClearToEmpty();
}
inline const std::string& SourceDuplicateRequest::source_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceDuplicateRequest.source_id)
  return _internal_source_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceDuplicateRequest::set_source_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceDuplicateRequest.source_id)
}
inline std::string* SourceDuplicateRequest::mutable_source_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceDuplicateRequest.source_id)
  return _s;
}
inline const std::string& SourceDuplicateRequest::_internal_source_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_id_.Get();
}
inline void SourceDuplicateRequest::_internal_set_source_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(value, GetArena());
}
inline std::string* SourceDuplicateRequest::_internal_mutable_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_id_.Mutable( GetArena());
}
inline std::string* SourceDuplicateRequest::release_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceDuplicateRequest.source_id)
  return _impl_.source_id_.Release();
}
inline void SourceDuplicateRequest::set_allocated_source_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_id_.IsDefault()) {
          _impl_.source_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceDuplicateRequest.source_id)
}

// -------------------------------------------------------------------

// SourceRemoveRequest

// string show_id = 1;
inline void SourceRemoveRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SourceRemoveRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceRemoveRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceRemoveRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceRemoveRequest.show_id)
}
inline std::string* SourceRemoveRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceRemoveRequest.show_id)
  return _s;
}
inline const std::string& SourceRemoveRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SourceRemoveRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SourceRemoveRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SourceRemoveRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceRemoveRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SourceRemoveRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceRemoveRequest.show_id)
}

// string scene_id = 2;
inline void SourceRemoveRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SourceRemoveRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceRemoveRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceRemoveRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceRemoveRequest.scene_id)
}
inline std::string* SourceRemoveRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceRemoveRequest.scene_id)
  return _s;
}
inline const std::string& SourceRemoveRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SourceRemoveRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SourceRemoveRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SourceRemoveRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceRemoveRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SourceRemoveRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceRemoveRequest.scene_id)
}

// string source_id = 3;
inline void SourceRemoveRequest::clear_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.ClearToEmpty();
}
inline const std::string& SourceRemoveRequest::source_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceRemoveRequest.source_id)
  return _internal_source_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceRemoveRequest::set_source_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceRemoveRequest.source_id)
}
inline std::string* SourceRemoveRequest::mutable_source_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceRemoveRequest.source_id)
  return _s;
}
inline const std::string& SourceRemoveRequest::_internal_source_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_id_.Get();
}
inline void SourceRemoveRequest::_internal_set_source_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(value, GetArena());
}
inline std::string* SourceRemoveRequest::_internal_mutable_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_id_.Mutable( GetArena());
}
inline std::string* SourceRemoveRequest::release_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceRemoveRequest.source_id)
  return _impl_.source_id_.Release();
}
inline void SourceRemoveRequest::set_allocated_source_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_id_.IsDefault()) {
          _impl_.source_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceRemoveRequest.source_id)
}

// -------------------------------------------------------------------

// SourceSetPropertiesRequest

// string show_id = 1;
inline void SourceSetPropertiesRequest::clear_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.ClearToEmpty();
}
inline const std::string& SourceSetPropertiesRequest::show_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceSetPropertiesRequest.show_id)
  return _internal_show_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceSetPropertiesRequest::set_show_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceSetPropertiesRequest.show_id)
}
inline std::string* SourceSetPropertiesRequest::mutable_show_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_show_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceSetPropertiesRequest.show_id)
  return _s;
}
inline const std::string& SourceSetPropertiesRequest::_internal_show_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_id_.Get();
}
inline void SourceSetPropertiesRequest::_internal_set_show_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.Set(value, GetArena());
}
inline std::string* SourceSetPropertiesRequest::_internal_mutable_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.show_id_.Mutable( GetArena());
}
inline std::string* SourceSetPropertiesRequest::release_show_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceSetPropertiesRequest.show_id)
  return _impl_.show_id_.Release();
}
inline void SourceSetPropertiesRequest::set_allocated_show_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.show_id_.IsDefault()) {
          _impl_.show_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceSetPropertiesRequest.show_id)
}

// string scene_id = 2;
inline void SourceSetPropertiesRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SourceSetPropertiesRequest::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceSetPropertiesRequest.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceSetPropertiesRequest::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceSetPropertiesRequest.scene_id)
}
inline std::string* SourceSetPropertiesRequest::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceSetPropertiesRequest.scene_id)
  return _s;
}
inline const std::string& SourceSetPropertiesRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SourceSetPropertiesRequest::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SourceSetPropertiesRequest::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SourceSetPropertiesRequest::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceSetPropertiesRequest.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SourceSetPropertiesRequest::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceSetPropertiesRequest.scene_id)
}

// string source_id = 3;
inline void SourceSetPropertiesRequest::clear_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.ClearToEmpty();
}
inline const std::string& SourceSetPropertiesRequest::source_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceSetPropertiesRequest.source_id)
  return _internal_source_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceSetPropertiesRequest::set_source_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceSetPropertiesRequest.source_id)
}
inline std::string* SourceSetPropertiesRequest::mutable_source_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_id();
  // @@protoc_insertion_point(field_mutable:proto.SourceSetPropertiesRequest.source_id)
  return _s;
}
inline const std::string& SourceSetPropertiesRequest::_internal_source_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_id_.Get();
}
inline void SourceSetPropertiesRequest::_internal_set_source_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.Set(value, GetArena());
}
inline std::string* SourceSetPropertiesRequest::_internal_mutable_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_id_.Mutable( GetArena());
}
inline std::string* SourceSetPropertiesRequest::release_source_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceSetPropertiesRequest.source_id)
  return _impl_.source_id_.Release();
}
inline void SourceSetPropertiesRequest::set_allocated_source_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_id_.IsDefault()) {
          _impl_.source_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceSetPropertiesRequest.source_id)
}

// string source_type = 4;
inline void SourceSetPropertiesRequest::clear_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.ClearToEmpty();
}
inline const std::string& SourceSetPropertiesRequest::source_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceSetPropertiesRequest.source_type)
  return _internal_source_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceSetPropertiesRequest::set_source_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceSetPropertiesRequest.source_type)
}
inline std::string* SourceSetPropertiesRequest::mutable_source_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_type();
  // @@protoc_insertion_point(field_mutable:proto.SourceSetPropertiesRequest.source_type)
  return _s;
}
inline const std::string& SourceSetPropertiesRequest::_internal_source_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_type_.Get();
}
inline void SourceSetPropertiesRequest::_internal_set_source_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.Set(value, GetArena());
}
inline std::string* SourceSetPropertiesRequest::_internal_mutable_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_type_.Mutable( GetArena());
}
inline std::string* SourceSetPropertiesRequest::release_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceSetPropertiesRequest.source_type)
  return _impl_.source_type_.Release();
}
inline void SourceSetPropertiesRequest::set_allocated_source_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_type_.IsDefault()) {
          _impl_.source_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceSetPropertiesRequest.source_type)
}

// string source_url = 5;
inline void SourceSetPropertiesRequest::clear_source_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.ClearToEmpty();
}
inline const std::string& SourceSetPropertiesRequest::source_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceSetPropertiesRequest.source_url)
  return _internal_source_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SourceSetPropertiesRequest::set_source_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SourceSetPropertiesRequest.source_url)
}
inline std::string* SourceSetPropertiesRequest::mutable_source_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_url();
  // @@protoc_insertion_point(field_mutable:proto.SourceSetPropertiesRequest.source_url)
  return _s;
}
inline const std::string& SourceSetPropertiesRequest::_internal_source_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_url_.Get();
}
inline void SourceSetPropertiesRequest::_internal_set_source_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.Set(value, GetArena());
}
inline std::string* SourceSetPropertiesRequest::_internal_mutable_source_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_url_.Mutable( GetArena());
}
inline std::string* SourceSetPropertiesRequest::release_source_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceSetPropertiesRequest.source_url)
  return _impl_.source_url_.Release();
}
inline void SourceSetPropertiesRequest::set_allocated_source_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_url_.IsDefault()) {
          _impl_.source_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SourceSetPropertiesRequest.source_url)
}

// -------------------------------------------------------------------

// StudioGetResponse

// .proto.StudioState studio = 1;
inline bool StudioGetResponse::has_studio() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.studio_ != nullptr);
  return value;
}
inline void StudioGetResponse::clear_studio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.studio_ != nullptr) _impl_.studio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::StudioState& StudioGetResponse::_internal_studio() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::StudioState* p = _impl_.studio_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::StudioState&>(::proto::_StudioState_default_instance_);
}
inline const ::proto::StudioState& StudioGetResponse::studio() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.StudioGetResponse.studio)
  return _internal_studio();
}
inline void StudioGetResponse::unsafe_arena_set_allocated_studio(::proto::StudioState* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.studio_);
  }
  _impl_.studio_ = reinterpret_cast<::proto::StudioState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.StudioGetResponse.studio)
}
inline ::proto::StudioState* StudioGetResponse::release_studio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::StudioState* released = _impl_.studio_;
  _impl_.studio_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::StudioState* StudioGetResponse::unsafe_arena_release_studio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.StudioGetResponse.studio)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::StudioState* temp = _impl_.studio_;
  _impl_.studio_ = nullptr;
  return temp;
}
inline ::proto::StudioState* StudioGetResponse::_internal_mutable_studio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.studio_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::StudioState>(GetArena());
    _impl_.studio_ = reinterpret_cast<::proto::StudioState*>(p);
  }
  return _impl_.studio_;
}
inline ::proto::StudioState* StudioGetResponse::mutable_studio() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::StudioState* _msg = _internal_mutable_studio();
  // @@protoc_insertion_point(field_mutable:proto.StudioGetResponse.studio)
  return _msg;
}
inline void StudioGetResponse::set_allocated_studio(::proto::StudioState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.studio_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.studio_ = reinterpret_cast<::proto::StudioState*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.StudioGetResponse.studio)
}

// -------------------------------------------------------------------

// ShowGetResponse

// .proto.Show show = 1;
inline bool ShowGetResponse::has_show() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.show_ != nullptr);
  return value;
}
inline void ShowGetResponse::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ != nullptr) _impl_.show_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Show& ShowGetResponse::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Show* p = _impl_.show_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Show&>(::proto::_Show_default_instance_);
}
inline const ::proto::Show& ShowGetResponse::show() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowGetResponse.show)
  return _internal_show();
}
inline void ShowGetResponse::unsafe_arena_set_allocated_show(::proto::Show* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.show_);
  }
  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ShowGetResponse.show)
}
inline ::proto::Show* ShowGetResponse::release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* released = _impl_.show_;
  _impl_.show_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Show* ShowGetResponse::unsafe_arena_release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowGetResponse.show)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* temp = _impl_.show_;
  _impl_.show_ = nullptr;
  return temp;
}
inline ::proto::Show* ShowGetResponse::_internal_mutable_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Show>(GetArena());
    _impl_.show_ = reinterpret_cast<::proto::Show*>(p);
  }
  return _impl_.show_;
}
inline ::proto::Show* ShowGetResponse::mutable_show() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Show* _msg = _internal_mutable_show();
  // @@protoc_insertion_point(field_mutable:proto.ShowGetResponse.show)
  return _msg;
}
inline void ShowGetResponse::set_allocated_show(::proto::Show* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.show_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowGetResponse.show)
}

// -------------------------------------------------------------------

// ShowCreateResponse

// .proto.Show show = 1;
inline bool ShowCreateResponse::has_show() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.show_ != nullptr);
  return value;
}
inline void ShowCreateResponse::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ != nullptr) _impl_.show_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Show& ShowCreateResponse::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Show* p = _impl_.show_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Show&>(::proto::_Show_default_instance_);
}
inline const ::proto::Show& ShowCreateResponse::show() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowCreateResponse.show)
  return _internal_show();
}
inline void ShowCreateResponse::unsafe_arena_set_allocated_show(::proto::Show* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.show_);
  }
  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ShowCreateResponse.show)
}
inline ::proto::Show* ShowCreateResponse::release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* released = _impl_.show_;
  _impl_.show_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Show* ShowCreateResponse::unsafe_arena_release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowCreateResponse.show)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* temp = _impl_.show_;
  _impl_.show_ = nullptr;
  return temp;
}
inline ::proto::Show* ShowCreateResponse::_internal_mutable_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Show>(GetArena());
    _impl_.show_ = reinterpret_cast<::proto::Show*>(p);
  }
  return _impl_.show_;
}
inline ::proto::Show* ShowCreateResponse::mutable_show() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Show* _msg = _internal_mutable_show();
  // @@protoc_insertion_point(field_mutable:proto.ShowCreateResponse.show)
  return _msg;
}
inline void ShowCreateResponse::set_allocated_show(::proto::Show* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.show_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowCreateResponse.show)
}

// -------------------------------------------------------------------

// ShowDuplicateResponse

// .proto.Show show = 1;
inline bool ShowDuplicateResponse::has_show() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.show_ != nullptr);
  return value;
}
inline void ShowDuplicateResponse::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ != nullptr) _impl_.show_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Show& ShowDuplicateResponse::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Show* p = _impl_.show_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Show&>(::proto::_Show_default_instance_);
}
inline const ::proto::Show& ShowDuplicateResponse::show() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowDuplicateResponse.show)
  return _internal_show();
}
inline void ShowDuplicateResponse::unsafe_arena_set_allocated_show(::proto::Show* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.show_);
  }
  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ShowDuplicateResponse.show)
}
inline ::proto::Show* ShowDuplicateResponse::release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* released = _impl_.show_;
  _impl_.show_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Show* ShowDuplicateResponse::unsafe_arena_release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowDuplicateResponse.show)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* temp = _impl_.show_;
  _impl_.show_ = nullptr;
  return temp;
}
inline ::proto::Show* ShowDuplicateResponse::_internal_mutable_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Show>(GetArena());
    _impl_.show_ = reinterpret_cast<::proto::Show*>(p);
  }
  return _impl_.show_;
}
inline ::proto::Show* ShowDuplicateResponse::mutable_show() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Show* _msg = _internal_mutable_show();
  // @@protoc_insertion_point(field_mutable:proto.ShowDuplicateResponse.show)
  return _msg;
}
inline void ShowDuplicateResponse::set_allocated_show(::proto::Show* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.show_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowDuplicateResponse.show)
}

// -------------------------------------------------------------------

// ShowLoadResponse

// .proto.Show show = 1;
inline bool ShowLoadResponse::has_show() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.show_ != nullptr);
  return value;
}
inline void ShowLoadResponse::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ != nullptr) _impl_.show_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Show& ShowLoadResponse::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Show* p = _impl_.show_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Show&>(::proto::_Show_default_instance_);
}
inline const ::proto::Show& ShowLoadResponse::show() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowLoadResponse.show)
  return _internal_show();
}
inline void ShowLoadResponse::unsafe_arena_set_allocated_show(::proto::Show* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.show_);
  }
  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ShowLoadResponse.show)
}
inline ::proto::Show* ShowLoadResponse::release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* released = _impl_.show_;
  _impl_.show_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Show* ShowLoadResponse::unsafe_arena_release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowLoadResponse.show)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* temp = _impl_.show_;
  _impl_.show_ = nullptr;
  return temp;
}
inline ::proto::Show* ShowLoadResponse::_internal_mutable_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Show>(GetArena());
    _impl_.show_ = reinterpret_cast<::proto::Show*>(p);
  }
  return _impl_.show_;
}
inline ::proto::Show* ShowLoadResponse::mutable_show() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Show* _msg = _internal_mutable_show();
  // @@protoc_insertion_point(field_mutable:proto.ShowLoadResponse.show)
  return _msg;
}
inline void ShowLoadResponse::set_allocated_show(::proto::Show* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.show_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowLoadResponse.show)
}

// -------------------------------------------------------------------

// ShowSwitchSourceResponse

// .proto.Show show = 1;
inline bool ShowSwitchSourceResponse::has_show() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.show_ != nullptr);
  return value;
}
inline void ShowSwitchSourceResponse::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ != nullptr) _impl_.show_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Show& ShowSwitchSourceResponse::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Show* p = _impl_.show_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Show&>(::proto::_Show_default_instance_);
}
inline const ::proto::Show& ShowSwitchSourceResponse::show() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.ShowSwitchSourceResponse.show)
  return _internal_show();
}
inline void ShowSwitchSourceResponse::unsafe_arena_set_allocated_show(::proto::Show* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.show_);
  }
  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ShowSwitchSourceResponse.show)
}
inline ::proto::Show* ShowSwitchSourceResponse::release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* released = _impl_.show_;
  _impl_.show_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Show* ShowSwitchSourceResponse::unsafe_arena_release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.ShowSwitchSourceResponse.show)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* temp = _impl_.show_;
  _impl_.show_ = nullptr;
  return temp;
}
inline ::proto::Show* ShowSwitchSourceResponse::_internal_mutable_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Show>(GetArena());
    _impl_.show_ = reinterpret_cast<::proto::Show*>(p);
  }
  return _impl_.show_;
}
inline ::proto::Show* ShowSwitchSourceResponse::mutable_show() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Show* _msg = _internal_mutable_show();
  // @@protoc_insertion_point(field_mutable:proto.ShowSwitchSourceResponse.show)
  return _msg;
}
inline void ShowSwitchSourceResponse::set_allocated_show(::proto::Show* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.show_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.ShowSwitchSourceResponse.show)
}

// -------------------------------------------------------------------

// SceneGetResponse

// .proto.Scene scene = 1;
inline bool SceneGetResponse::has_scene() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scene_ != nullptr);
  return value;
}
inline void SceneGetResponse::clear_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_ != nullptr) _impl_.scene_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Scene& SceneGetResponse::_internal_scene() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Scene* p = _impl_.scene_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Scene&>(::proto::_Scene_default_instance_);
}
inline const ::proto::Scene& SceneGetResponse::scene() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneGetResponse.scene)
  return _internal_scene();
}
inline void SceneGetResponse::unsafe_arena_set_allocated_scene(::proto::Scene* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scene_);
  }
  _impl_.scene_ = reinterpret_cast<::proto::Scene*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SceneGetResponse.scene)
}
inline ::proto::Scene* SceneGetResponse::release_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Scene* released = _impl_.scene_;
  _impl_.scene_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Scene* SceneGetResponse::unsafe_arena_release_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneGetResponse.scene)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Scene* temp = _impl_.scene_;
  _impl_.scene_ = nullptr;
  return temp;
}
inline ::proto::Scene* SceneGetResponse::_internal_mutable_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Scene>(GetArena());
    _impl_.scene_ = reinterpret_cast<::proto::Scene*>(p);
  }
  return _impl_.scene_;
}
inline ::proto::Scene* SceneGetResponse::mutable_scene() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Scene* _msg = _internal_mutable_scene();
  // @@protoc_insertion_point(field_mutable:proto.SceneGetResponse.scene)
  return _msg;
}
inline void SceneGetResponse::set_allocated_scene(::proto::Scene* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.scene_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.scene_ = reinterpret_cast<::proto::Scene*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGetResponse.scene)
}

// -------------------------------------------------------------------

// SceneAddResponse

// .proto.Scene scene = 1;
inline bool SceneAddResponse::has_scene() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scene_ != nullptr);
  return value;
}
inline void SceneAddResponse::clear_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_ != nullptr) _impl_.scene_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Scene& SceneAddResponse::_internal_scene() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Scene* p = _impl_.scene_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Scene&>(::proto::_Scene_default_instance_);
}
inline const ::proto::Scene& SceneAddResponse::scene() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneAddResponse.scene)
  return _internal_scene();
}
inline void SceneAddResponse::unsafe_arena_set_allocated_scene(::proto::Scene* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scene_);
  }
  _impl_.scene_ = reinterpret_cast<::proto::Scene*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SceneAddResponse.scene)
}
inline ::proto::Scene* SceneAddResponse::release_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Scene* released = _impl_.scene_;
  _impl_.scene_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Scene* SceneAddResponse::unsafe_arena_release_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneAddResponse.scene)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Scene* temp = _impl_.scene_;
  _impl_.scene_ = nullptr;
  return temp;
}
inline ::proto::Scene* SceneAddResponse::_internal_mutable_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Scene>(GetArena());
    _impl_.scene_ = reinterpret_cast<::proto::Scene*>(p);
  }
  return _impl_.scene_;
}
inline ::proto::Scene* SceneAddResponse::mutable_scene() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Scene* _msg = _internal_mutable_scene();
  // @@protoc_insertion_point(field_mutable:proto.SceneAddResponse.scene)
  return _msg;
}
inline void SceneAddResponse::set_allocated_scene(::proto::Scene* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.scene_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.scene_ = reinterpret_cast<::proto::Scene*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAddResponse.scene)
}

// -------------------------------------------------------------------

// SceneDuplicateResponse

// .proto.Scene scene = 1;
inline bool SceneDuplicateResponse::has_scene() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scene_ != nullptr);
  return value;
}
inline void SceneDuplicateResponse::clear_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_ != nullptr) _impl_.scene_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Scene& SceneDuplicateResponse::_internal_scene() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Scene* p = _impl_.scene_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Scene&>(::proto::_Scene_default_instance_);
}
inline const ::proto::Scene& SceneDuplicateResponse::scene() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneDuplicateResponse.scene)
  return _internal_scene();
}
inline void SceneDuplicateResponse::unsafe_arena_set_allocated_scene(::proto::Scene* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scene_);
  }
  _impl_.scene_ = reinterpret_cast<::proto::Scene*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SceneDuplicateResponse.scene)
}
inline ::proto::Scene* SceneDuplicateResponse::release_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Scene* released = _impl_.scene_;
  _impl_.scene_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Scene* SceneDuplicateResponse::unsafe_arena_release_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneDuplicateResponse.scene)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Scene* temp = _impl_.scene_;
  _impl_.scene_ = nullptr;
  return temp;
}
inline ::proto::Scene* SceneDuplicateResponse::_internal_mutable_scene() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Scene>(GetArena());
    _impl_.scene_ = reinterpret_cast<::proto::Scene*>(p);
  }
  return _impl_.scene_;
}
inline ::proto::Scene* SceneDuplicateResponse::mutable_scene() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Scene* _msg = _internal_mutable_scene();
  // @@protoc_insertion_point(field_mutable:proto.SceneDuplicateResponse.scene)
  return _msg;
}
inline void SceneDuplicateResponse::set_allocated_scene(::proto::Scene* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.scene_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.scene_ = reinterpret_cast<::proto::Scene*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneDuplicateResponse.scene)
}

// -------------------------------------------------------------------

// SceneSetAsCurrentResponse

// .proto.Show show = 1;
inline bool SceneSetAsCurrentResponse::has_show() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.show_ != nullptr);
  return value;
}
inline void SceneSetAsCurrentResponse::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ != nullptr) _impl_.show_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Show& SceneSetAsCurrentResponse::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Show* p = _impl_.show_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Show&>(::proto::_Show_default_instance_);
}
inline const ::proto::Show& SceneSetAsCurrentResponse::show() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneSetAsCurrentResponse.show)
  return _internal_show();
}
inline void SceneSetAsCurrentResponse::unsafe_arena_set_allocated_show(::proto::Show* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.show_);
  }
  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SceneSetAsCurrentResponse.show)
}
inline ::proto::Show* SceneSetAsCurrentResponse::release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* released = _impl_.show_;
  _impl_.show_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Show* SceneSetAsCurrentResponse::unsafe_arena_release_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneSetAsCurrentResponse.show)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Show* temp = _impl_.show_;
  _impl_.show_ = nullptr;
  return temp;
}
inline ::proto::Show* SceneSetAsCurrentResponse::_internal_mutable_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.show_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Show>(GetArena());
    _impl_.show_ = reinterpret_cast<::proto::Show*>(p);
  }
  return _impl_.show_;
}
inline ::proto::Show* SceneSetAsCurrentResponse::mutable_show() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Show* _msg = _internal_mutable_show();
  // @@protoc_insertion_point(field_mutable:proto.SceneSetAsCurrentResponse.show)
  return _msg;
}
inline void SceneSetAsCurrentResponse::set_allocated_show(::proto::Show* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.show_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.show_ = reinterpret_cast<::proto::Show*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneSetAsCurrentResponse.show)
}

// -------------------------------------------------------------------

// SceneGetCurrentResponse

// string scene_id = 2;
inline void SceneGetCurrentResponse::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.ClearToEmpty();
}
inline const std::string& SceneGetCurrentResponse::scene_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SceneGetCurrentResponse.scene_id)
  return _internal_scene_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SceneGetCurrentResponse::set_scene_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.SceneGetCurrentResponse.scene_id)
}
inline std::string* SceneGetCurrentResponse::mutable_scene_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_scene_id();
  // @@protoc_insertion_point(field_mutable:proto.SceneGetCurrentResponse.scene_id)
  return _s;
}
inline const std::string& SceneGetCurrentResponse::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_.Get();
}
inline void SceneGetCurrentResponse::_internal_set_scene_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.Set(value, GetArena());
}
inline std::string* SceneGetCurrentResponse::_internal_mutable_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scene_id_.Mutable( GetArena());
}
inline std::string* SceneGetCurrentResponse::release_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SceneGetCurrentResponse.scene_id)
  return _impl_.scene_id_.Release();
}
inline void SceneGetCurrentResponse::set_allocated_scene_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.scene_id_.IsDefault()) {
          _impl_.scene_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGetCurrentResponse.scene_id)
}

// -------------------------------------------------------------------

// SourceGetResponse

// .proto.Source source = 1;
inline bool SourceGetResponse::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline void SourceGetResponse::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ != nullptr) _impl_.source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Source& SourceGetResponse::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Source* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Source&>(::proto::_Source_default_instance_);
}
inline const ::proto::Source& SourceGetResponse::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceGetResponse.source)
  return _internal_source();
}
inline void SourceGetResponse::unsafe_arena_set_allocated_source(::proto::Source* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SourceGetResponse.source)
}
inline ::proto::Source* SourceGetResponse::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Source* SourceGetResponse::unsafe_arena_release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceGetResponse.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::proto::Source* SourceGetResponse::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Source>(GetArena());
    _impl_.source_ = reinterpret_cast<::proto::Source*>(p);
  }
  return _impl_.source_;
}
inline ::proto::Source* SourceGetResponse::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Source* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:proto.SourceGetResponse.source)
  return _msg;
}
inline void SourceGetResponse::set_allocated_source(::proto::Source* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SourceGetResponse.source)
}

// -------------------------------------------------------------------

// SourceAddResponse

// .proto.Source source = 1;
inline bool SourceAddResponse::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline void SourceAddResponse::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ != nullptr) _impl_.source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Source& SourceAddResponse::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Source* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Source&>(::proto::_Source_default_instance_);
}
inline const ::proto::Source& SourceAddResponse::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceAddResponse.source)
  return _internal_source();
}
inline void SourceAddResponse::unsafe_arena_set_allocated_source(::proto::Source* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SourceAddResponse.source)
}
inline ::proto::Source* SourceAddResponse::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Source* SourceAddResponse::unsafe_arena_release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceAddResponse.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::proto::Source* SourceAddResponse::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Source>(GetArena());
    _impl_.source_ = reinterpret_cast<::proto::Source*>(p);
  }
  return _impl_.source_;
}
inline ::proto::Source* SourceAddResponse::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Source* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:proto.SourceAddResponse.source)
  return _msg;
}
inline void SourceAddResponse::set_allocated_source(::proto::Source* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SourceAddResponse.source)
}

// -------------------------------------------------------------------

// SourceDuplicateResponse

// .proto.Source source = 1;
inline bool SourceDuplicateResponse::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline void SourceDuplicateResponse::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ != nullptr) _impl_.source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Source& SourceDuplicateResponse::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Source* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Source&>(::proto::_Source_default_instance_);
}
inline const ::proto::Source& SourceDuplicateResponse::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceDuplicateResponse.source)
  return _internal_source();
}
inline void SourceDuplicateResponse::unsafe_arena_set_allocated_source(::proto::Source* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SourceDuplicateResponse.source)
}
inline ::proto::Source* SourceDuplicateResponse::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Source* SourceDuplicateResponse::unsafe_arena_release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceDuplicateResponse.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::proto::Source* SourceDuplicateResponse::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Source>(GetArena());
    _impl_.source_ = reinterpret_cast<::proto::Source*>(p);
  }
  return _impl_.source_;
}
inline ::proto::Source* SourceDuplicateResponse::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Source* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:proto.SourceDuplicateResponse.source)
  return _msg;
}
inline void SourceDuplicateResponse::set_allocated_source(::proto::Source* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SourceDuplicateResponse.source)
}

// -------------------------------------------------------------------

// SourceSetPropertiesResponse

// .proto.Source source = 1;
inline bool SourceSetPropertiesResponse::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline void SourceSetPropertiesResponse::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ != nullptr) _impl_.source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::Source& SourceSetPropertiesResponse::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::proto::Source* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::Source&>(::proto::_Source_default_instance_);
}
inline const ::proto::Source& SourceSetPropertiesResponse::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.SourceSetPropertiesResponse.source)
  return _internal_source();
}
inline void SourceSetPropertiesResponse::unsafe_arena_set_allocated_source(::proto::Source* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.SourceSetPropertiesResponse.source)
}
inline ::proto::Source* SourceSetPropertiesResponse::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::Source* SourceSetPropertiesResponse::unsafe_arena_release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:proto.SourceSetPropertiesResponse.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::Source* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::proto::Source* SourceSetPropertiesResponse::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::proto::Source>(GetArena());
    _impl_.source_ = reinterpret_cast<::proto::Source*>(p);
  }
  return _impl_.source_;
}
inline ::proto::Source* SourceSetPropertiesResponse::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::proto::Source* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:proto.SourceSetPropertiesResponse.source)
  return _msg;
}
inline void SourceSetPropertiesResponse::set_allocated_source(::proto::Source* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::proto::Source*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.SourceSetPropertiesResponse.source)
}

// -------------------------------------------------------------------

// HealthResponse

// int64 timestamp = 1;
inline void HealthResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t HealthResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HealthResponse.timestamp)
  return _internal_timestamp();
}
inline void HealthResponse::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:proto.HealthResponse.timestamp)
}
inline ::int64_t HealthResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void HealthResponse::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_studio_2eproto_2epb_2eh
